{
  "clipboards": [
    {
      "id": "GgId7lWpD",
      "date": 1608088984594,
      "content": "things i need to do today dec 11\n\n- contact sasha about inboxes\n2g4N/&~\"8\"R%;wyZ\n\n- ? make some progress on 402k proj\n\n"
    },
    {
      "id": "XhOeS-Id8",
      "date": 1608088976629,
      "content": "sdafaf"
    },
    {
      "id": "gJjvqWMw-",
      "date": 1608088974427,
      "content": "dafds"
    },
    {
      "id": "SIFjrvEFQ",
      "date": 1608087172861,
      "content": "isVisible"
    },
    {
      "id": "xArKqDgUq",
      "date": 1608087138808,
      "content": "https://github.com/electron-userland/electron-builder/issues/4104"
    },
    {
      "id": "f7CI5ybJf",
      "date": 1608087016923,
      "content": "or like “it"
    },
    {
      "id": "TsbMIW26f",
      "date": 1608086985966,
      "content": "ah yeah that shou"
    },
    {
      "id": "Rbps9QfWO",
      "date": 1608086825802,
      "content": "the "
    },
    {
      "id": "OmuZzdEv7",
      "date": 1608086623922,
      "content": "or like “it"
    },
    {
      "id": "cnYJ9SGTg",
      "date": 1607731921665,
      "content": "Here is a draft of the logo utilizing some shaded palms as requested! Check it out! I think this one will fit well with your goal and branding"
    },
    {
      "id": "HrpJdbSEC",
      "date": 1607731919894,
      "content": "out"
    },
    {
      "id": "Hz7c72QnT",
      "date": 1607715058702,
      "content": "Set to low "
    },
    {
      "id": "oy1vPSMoO",
      "date": 1607713346701,
      "content": "useIntegrationLib(slug)"
    },
    {
      "id": "mbG9XRfqz",
      "date": 1607713276964,
      "content": "metaData: {status: 400, message: \"Identifier is required\", key: \"validation\", error_id: null}\n"
    },
    {
      "id": "M2EfkNf_W",
      "date": 1607713269606,
      "content": "identifier"
    },
    {
      "id": "kNtDknkgh",
      "date": 1607713184702,
      "content": "            setLoading(false)\n"
    },
    {
      "id": "lJhS5ZNqZ",
      "date": 1607713174691,
      "content": "            setLoading(false)\n"
    },
    {
      "id": "9baVsCbF1",
      "date": 1607713167694,
      "content": "            openModal(modalData)\n"
    },
    {
      "id": "4GWB7i4_B",
      "date": 1607713158726,
      "content": "        setLoading(false)\n"
    },
    {
      "id": "Xk6u_L9mS",
      "date": 1607713154692,
      "content": "            await api.post(`/apps/${slug}/fetch?now=1`)\n"
    },
    {
      "id": "MJMxoWrDK",
      "date": 1607713139698,
      "content": "        openModal(modalData)\n"
    },
    {
      "id": "tfmBV9ofE",
      "date": 1607713127698,
      "content": "        await api.post(`/apps/${slug}/fetch?now=1`)\n"
    },
    {
      "id": "vXMgV5JdF",
      "date": 1607713119697,
      "content": "\n        isConnected\n            ? await api.patch(`/apps/${slug}/connection/`, object).then()\n            : await api.post(`/apps/${slug}/connection/`, object)"
    },
    {
      "id": "14MkQM6ra",
      "date": 1607713093724,
      "content": " await api.post(`/apps/${slug}/connection/`, object)"
    },
    {
      "id": "fpmU_dt1t",
      "date": 1607713089697,
      "content": "await api.patch(`/apps/${slug}/connection/`, object)"
    },
    {
      "id": "Na8ZIDrdE",
      "date": 1607713071816,
      "content": "            await api.patch(`/apps/${slug}/connection/`, object)\n"
    },
    {
      "id": "0LtgMZM-0",
      "date": 1607713069701,
      "content": "            await api.post(`/apps/${slug}/connection/`, object)\n"
    },
    {
      "id": "X6kXqXz7s",
      "date": 1607712857462,
      "content": "                    // username={users?.data?.[0]?.login ? `${users?.data?.[0].login}` : null}\n"
    },
    {
      "id": "QV5PtF-2_",
      "date": 1607712856693,
      "content": "                    username={user?.login}\n"
    },
    {
      "id": "NQynwBDUd",
      "date": 1607712838805,
      "content": "                    // connected={users?.data?.[0]?.login ? true : false}\n"
    },
    {
      "id": "SY9sIMCrG",
      "date": 1607712836695,
      "content": "                {JSON.stringify(user)}\n"
    },
    {
      "id": "v010buzw8",
      "date": 1607712805694,
      "content": "                {user.login}\n"
    },
    {
      "id": "c9S2hRvK0",
      "date": 1607712709693,
      "content": " users?.data?.[0]"
    },
    {
      "id": "zvHMUKVMu",
      "date": 1607712700691,
      "content": "users?.data?.[0]?"
    },
    {
      "id": "Gbntm3w_9",
      "date": 1607712680692,
      "content": "repositories"
    },
    {
      "id": "b67uWfx03",
      "date": 1607712658696,
      "content": "                    name=\"Repositories\"\n"
    },
    {
      "id": "mpzteFgCO",
      "date": 1607712538770,
      "content": "/apps/github/connection/actions/loadRepositories"
    },
    {
      "id": "zsxPtbK0r",
      "date": 1607712428706,
      "content": "users?.data || "
    },
    {
      "id": "RVNSezo89",
      "date": 1607712366705,
      "content": "repos?.data"
    },
    {
      "id": "kWFta_V_r",
      "date": 1607712354802,
      "content": "repos"
    },
    {
      "id": "5IGalRoSb",
      "date": 1607712352708,
      "content": "users["
    },
    {
      "id": "m2n6YHtR-",
      "date": 1607712304704,
      "content": "users?.data?."
    },
    {
      "id": "Wf_JSvGp5",
      "date": 1607712295704,
      "content": "users"
    },
    {
      "id": "gDYw4GDCz",
      "date": 1607712284799,
      "content": "    const [repos, setRepos] = useState(null)\n"
    },
    {
      "id": "zdyGnMlz4",
      "date": 1607712282708,
      "content": "    const [users, setUsers] = useState([])\n"
    },
    {
      "id": "LYD380FUF",
      "date": 1607712278707,
      "content": "\n\n    useEffect(() => {\n        if (access_token) {\n            api.get(`/apps/${slug}/connection/user?access_token=${access_token}`).then((res) =>\n                setUsers(res?.data?.data?.users)\n            )\n\n            api.get(`/apps/${slug}/connection/actions/loadRepositories?access_token=${access_token}`).then((res) =>\n                setRepos(res?.data?.data?.repositories)\n            )\n        }\n    }, [access_token])"
    },
    {
      "id": "BxkwmZn8R",
      "date": 1607712272708,
      "content": "loadRepositories"
    },
    {
      "id": "UettVfL3m",
      "date": 1607712264695,
      "content": "    const {data: users} = useSWR(access_token ? `/apps/${slug}/connection/user?access_token=${access_token}` : null)\n"
    },
    {
      "id": "CRDMMKJSC",
      "date": 1607712257703,
      "content": "`/apps/${slug}/connection/user?access_token=${access_token}`"
    },
    {
      "id": "QHJ7GPB0h",
      "date": 1607712110701,
      "content": "data?."
    },
    {
      "id": "8rJcCbUxk",
      "date": 1607712098701,
      "content": "activities"
    },
    {
      "id": "gSxRyJU89",
      "date": 1607711924695,
      "content": "        integrate\n"
    },
    {
      "id": "C7ajzjx9B",
      "date": 1607711915698,
      "content": "integrate"
    },
    {
      "id": "PZlJvpa0B",
      "date": 1607711862698,
      "content": "    const [channels, setUserChannels] = useState(null)\n"
    },
    {
      "id": "UBrInWb8d",
      "date": 1607711833699,
      "content": "(`/apps/youtube/connection/actions/user?access_token=${access_token}`"
    },
    {
      "id": "kdeE2p92C",
      "date": 1607711822692,
      "content": "access_token"
    },
    {
      "id": "oq6IT9sg4",
      "date": 1607711815698,
      "content": ".map((channel) => ({ id: channel.id, name: channel.id }))"
    },
    {
      "id": "ldTk4-wgv",
      "date": 1607711793725,
      "content": "channelsRequest"
    },
    {
      "id": "BjXUjvywL",
      "date": 1607711789697,
      "content": "    const channels = \n"
    },
    {
      "id": "zy3uJNdO6",
      "date": 1607711758696,
      "content": "${slug}"
    },
    {
      "id": "lPJADUy9P",
      "date": 1607711745807,
      "content": "slug"
    },
    {
      "id": "VZ0pBbRue",
      "date": 1607711743695,
      "content": "const slug = 'youtube'\n"
    },
    {
      "id": "6pMxehFQq",
      "date": 1607711732715,
      "content": "youtube_"
    },
    {
      "id": "O0l7W4zAM",
      "date": 1607711728699,
      "content": "    const youtube_refresh_token = Cookies.get('youtube_refresh_token')\n"
    },
    {
      "id": "qTATTUbEO",
      "date": 1607711722465,
      "content": "    const url = integrationUrlRequest?.data?.url\n"
    },
    {
      "id": "foJHbxyI2",
      "date": 1607711721699,
      "content": "    const { data: app } = useSWR(`/app/youtube`)\n"
    },
    {
      "id": "o6IFdsfYI",
      "date": 1607711709706,
      "content": "    const [loading, setLoading] = useState(false)\n"
    },
    {
      "id": "ybI30pv2t",
      "date": 1607711703695,
      "content": "    const { app, url, loading, integrate } = useIntegrationLib(slug)\n"
    },
    {
      "id": "d2jXOeK6Y",
      "date": 1607711452671,
      "content": "\n\n    const { data: integrationUrlRequest } = useSWR(slug ? `/apps/${slug}/connection/url` : null)\n    const url = integrationUrlRequest?.data?.url"
    },
    {
      "id": "1RZ6rR0p2",
      "date": 1607711445392,
      "content": "    const [loading, setLoading] = useState(false)\n"
    },
    {
      "id": "dIhwRqNQW",
      "date": 1607711444787,
      "content": "    const integrate = async (access_token, object) => {\n"
    },
    {
      "id": "uslbuilVo",
      "date": 1607711442675,
      "content": "    const [loading, setLoading] = useState(false)\n"
    },
    {
      "id": "d2OMi3Lea",
      "date": 1607711339682,
      "content": "        await api.patch(`/apps/${slug}/connection/`, object)\n"
    },
    {
      "id": "4W51uPvvT",
      "date": 1607711333702,
      "content": "            ? await api.patch(`/apps/${slug}/connection/`, object)\n"
    },
    {
      "id": "6zbF6fSht",
      "date": 1607711329673,
      "content": "        await api.post(`/apps/${slug}/fetch?now=1`)\n"
    },
    {
      "id": "yG4aDVSR8",
      "date": 1607711319787,
      "content": "        if (app.is_connected) {\n"
    },
    {
      "id": "W0pDFq_0g",
      "date": 1607711317673,
      "content": "\n        } else {\n            await api.post(`/apps/${slug}/connection/?access_token=${access_token}`, object)\n            await api.post(`/apps/${slug}/fetch?now=1`)\n            openModal({\n                title: `${app.title} Integrated`,\n                subtitle: `You have successfully integrated your ${app.title} account, and will now see updates from ${app.title} in your eFeed.`,\n                buttonOneText: `Close`,\n                buttonTwoText: `Continue to Dashboard`,\n                buttonTwoFunction: () => () => {\n                    router.push(`/app/dashboard`)\n                }\n            })\n        }\n        setLoading(false)"
    },
    {
      "id": "TLkmX0j9w",
      "date": 1607711296678,
      "content": "            let modalData = {}\n"
    },
    {
      "id": "zGQA5lshH",
      "date": 1607711290673,
      "content": "{\n                title: `${app.title} Integrated`,\n                subtitle: `You have successfully integrated your ${app.title} account, and will now see updates from ${app.title} in your eFeed.`,\n                buttonOneText: `Close`,\n                buttonTwoText: `Continue to Dashboard`,\n                buttonTwoFunction: () => () => {\n                    router.push(`/app/dashboard`)\n                }\n            }"
    },
    {
      "id": "E34Q5wDR_",
      "date": 1607711275673,
      "content": "\n            if (isConnected) {\n                modalData = {\n                    title: `${app.title} integrated updated`,\n                    subtitle: `You have successfully updated your ${app.title} account integration.`,\n                    buttonOneText: `Manage apps`,\n                    buttonOneFunction: () => () => {\n                        hide()\n                    },\n                    buttonTwoText: `Continue to Dashboard`,\n                    buttonTwoFunction: () => () => {\n                        router.push(`/app/dashboard`)\n                    }\n                }\n            }"
    },
    {
      "id": "qOc1ud4Tq",
      "date": 1607711256672,
      "content": "    })\n"
    },
    {
      "id": "CYyvtv2rv",
      "date": 1607711248672,
      "content": "}"
    },
    {
      "id": "dojbYXfT9",
      "date": 1607711236672,
      "content": "{\n                title: `${app.title} integrated updated`,\n                subtitle: `You have successfully updated your ${app.title} account integration.`,\n                buttonOneText: `Manage apps`,\n                buttonOneFunction: () => () => {\n                    hide()\n                },\n                buttonTwoText: `Continue to Dashboard`,\n                buttonTwoFunction: () => () => {\n                    router.push(`/app/dashboard`)\n                }\n            }"
    },
    {
      "id": "QCth_XrUb",
      "date": 1607711227672,
      "content": "modalData"
    },
    {
      "id": "yi4SYA6jL",
      "date": 1607711180671,
      "content": "await"
    },
    {
      "id": "3b38fUEyU",
      "date": 1607711165671,
      "content": "api.patch(`/apps/${slug}/connection/`, object)"
    },
    {
      "id": "kgBKCnVbQ",
      "date": 1607711151782,
      "content": "isConnected"
    },
    {
      "id": "O4L5ViMDq",
      "date": 1607711149670,
      "content": "app.is_connected"
    },
    {
      "id": "hiX6aR5-g",
      "date": 1607711105660,
      "content": "        setLoading(false)\n"
    },
    {
      "id": "BzI5Po-Qj",
      "date": 1607711100698,
      "content": "            await mutate(`/app`)\n"
    },
    {
      "id": "A7pspPDjL",
      "date": 1607711096651,
      "content": "            setLoading(false)\n"
    },
    {
      "id": "rKGeWP5BE",
      "date": 1607711091789,
      "content": "            await mutate(`/app`)\n"
    },
    {
      "id": "SDt90YYof",
      "date": 1607711089698,
      "content": "            mutate(`/app`)\n"
    },
    {
      "id": "W3tOtL5Io",
      "date": 1607711085669,
      "content": ".then"
    },
    {
      "id": "KrsM-JYcG",
      "date": 1607711076439,
      "content": "            })\n"
    },
    {
      "id": "dBvUP9a5G",
      "date": 1607711075676,
      "content": "((res) => {"
    },
    {
      "id": "e86fyUvjg",
      "date": 1607711069781,
      "content": "                    })\n"
    },
    {
      "id": "oa5PBs25H",
      "date": 1607711067669,
      "content": ".then(() => {"
    },
    {
      "id": "0BNM2auf2",
      "date": 1607711015668,
      "content": "            }\n"
    },
    {
      "id": "3WXAno9Tk",
      "date": 1607711000471,
      "content": ".then((res) => {"
    },
    {
      "id": "lvfniCc4b",
      "date": 1607710999617,
      "content": "                })\n"
    },
    {
      "id": "YQWmZGwGd",
      "date": 1607710996592,
      "content": "\n                    openModal({\n                        title: `${app.title} integrated updated`,\n                        subtitle: `You have successfully updated your ${app.title} account integration.`,\n                        buttonOneText: `Manage apps`,\n                        buttonOneFunction: () => () => {\n                            hide()\n                        },\n                        buttonTwoText: `Continue to Dashboard`,\n                        buttonTwoFunction: () => () => {\n                            router.push(`/app/dashboard`)\n                        }\n                    })"
    },
    {
      "id": "8Zv0BUSdl",
      "date": 1607710993818,
      "content": "                    setLoading(false)\n"
    },
    {
      "id": "naRIB3K1m",
      "date": 1607710991784,
      "content": "                    mutate(`/app`)\n"
    },
    {
      "id": "fP06uHzRI",
      "date": 1607710989668,
      "content": "                await api.post(`/apps/${slug}/fetch?now=1`).then((res) => {\n"
    },
    {
      "id": "PtgGZiiOj",
      "date": 1607710902660,
      "content": "/${slug}"
    },
    {
      "id": "NnQzSvzdx",
      "date": 1607710897666,
      "content": "${slug}"
    },
    {
      "id": "BP05aHVma",
      "date": 1607710879670,
      "content": "                                                        mutate(`/app`)\n"
    },
    {
      "id": "_1JzKL_Oh",
      "date": 1607710790693,
      "content": "                                                        console.log(res.data.data)\n"
    },
    {
      "id": "p6XXM6tBJ",
      "date": 1607710786665,
      "content": "feeds_count"
    },
    {
      "id": "fHiLTJ1mt",
      "date": 1607710769664,
      "content": "\n                                                    pushNotification(\n                                                        'Integration deleted',\n                                                        `Your ${app?.title} integration has been deleted.`\n                                                    )"
    },
    {
      "id": "EZN8Gc_S-",
      "date": 1607710661701,
      "content": "Onboarding"
    },
    {
      "id": "H3Q7ZWyeP",
      "date": 1607710657666,
      "content": "OnboardingAsana"
    },
    {
      "id": "JyNUxkNoR",
      "date": 1607710599775,
      "content": "Window"
    },
    {
      "id": "NUuO09Z49",
      "date": 1607710597663,
      "content": "Onboarding"
    },
    {
      "id": "u6lZDGES9",
      "date": 1607710566815,
      "content": "OnboardingWindow"
    },
    {
      "id": "iqJi93Phq",
      "date": 1607710564805,
      "content": "app="
    },
    {
      "id": "Wn9189XsN",
      "date": 1607710562773,
      "content": "IntegrationPopup"
    },
    {
      "id": "x_qWpdBQ7",
      "date": 1607710560661,
      "content": "IntegrationPopup from"
    },
    {
      "id": "ZJycNisPh",
      "date": 1607710548661,
      "content": "OnboardingWindow"
    },
    {
      "id": "EwctKltKD",
      "date": 1607710429660,
      "content": "app"
    },
    {
      "id": "wJCdz5DNZ",
      "date": 1607710412659,
      "content": "props.name"
    },
    {
      "id": "DPE5HXUlY",
      "date": 1607710313653,
      "content": "app?.title"
    },
    {
      "id": "2NA6pZ7A9",
      "date": 1607710308770,
      "content": "props.app"
    },
    {
      "id": "6Of9P8PoV",
      "date": 1607710306658,
      "content": "app?.title"
    },
    {
      "id": "5nvge5lJc",
      "date": 1607710296687,
      "content": "props?.app?"
    },
    {
      "id": "VZgSB7e8a",
      "date": 1607710292658,
      "content": "app"
    },
    {
      "id": "2jOxAPW3o",
      "date": 1607710273657,
      "content": "res"
    },
    {
      "id": "7pdGxccck",
      "date": 1607710243644,
      "content": "pushNotification"
    },
    {
      "id": "5cg3wDsZW",
      "date": 1607710238658,
      "content": "                                                        openModal({})\n"
    },
    {
      "id": "Taa4WSfH3",
      "date": 1607710220656,
      "content": "hide"
    },
    {
      "id": "-Lr3NDb7d",
      "date": 1607710183655,
      "content": "openModal"
    },
    {
      "id": "XrgjdlgyP",
      "date": 1607710164655,
      "content": "feeds_count"
    },
    {
      "id": "GBgKxWXCx",
      "date": 1607710142655,
      "content": "thisApp="
    },
    {
      "id": "RXzJ8-YVS",
      "date": 1607710082768,
      "content": "                                    {JSON.stringify(props?.app)}\n"
    },
    {
      "id": "pBwbF8hq1",
      "date": 1607710080654,
      "content": "import LoadingIcon from 'components/LoadingIcon'\nimport PopupsContext from 'context/PopupsContext'\nimport { api } from 'lib/efeed'\nimport { useContext } from 'react'\nimport { mutate } from 'swr'\n\nexport default function IntegrationPopup(props) {\n    const { openModal, pushNotification } = useContext(PopupsContext)\n\n    return (\n        <div className=\"fixed inset-0 z-30 overflow-hidden\" onClick={props.hide}>\n            <section\n                className=\"absolute inset-y-0 right-0 flex max-w-full pl-10 sm:pl-16\"\n                onClick={(e) => e.stopPropagation()}\n            >\n                <div className=\"w-screen max-w-2xl\">\n                    <div className=\"flex flex-col h-full overflow-y-scroll bg-white shadow-xl\">\n                        <div className=\"flex-1\">\n                            <header className=\"px-6 py-6 bg-white border-b-2 border-gray-200 \">\n                                <div className=\"flex items-start justify-between space-x-3\">\n                                    <div className=\"flex space-x-4\">\n                                        <div className=\"w-16\">\n                                            <img src={props?.app?.logo_url} alt=\"\" />\n                                        </div>\n                                        <div className=\"space-y-1\">\n                                            <h2 className=\"text-lg font-medium leading-7 text-gray-900\">\n                                                Connect {props.name}\n                                            </h2>\n                                            <p className=\"text-sm leading-5 text-gray-500\">\n                                                Customize your feed by selecting exactly what you want to see from{' '}\n                                                {props.name}.\n                                            </p>\n                                        </div>\n                                    </div>\n                                    <div className=\"flex items-center h-7\">\n                                        <a\n                                            onClick={props.hide}\n                                            id=\"close-add-app-section-btn\"\n                                            aria-label=\"Close panel\"\n                                            className=\"text-gray-400 transition duration-150 ease-in-out hover:text-gray-500\"\n                                        >\n                                            <svg\n                                                className=\"w-6 h-6 svg-dark-inline-current-color\"\n                                                fill=\"none\"\n                                                viewBox=\"0 0 24 24\"\n                                                stroke=\"currentColor\"\n                                                data-darkreader-inline-fill\n                                                data-darkreader-inline-stroke\n                                            >\n                                                <path\n                                                    strokeLinecap=\"round\"\n                                                    strokeLinejoin=\"round\"\n                                                    strokeWidth={2}\n                                                    d=\"M6 18L18 6M6 6l12 12\"\n                                                />\n                                            </svg>\n                                        </a>\n                                    </div>\n                                </div>\n                            </header>\n                            {/* <div className=\"py-6 space-y-6 sm:py-0 sm:space-y-0 sm:divide-y sm:divide-gray-200\" /> */}\n                            <div className=\"px-4 px-6 py-6 space-y-1 border-b-2 border-gray-200 sm:space-y-0 sm:grid sm:grid-cols-3 sm:gap-4\">\n                                <div>\n                                    <label\n                                        htmlFor=\"project_description\"\n                                        className=\"block text-sm font-medium leading-5 text-gray-900\"\n                                    >\n                                        Description\n                                    </label>\n                                </div>\n                                <div className=\"sm:col-span-2\">\n                                    <div className=\"flex rounded-md shadow-sm\">\n                                        <p>{props.description}</p>\n                                    </div>\n                                </div>\n                            </div>\n\n                            {props.children}\n                        </div>\n                        <div className=\"flex-shrink-0 px-4 px-6 py-6 border-t border-gray-200\">\n                            <div className=\"flex justify-end space-x-3\">\n                                <span className=\"inline-flex mr-auto rounded-md shadow-sm\">\n                                    {JSON.stringify(props?)}\n                                    {/* {props?.app?.is_connected ? 'true' : 'false'} */}\n                                    <button\n                                        id=\"cancel-add-app-btn\"\n                                        className={`${\n                                            props?.app?.is_connected ? 'opacity-100' : 'opacity-50 cursor-not-allowed'\n                                        } py-2 px-4 border border-gray-300 rounded-md text-sm leading-5 font-medium text-gray-700 hover:text-gray-500 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-50 active:text-gray-800 transition duration-150 ease-in-out`}\n                                        onClick={() => {\n                                            if (!props?.app?.is_connected) return\n                                            openModal({\n                                                title: `Delete?`,\n                                                subtitle: `Are you sure you want to delete your integration with ${props?.app?.title}? You will no longer receive feed updates related to this integration.`,\n                                                emotion: 'negative',\n                                                buttonOneText: 'Cancel',\n                                                buttonTwoText: 'Delete',\n                                                buttonTwoFunction: () => () => {\n                                                    pushNotification(\n                                                        'Integration deleted',\n                                                        `Your ${props?.app?.title} integration has been deleted.`\n                                                    )\n                                                    api.delete(`/apps/${props.app.slug}/connection`).then((res) => {\n                                                        mutate(`/app`)\n                                                        mutate(`/app/${props.app.slug}`)\n                                                    })\n                                                }\n                                            })\n                                        }}\n                                    >\n                                        Delete\n                                    </button>\n                                </span>\n                                <span className=\"inline-flex rounded-md shadow-sm\">\n                                    <button\n                                        id=\"cancel-add-app-btn\"\n                                        className=\"px-4 py-2 text-sm font-medium leading-5 text-gray-700 transition duration-150 ease-in-out border border-gray-300 rounded-md hover:text-gray-500 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-50 active:text-gray-800\"\n                                        onClick={props.hide}\n                                    >\n                                        Cancel\n                                    </button>\n                                </span>\n                                <span className=\"inline-flex rounded-md shadow-sm\">\n                                    <button\n                                        onClick={() => {\n                                            if (!props.ready) return\n                                            if (props.onSubmit) props.onSubmit()\n                                        }}\n                                        className={`${\n                                            props.ready ? `` : 'opacity-50 cursor-not-allowed '\n                                        }inline-flex justify-center py-2 px-4 border border-transparent text-sm leading-5 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-500 focus:outline-none focus:border-indigo-700 focus:shadow-outline-indigo active:bg-indigo-700 transition duration-150 ease-in-out`}\n                                    >\n                                        {props.loading ? (\n                                            <span className=\"mr-2\">\n                                                <LoadingIcon />\n                                            </span>\n                                        ) : (\n                                            <></>\n                                        )}\n                                        Connect\n                                    </button>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </div>\n    )\n}\n"
    },
    {
      "id": "q4atxuOr7",
      "date": 1607710064653,
      "content": "                                    {JSON.stringify(props)}\n"
    },
    {
      "id": "_ey7mLio7",
      "date": 1607710027653,
      "content": "props?.app?.is_connected"
    },
    {
      "id": "y1yr30SMy",
      "date": 1607709894662,
      "content": "                                {/* // hide this on teams page */}\n"
    },
    {
      "id": "9N-qni50f",
      "date": 1607709890596,
      "content": "                                    <>\n"
    },
    {
      "id": "gLphJhY5I",
      "date": 1607709887650,
      "content": "                                {isTeamsPage && (\n"
    },
    {
      "id": "DYNeW7fjR",
      "date": 1607709859650,
      "content": "onboardingApp"
    },
    {
      "id": "cnvxEvhVf",
      "date": 1607709839650,
      "content": "    const { openModal } = useContext(PopupsContext)\n"
    },
    {
      "id": "awmepah4n",
      "date": 1607709826637,
      "content": "    // const app = appRequest?.data\n"
    },
    {
      "id": "7RRxVM77r",
      "date": 1607709821649,
      "content": "    // const { data: appRequest } = useSWR(slug ? `/app/${slug}` : null)\n"
    },
    {
      "id": "0B_1Dma4e",
      "date": 1607709753646,
      "content": "popup"
    },
    {
      "id": "SIDEcqPW4",
      "date": 1607709746652,
      "content": "                        openModal={openModal}\n"
    },
    {
      "id": "-0Ivv8NHY",
      "date": 1607709738649,
      "content": "name=\"Stripe\""
    },
    {
      "id": "6wDU52lI3",
      "date": 1607709687643,
      "content": "    const app = appRequest?.data\n"
    },
    {
      "id": "qmJmStcC-",
      "date": 1607709680648,
      "content": "    const router = useRouter()\n"
    },
    {
      "id": "lFnXJAC3f",
      "date": 1607709670648,
      "content": "hide"
    },
    {
      "id": "ClKVXISaz",
      "date": 1607709655641,
      "content": "import useC\n"
    },
    {
      "id": "1Pt2lakZ8",
      "date": 1607709634647,
      "content": "seEffect(() => {\n        console.log(user.data)\n    }, [user])"
    },
    {
      "id": "5eXBNSOQE",
      "date": 1607709603416,
      "content": "props"
    },
    {
      "id": "43mwefvWy",
      "date": 1607709602628,
      "content": "s"
    },
    {
      "id": "2PaNBffTG",
      "date": 1607709597650,
      "content": "props"
    },
    {
      "id": "My8g4x5Ds",
      "date": 1607709589641,
      "content": "IntegrationsSorter"
    },
    {
      "id": "O_fGsm2cd",
      "date": 1607709578641,
      "content": "props"
    },
    {
      "id": "ImG7M1uKb",
      "date": 1607709565647,
      "content": "popupProps"
    },
    {
      "id": "1I86BxUZ9",
      "date": 1607709543589,
      "content": "switch (app) {\n        case 'confluence':\n            return <IntegrationPopupConfluence {...popupProps} />\n        case 'asana':\n            return <IntegrationPopupAsana {...popupProps} />\n        case 'clickup':\n            return <IntegrationPopupClickUp {...popupProps} />\n        case 'google_calendar':\n            return <IntegrationPopupGCalendar {...popupProps} />\n        case 'gmail':\n            return <IntegrationPopupGmail {...popupProps} />\n        case 'github':\n            return <IntegrationPopupGitHub {...popupProps} />\n        case 'slack':\n            return <IntegrationPopupSlack {...popupProps} />\n        case 'stripe':\n            return <IntegrationPopupStripe {...popupProps} />\n        case 'twitter':\n            return <IntegrationPopupTwitter {...popupProps} />\n        case 'zapier':\n            return <IntegrationPopupZapier {...popupProps} />\n        case 'google_drive':\n        case 'google_doc':\n        case 'google_spreadsheet':\n        case 'google_form':\n        case 'google_slide':\n            return <IntegrationGoogleSuite {...popupProps} />\n        case 'jira':\n            return <IntegrationPopupJira {...popupProps} />\n        case 'hubspot':\n            return <IntegrationPopupHubspot {...popupProps} />\n        case 'youtube':\n            return <IntegrationPopupYoutube {...popupProps} />\n        default:\n            return null\n    }"
    },
    {
      "id": "HtehKm3sP",
      "date": 1607709540645,
      "content": "default "
    },
    {
      "id": "HlAH6F0YW",
      "date": 1607709529646,
      "content": "\n\nexport default function IntegrationsManager({ app, hide, data, openModal }) {\n    const popupProps = { hide, data, openModal }\n\n    switch (app) {\n        case 'confluence':\n            return <IntegrationPopupConfluence {...popupProps} />\n        case 'asana':\n            return <IntegrationPopupAsana {...popupProps} />\n        case 'clickup':\n            return <IntegrationPopupClickUp {...popupProps} />\n        case 'google_calendar':\n            return <IntegrationPopupGCalendar {...popupProps} />\n        case 'gmail':\n            return <IntegrationPopupGmail {...popupProps} />\n        case 'github':\n            return <IntegrationPopupGitHub {...popupProps} />\n        case 'slack':\n            return <IntegrationPopupSlack {...popupProps} />\n        case 'stripe':\n            return <IntegrationPopupStripe {...popupProps} />\n        case 'twitter':\n            return <IntegrationPopupTwitter {...popupProps} />\n        case 'zapier':\n            return <IntegrationPopupZapier {...popupProps} />\n        case 'google_drive':\n        case 'google_doc':\n        case 'google_spreadsheet':\n        case 'google_form':\n        case 'google_slide':\n            return <IntegrationGoogleSuite {...popupProps} />\n        case 'jira':\n            return <IntegrationPopupJira {...popupProps} />\n        case 'hubspot':\n            return <IntegrationPopupHubspot {...popupProps} />\n        case 'youtube':\n            return <IntegrationPopupYoutube {...popupProps} />\n        default:\n            return null\n    }\n}\n"
    },
    {
      "id": "b4FQsebBg",
      "date": 1607709466648,
      "content": "FeedItem"
    },
    {
      "id": "wIM8z7OJD",
      "date": 1607709460643,
      "content": "AppOnboardingContext"
    },
    {
      "id": "kDHzEhEQl",
      "date": 1607709447646,
      "content": "Onboarding"
    },
    {
      "id": "OVCEIdBW0",
      "date": 1607709395588,
      "content": "\n\n    useEffect(() => {\n        console.log(token)\n    }, [token])"
    },
    {
      "id": "5l2_zczxY",
      "date": 1607709392643,
      "content": "data?"
    },
    {
      "id": "gL7pSlMXE",
      "date": 1607709381588,
      "content": "token"
    },
    {
      "id": "lZbo76omQ",
      "date": 1607709378644,
      "content": "\n\n    useEffect(() => {\n        console.log(user.data)\n    }, [user])"
    },
    {
      "id": "-B3bakhSr",
      "date": 1607709343643,
      "content": "slugEmail"
    },
    {
      "id": "MZogHzAMa",
      "date": 1607709322644,
      "content": ".data?"
    },
    {
      "id": "fRb5ouqGI",
      "date": 1607709299641,
      "content": "slugEmail"
    },
    {
      "id": "-sv_W7L0S",
      "date": 1607709268641,
      "content": " || ''"
    },
    {
      "id": "o4l5uWp6K",
      "date": 1607709224641,
      "content": "        !!refresh_token &&\n"
    },
    {
      "id": "_Z9AymSz8",
      "date": 1607709089639,
      "content": "slug"
    },
    {
      "id": "-wPw6_uvw",
      "date": 1607709036743,
      "content": "folders?.data "
    },
    {
      "id": "MnVCEhG2H",
      "date": 1607709034638,
      "content": "folders?.data"
    },
    {
      "id": "3PFlcr_iM",
      "date": 1607708960666,
      "content": "folders?.data?.files?"
    },
    {
      "id": "UzDdyP6Pu",
      "date": 1607708956638,
      "content": "folders?.data?"
    },
    {
      "id": "6RzZ-LaXt",
      "date": 1607708926639,
      "content": "slug && "
    },
    {
      "id": "C6o5QFV84",
      "date": 1607708710633,
      "content": "GOogle"
    },
    {
      "id": "DuaYFDPP7",
      "date": 1607708688663,
      "content": "folders"
    },
    {
      "id": "Td95uvsjd",
      "date": 1607708684635,
      "content": "token"
    },
    {
      "id": "dZvA4z_da",
      "date": 1607708611745,
      "content": "    const { openModal } = useContext(PopupsContext)\n"
    },
    {
      "id": "eSLl2mj_z",
      "date": 1607708609631,
      "content": "\n\n    // useEffect(() => {\n    //     if (access_token) {\n    //         api.get(`/apps/${slug}/connection/actions/user?access_token=${access_token}`)\n    //             .then((res) => {\n    //                 setSlugEmail(res.data.data.user.emailAddress)\n    //             })\n    //             .catch(() => Cookies.remove(`${slug}_access_token`))\n\n    //         api.get(`/apps/${slug}/connection/actions/token?access_token=${access_token}`)\n    //             .then((res) => {\n    //                 setSlugToken(res.data.data.startPageToken)\n    //             })\n    //             .catch(() => Cookies.remove(`${slug}_access_token`))\n\n    //         setFolderOptions(null)\n    //         api.get(`/apps/${slug}/connection/actions/folders?access_token=${access_token}`)\n    //             .then((res) => {\n    //                 setFolderOptions(res.data.data.files)\n    //             })\n    //             .catch(() => Cookies.remove(`${slug}_access_token`))\n    //     }\n    // }, [slug, access_token])"
    },
    {
      "id": "MKNZZPtAP",
      "date": 1607708559631,
      "content": "    const [folders, setFolderOptions] = useState(null)\n"
    },
    {
      "id": "FGFxdMrB2",
      "date": 1607708519638,
      "content": "token"
    },
    {
      "id": "hsO1osDFC",
      "date": 1607708513629,
      "content": "    const [folders, setSelectedFolder] = useState(null)\n"
    },
    {
      "id": "D2gzWt50s",
      "date": 1607708497629,
      "content": "    const [slugToken, setSlugToken] = useState(null)\n"
    },
    {
      "id": "Mz4fVtw1P",
      "date": 1607708478659,
      "content": "startPageToken"
    },
    {
      "id": "JiYzoBeoa",
      "date": 1607708474633,
      "content": "    const [slugEmail, setSlugEmail] = useState(null)\n"
    },
    {
      "id": "Cec4ry14E",
      "date": 1607708466628,
      "content": "emailAddress"
    },
    {
      "id": "wJvrPQy37",
      "date": 1607708439740,
      "content": "slugEmail"
    },
    {
      "id": "6K0G7mWhw",
      "date": 1607708437615,
      "content": "const slugToken: any\n"
    },
    {
      "id": "TEw9q2ckg",
      "date": 1607708432628,
      "content": "slugEmail"
    },
    {
      "id": "cdTC1Lu88",
      "date": 1607708390743,
      "content": "store_meta"
    },
    {
      "id": "UsVmzE2E_",
      "date": 1607708388631,
      "content": "        const store_meta = {\n"
    },
    {
      "id": "ToXnn6Tw0",
      "date": 1607708380627,
      "content": "        integrate(access_token,)\n"
    },
    {
      "id": "GYiLxCPnz",
      "date": 1607708357627,
      "content": "        const store_meta = {\n            meta_identities: [\n                {\n                    key: 'access_token',\n                    value: access_token,\n                    field_type: 'string'\n                },\n                {\n                    key: 'refresh_token',\n                    value: refresh_token,\n                    field_type: 'string'\n                },\n                {\n                    key: 'scope',\n                    value: slug_scope,\n                    field_type: 'string'\n                },\n                {\n                    key: 'token_type',\n                    value: slug_token_type,\n                    field_type: 'string'\n                },\n                {\n                    key: 'expires_in',\n                    value: slug_expires_in,\n                    field_type: 'string'\n                },\n                {\n                    key: 'created',\n                    value: slug_created,\n                    field_type: 'number'\n                },\n                {\n                    key: 'email',\n                    value: slugEmail,\n                    field_type: 'string'\n                },\n                {\n                    key: 'token',\n                    value: slugToken,\n                    field_type: 'string'\n                }\n            ]\n        }\n"
    },
    {
      "id": "rwsDYwtIT",
      "date": 1607708350627,
      "content": "{\n            meta_identities: [\n                {\n                    key: 'access_token',\n                    value: access_token,\n                    field_type: 'string'\n                },\n                {\n                    key: 'refresh_token',\n                    value: refresh_token,\n                    field_type: 'string'\n                },\n                {\n                    key: 'scope',\n                    value: slug_scope,\n                    field_type: 'string'\n                },\n                {\n                    key: 'token_type',\n                    value: slug_token_type,\n                    field_type: 'string'\n                },\n                {\n                    key: 'expires_in',\n                    value: slug_expires_in,\n                    field_type: 'string'\n                },\n                {\n                    key: 'created',\n                    value: slug_created,\n                    field_type: 'number'\n                },\n                {\n                    key: 'email',\n                    value: slugEmail,\n                    field_type: 'string'\n                },\n                {\n                    key: 'token',\n                    value: slugToken,\n                    field_type: 'string'\n                }\n            ]\n        }"
    },
    {
      "id": "ayljmzHsT",
      "date": 1607708340627,
      "content": "integrate"
    },
    {
      "id": "wK1mP1FQh",
      "date": 1607708326627,
      "content": "    const readty = hasMetaIdentities && selectedIntegrations.length > 0 && \n"
    },
    {
      "id": "3nCNXr0fZ",
      "date": 1607708314634,
      "content": "selectedFolder === null"
    },
    {
      "id": "1BHgHtgub",
      "date": 1607708308627,
      "content": "selectedIntegrations.includes('folder')"
    },
    {
      "id": "UZ-NcSY_C",
      "date": 1607708299626,
      "content": "selectedIntegrations.length"
    },
    {
      "id": "QFieq5zmp",
      "date": 1607708265630,
      "content": "/apps/${slug}/connection/actions/folders?access_token=${access_token}"
    },
    {
      "id": "3da5OoXx5",
      "date": 1607708255625,
      "content": "\n\n    const { data: token } = useSWR(\n        access_token ? `/apps/${slug}/connection/actions/token?access_token=${access_token}` : null\n    )"
    },
    {
      "id": "hHcF00tKU",
      "date": 1607708234625,
      "content": "/apps/${slug}/connection/actions/token?access_token=${access_token}"
    },
    {
      "id": "sgNPlC67A",
      "date": 1607708216625,
      "content": "\n\n    const { data: user } = useSWR(\n        access_token ? `/apps/${slug}/connection/actions/user?access_token=${access_token}` : null\n    )"
    },
    {
      "id": "S9r36mspp",
      "date": 1607707858035,
      "content": "access_token"
    },
    {
      "id": "iJzmxmHF9",
      "date": 1607707855924,
      "content": "`/apps/${slug}/connection/actions/user?access_token=${access_token}`"
    },
    {
      "id": "u3RZK1cyW",
      "date": 1607707815927,
      "content": "    const url = integrationUrlRequest?.url\n"
    },
    {
      "id": "zclZLnsvq",
      "date": 1607707807685,
      "content": "    const { data: integrationUrlRequest } = useSWR(slug ? `/apps/${slug}/connection/url` : null)\n"
    },
    {
      "id": "wxvwTlcQA",
      "date": 1607707806923,
      "content": "    const { data: app } = useSWR(slug ? `/app/${slug}` : null)\n"
    },
    {
      "id": "50JV1rdnQ",
      "date": 1607707793918,
      "content": "    const slug_refresh_token = Cookies.get(`${slug}_refresh_token`)\n"
    },
    {
      "id": "JRZTfmz0f",
      "date": 1607707784923,
      "content": "    const [loading, setLoading] = useState(false)\n"
    },
    {
      "id": "Pp0Oxev07",
      "date": 1607707770928,
      "content": "    const slug = props?.data?.slug\n"
    },
    {
      "id": "txLPwKBWu",
      "date": 1607707764951,
      "content": "    const router = useRouter()\n"
    },
    {
      "id": "f9g-jgkTE",
      "date": 1607707760926,
      "content": "    const { app, url, loading, integrate } = useIntegrationLib(slug)\n"
    },
    {
      "id": "SDvHSWzBR",
      "date": 1607707750692,
      "content": "    const router = useRouter()\n"
    },
    {
      "id": "ntbww0GyE",
      "date": 1607707749924,
      "content": "    const { openModal } = useContext(PopupsContext)\n"
    },
    {
      "id": "1zdNggIcA",
      "date": 1607707720922,
      "content": "hasMetaIdentities && selectedIntegrations.length > 0"
    },
    {
      "id": "yMGLGJf5G",
      "date": 1607707705767,
      "content": "        }\n"
    },
    {
      "id": "ezVOLwTPO",
      "date": 1607707704767,
      "content": "                    router.push('/app/dashboard')\n"
    },
    {
      "id": "U3zf4bs0u",
      "date": 1607707703763,
      "content": "            await api.post(`/apps/gmail/connection`, store_meta)\n"
    },
    {
      "id": "crX6Z1aVZ",
      "date": 1607707702777,
      "content": "                title: 'Gmail integrated updated',\n"
    },
    {
      "id": "6Ai0epaDv",
      "date": 1607707701758,
      "content": "                    field_type: 'string'\n"
    },
    {
      "id": "dCtnuAzBM",
      "date": 1607707700791,
      "content": "                    key: 'expires_in',\n"
    },
    {
      "id": "SE42ockif",
      "date": 1607707699700,
      "content": "                    field_type: 'string'\n"
    },
    {
      "id": "LVzHiU-0x",
      "date": 1607707698925,
      "content": "            meta_identities: [\n"
    },
    {
      "id": "CIhfLPv1l",
      "date": 1607707692921,
      "content": "{\n            meta_identities: [\n                {\n                    key: 'access_token',\n                    value: access_token,\n                    field_type: 'string'\n                },\n                {\n                    key: 'refresh_token',\n                    value: refresh_token,\n                    field_type: 'string'\n                },\n                {\n                    key: 'scope',\n                    value: gmail_scope,\n                    field_type: 'string'\n                },\n                {\n                    key: 'token_type',\n                    value: gmail_token_type,\n                    field_type: 'string'\n                },\n                {\n                    key: 'expires_in',\n                    value: gmail_expires_in,\n                    field_type: 'string'\n                },\n                {\n                    key: 'created',\n                    value: gmail_created,\n                    field_type: 'number'\n                },\n                {\n                    key: 'email',\n                    value: gmail_email,\n                    field_type: 'string'\n                }\n            ]\n        }"
    },
    {
      "id": "00DxiGl9q",
      "date": 1607707678921,
      "content": "integrate"
    },
    {
      "id": "sd_vqxIDr",
      "date": 1607707665921,
      "content": "slug"
    },
    {
      "id": "Zi9E3TWJE",
      "date": 1607707636916,
      "content": "    const url = integrationUrlRequest?.data?.url\n"
    },
    {
      "id": "AFNxtGyWX",
      "date": 1607707629920,
      "content": "    const { data: integrationUrlRequest } = useSWR(`/apps/gmail/connection/url`)\n"
    },
    {
      "id": "TMgEov-z9",
      "date": 1607707622916,
      "content": "    const [loading, setLoading] = useState(false)\n"
    },
    {
      "id": "AS_VfBMNx",
      "date": 1607707613920,
      "content": "    const { app, url, loading, integrate } = useIntegrationLib('github')\n"
    },
    {
      "id": "EVKJDBy_u",
      "date": 1607707593034,
      "content": "router"
    },
    {
      "id": "EHhrW3XF6",
      "date": 1607707590919,
      "content": "function"
    },
    {
      "id": "DuJCV_p-X",
      "date": 1607707552915,
      "content": "    const gmail_refresh_token = Cookies.get('gmail_refresh_token')\n"
    },
    {
      "id": "wUauTtTdD",
      "date": 1607707546064,
      "content": "                openModal={openModal}\n"
    },
    {
      "id": "TqMNyiSL2",
      "date": 1607707544014,
      "content": "            <IntegrationPopup\n"
    },
    {
      "id": "XvNJ5ItWX",
      "date": 1607707541919,
      "content": "    const { openModal } = useContext(PopupsContext)\n"
    },
    {
      "id": "kD4CfdyBz",
      "date": 1607707517622,
      "content": "openModal"
    },
    {
      "id": "xt7lonaof",
      "date": 1607707517039,
      "content": "    const router = useRouter()\n"
    },
    {
      "id": "2Suy7cm3K",
      "date": 1607707514947,
      "content": "    const { app, url, loading, integrate } = useIntegrationLib('github')\n"
    },
    {
      "id": "kZixV_YjE",
      "date": 1607707510922,
      "content": "    const { app, loading, integrate, url } = useIntegrationLib(slug)\n"
    },
    {
      "id": "mLPLaeAl9",
      "date": 1607668914948,
      "content": "https://www.reddit.com/r/m1macs"
    },
    {
      "id": "kJJ1YaDGK",
      "date": 1607668901955,
      "content": "reddd"
    },
    {
      "id": "_uTg0w-Nb",
      "date": 1607667781674,
      "content": "            react-copy-to-clipboard\n"
    },
    {
      "id": "PEZ-VZML9",
      "date": 1607666083554,
      "content": "Mbps download\n\n0.08\n\nMbps upload\n\nLatency: 17 ms\nServer: Miami\nYour Internet connection is fast.\n\nYour Internet connecti"
    },
    {
      "id": "8tVd8tldf",
      "date": 1607666079480,
      "content": "Put"
    },
    {
      "id": "uFbH54c6_",
      "date": 1607666077974,
      "content": "    useEffect(() => {"
    },
    {
      "id": "5TR9wxBsh",
      "date": 1607666064669,
      "content": "Put"
    },
    {
      "id": "bMUpfwfw2",
      "date": 1607664193536,
      "content": "    useEffect(() => {\n"
    },
    {
      "id": "AnIokaobK",
      "date": 1607664192411,
      "content": "                    {stas?.fsSize?.map((disk, index) => {"
    },
    {
      "id": "AyoTBDK_M",
      "date": 1607663748407,
      "content": "async"
    },
    {
      "id": "T9V5jlrW2",
      "date": 1607663728907,
      "content": "getNetworkDownloadSpeed"
    },
    {
      "id": "66NST-NMYZ",
      "date": 1607663712907,
      "content": "                </div>\n"
    },
    {
      "id": "flggQmbrE",
      "date": 1607663712407,
      "content": "                    })}\n"
    },
    {
      "id": "8urQjGIcNf",
      "date": 1607663711907,
      "content": "                                    <span className='text-xs font-medium'>\n"
    },
    {
      "id": "Hz6Ni2q3l",
      "date": 1607663711407,
      "content": "                        // if (disk.mount.startsWith('/Volumes'))\n"
    },
    {
      "id": "AHTYeAmPhJ",
      "date": 1607663710907,
      "content": "                    {stas?.fsSize?.map((disk, index) => {\n"
    },
    {
      "id": "6SK2ToU_m",
      "date": 1607663710407,
      "content": "t"
    },
    {
      "id": "ZpEmOVoSD",
      "date": 1607663708908,
      "content": "\n                <div>\n                    <div className='text-green-500 text-2xl font-bold'>Storage</div>\n                    {stats?.fsSize?.map((disk, index) => {\n                        // if (disk.mount.startsWith('/Volumes'))\n                        return (\n                            <>\n                                <p className='flex items-center'>\n                                    <span>{disk.mount}</span>\n                                    <div className='ml-auto' />\n                                    <span className='text-xs font-medium'>\n                                        {prettyBytes(disk.size - disk.used || 0)} / {prettyBytes(disk.size || 0)}\n                                    </span>\n                                </p>\n                            </>\n                        )\n                    })}\n                </div>"
    },
    {
      "id": "fIjHoRPdY",
      "date": 1607663703409,
      "content": "'text-xs text-center space-y-1 font-medium text-gray-400'>\n                    <p className='text-lg font-light'>\n                        {stats.osInfo.distro} {stats.osInfo.release}\n                    </p>\n                    <p className='font-bold'>{stats.osInfo.hostname}</p>\n                    <p>Serial: {stats?.system?.serial}</p>\n                    <p>UUID: {stats?.system?.uuid}</p>\n                    <p>Model: {stats?.system?.model}</p>\n                    <p>CPU: {stats?.cpu?.manufacturer}</p>\n                </div>"
    },
    {
      "id": "qyuVh15UR",
      "date": 1607663690407,
      "content": "getNetworkDownloadSpeed"
    },
    {
      "id": "-6L-abBe4",
      "date": 1607663687407,
      "content": "getNetworkUploadSpeed()\n"
    },
    {
      "id": "TIourCJct",
      "date": 1607663686406,
      "content": "getNetworkDownloadSpeed()\n"
    },
    {
      "id": "7LhshgfR7",
      "date": 1607663679909,
      "content": "const testNetworkSpeed = new NetworkSpeed();\n \ngetNetworkDownloadSpeed();\n \nasync function getNetworkDownloadSpeed() {\n  const baseUrl = 'http://eu.httpbin.org/stream-bytes/50000000';\n  const fileSizeInBytes = 50000000;\n  const speed = await testNetworkSpeed.checkDownloadSpeed(baseUrl, fileSizeInBytes);\n  console.log(speed);\n}\n \ngetNetworkUploadSpeed();\n \nasync function getNetworkUploadSpeed() {\n  const options = {\n    hostname: 'www.google.com',\n    port: 80,\n    path: '/catchers/544b09b4599c1d0200000289',\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  const fileSizeInBytes = 2000000\n  const speed = await testNetworkSpeed.checkUploadSpeed(options, fileSizeInBytes);\n  console.log(speed);\n}"
    },
    {
      "id": "WlUEBRvwR",
      "date": 1607663539502,
      "content": "py-12"
    },
    {
      "id": "P0ejX5Gqh",
      "date": 1607661755527,
      "content": "\n                <NavLink href='/' color='green'>\n                    Clipboards\n                </NavLink>\n                <NavLink href='/notes' color='pink'>\n                    Notes\n                </NavLink>"
    },
    {
      "id": "OMx3Zqj5v",
      "date": 1607661540137,
      "content": "        }"
    },
    {
      "id": "4n_0JygPB",
      "date": 1607661538636,
      "content": "            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }"
    },
    {
      "id": "xyq3EK-7G",
      "date": 1607661537636,
      "content": "        }"
    },
    {
      "id": "1BPS6m5xvJ",
      "date": 1607661530640,
      "content": "            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }"
    },
    {
      "id": "UNJTL7IBV",
      "date": 1607661530136,
      "content": "        }"
    },
    {
      "id": "kgv9_MTR4",
      "date": 1607661528137,
      "content": "            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }"
    },
    {
      "id": "uEywORpwq",
      "date": 1607661527142,
      "content": "        }"
    },
    {
      "id": "wK7ZYVtnE",
      "date": 1607661524136,
      "content": "            db.get('clipboards').push(newClip).write()"
    },
    {
      "id": "l-F9PIHiw",
      "date": 1607661495637,
      "content": "            setClipboards([newClip, ...filterExisting])"
    },
    {
      "id": "8XK21YuXM",
      "date": 1607661481636,
      "content": "            db.get('clipboards').push(newClip).write()"
    },
    {
      "id": "Giqy_GM_j",
      "date": 1607661480636,
      "content": "            setClipboards([newClip, ...filterExisting])"
    },
    {
      "id": "LVjaSGoak",
      "date": 1607661479637,
      "content": "            db.get('clipboards').push(newClip).write()"
    },
    {
      "id": "lRrvNSD27",
      "date": 1607661478140,
      "content": "            setClipboards([newClip, ...filterExisting])"
    },
    {
      "id": "ZsXAGQzQb",
      "date": 1607661418640,
      "content": "            db.get('clipboards').push(newClip).write()"
    },
    {
      "id": "E3rnFbK7x",
      "date": 1607661416639,
      "content": "            setClipboards([newClip, ...filterExisting])"
    },
    {
      "id": "hRohMfvq-",
      "date": 1607661415138,
      "content": "            db.get('clipboards').push(newClip).write()"
    },
    {
      "id": "cHhX-tPoQ",
      "date": 1607661414136,
      "content": "            setClipboards([newClip, ...filterExisting])"
    },
    {
      "id": "3o9gg8mx7W",
      "date": 1607661413638,
      "content": "            db.get('clipboards').push(newClip).write()"
    },
    {
      "id": "fy_yPCy1w",
      "date": 1607661413135,
      "content": "            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }"
    },
    {
      "id": "mZD1utrol",
      "date": 1607661372634,
      "content": "        }"
    },
    {
      "id": "8gF-Vbad4",
      "date": 1607661370639,
      "content": "            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }"
    },
    {
      "id": "1GhV3mswL",
      "date": 1607661367134,
      "content": "        }"
    },
    {
      "id": "UIW5HriYe",
      "date": 1607661366139,
      "content": "            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }"
    },
    {
      "id": "fSAy8z09e",
      "date": 1607661364133,
      "content": "        }"
    },
    {
      "id": "2EZB6hlac",
      "date": 1607661363133,
      "content": "            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }"
    },
    {
      "id": "QfjiYAofI",
      "date": 1607661355134,
      "content": "        }"
    },
    {
      "id": "HQHc64s79t",
      "date": 1607661353638,
      "content": "            db.get('clipboards').push(newClip).write()"
    },
    {
      "id": "nSCsJeNoM",
      "date": 1607661353133,
      "content": "            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }"
    },
    {
      "id": "FrfUEvJPI",
      "date": 1607661352139,
      "content": "            setClipboards([newClip, ...filterExisting])"
    },
    {
      "id": "R6xJarOm8",
      "date": 1607661350133,
      "content": "            db.get('clipboards').push(newClip).write()"
    },
    {
      "id": "JftrZXeAu",
      "date": 1607661349138,
      "content": "            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }"
    },
    {
      "id": "KjeXbjL7b",
      "date": 1607661348133,
      "content": "            db.get('clipboards').push(newClip).write()"
    },
    {
      "id": "pjg02JaYf",
      "date": 1607661346634,
      "content": "            setClipboards([newClip, ...filterExisting])"
    },
    {
      "id": "QOKZ0H2uU",
      "date": 1607661345137,
      "content": "            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }\n"
    },
    {
      "id": "03_blPFBD",
      "date": 1607661344137,
      "content": "            db.get('clipboards').push(newClip).write()\n"
    },
    {
      "id": "eaHak2nAp",
      "date": 1607661343138,
      "content": "            <div className='space-y-2'>\n"
    },
    {
      "id": "qBqetH4OP",
      "date": 1607661342140,
      "content": "        }\n"
    },
    {
      "id": "vIyfSNkFs",
      "date": 1607661340138,
      "content": "            db.get('clipboards').push(newClip).write()\n"
    },
    {
      "id": "4lPG7dBHR",
      "date": 1607661339137,
      "content": "            setClipboards([newClip, ...filterExisting])\n"
    },
    {
      "id": "0g_ZeCzAV",
      "date": 1607661338138,
      "content": "            db.get('clipboards').push(newClip).write()\n"
    },
    {
      "id": "jOyB7HUgF",
      "date": 1607661337638,
      "content": "            setClipboards([newClip, ...filterExisting])\n"
    },
    {
      "id": "YalHF818I",
      "date": 1607661333137,
      "content": "            db.get('clipboards').push(newClip).write()\n"
    },
    {
      "id": "M_EXi0Oqq",
      "date": 1607661332638,
      "content": "            setClipboards([newClip, ...filterExisting])\n"
    },
    {
      "id": "3tpxfMOnrQ",
      "date": 1607661331637,
      "content": "            const filterExisting = clipboards.filter((clip) => clip.content !== newClip.content)\n"
    },
    {
      "id": "tDWbWY3lh",
      "date": 1607661331138,
      "content": "            if (/^\\s*$/.test(newClip.content)) return\n"
    },
    {
      "id": "6OTdLB6FE",
      "date": 1607661330138,
      "content": "            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }\n"
    },
    {
      "id": "v8CqKYmKu",
      "date": 1607661322638,
      "content": "            console.log(newClip)"
    },
    {
      "id": "F8YlXoB1g",
      "date": 1607661313138,
      "content": "            filterExistingx"
    },
    {
      "id": "fWrwYMVP8",
      "date": 1607661310636,
      "content": "filterExisting"
    },
    {
      "id": "qyQypKusy",
      "date": 1607661306637,
      "content": "clipboards"
    },
    {
      "id": "kag1vIJLt",
      "date": 1607661288138,
      "content": "            if (/^\\s*$/.test(newClip.content)) return"
    },
    {
      "id": "nDfg2tXdE",
      "date": 1607661286636,
      "content": "filterExisting"
    },
    {
      "id": "CsviB-5DU",
      "date": 1607661285137,
      "content": "            if (/^\\s*$/.test(newClip.content)) return"
    },
    {
      "id": "mmXgqBcj4",
      "date": 1607661283137,
      "content": "\n\n            // if (clipboards.find((clip) => clip.content == newClip.content)) {\n            //     filterExisting.filter(clip => clip.content !== newClip.content)\n            // }"
    },
    {
      "id": "3Qqy5g71o",
      "date": 1607661281637,
      "content": "filterExisting"
    },
    {
      "id": "hbMHtqDKx",
      "date": 1607661279638,
      "content": "            filterExistingx"
    },
    {
      "id": "qZkQ5svOz",
      "date": 1607661278133,
      "content": ".filter((clip) => clip.content !== newClip.content)"
    },
    {
      "id": "CkSiebXvp",
      "date": 1607661275636,
      "content": "            filterExistingx"
    },
    {
      "id": "nPYYfeNQj",
      "date": 1607661274632,
      "content": ".filter((clip) => clip.content !== newClip.content)"
    },
    {
      "id": "4woix4M9I",
      "date": 1607661273634,
      "content": "\n\n            // if (clipboards.find((clip) => clip.content == newClip.content)) {\n            //     filterExisting.filter(clip => clip.content !== newClip.content)\n            // }"
    },
    {
      "id": "09eXoqaBV",
      "date": 1607661272633,
      "content": "            filterExistingx\n"
    },
    {
      "id": "nvrFymPdX",
      "date": 1607661270636,
      "content": ".filter((clip) => clip.content !== newClip.content)"
    },
    {
      "id": "NvhIvbYlh",
      "date": 1607661257136,
      "content": "filterExisting"
    },
    {
      "id": "XEvZSQfI3",
      "date": 1607661251637,
      "content": "\n\n            // if (clipboards.find((clip) => clip.content == newClip.content)) {\n            //     filterExisting.filter(clip => clip.content !== newClip.content)\n            // }"
    },
    {
      "id": "bszafAW_L",
      "date": 1607661250637,
      "content": "            console.log(newClip)"
    },
    {
      "id": "xXBiTAsqR",
      "date": 1607661244637,
      "content": "\n\n            // if (clipboards.find((clip) => clip.content == newClip.content)) {\n            //     filterExisting.filter(clip => clip.content !== newClip.content)\n            // }"
    },
    {
      "id": "ZRuAfeowr",
      "date": 1607661243633,
      "content": "            console.log(newClip)"
    },
    {
      "id": "nIXwsfbUp",
      "date": 1607661242132,
      "content": "\n\n            // if (clipboards.find((clip) => clip.content == newClip.content)) {\n            //     filterExisting.filter(clip => clip.content !== newClip.content)\n            // }"
    },
    {
      "id": "ZCxZ0d00z",
      "date": 1607661230635,
      "content": "            console.log(newClip)\n"
    },
    {
      "id": "Ur0xJ5OJM",
      "date": 1607661228634,
      "content": "            if (/^\\s*$/.test(newClip.content)) return\n"
    },
    {
      "id": "0b6FItRgX",
      "date": 1607661220135,
      "content": "\n\n            // if (clipboards.find((clip) => clip.content == newClip.content)) {\n            //     filterExisting.filter(clip => clip.content !== newClip.content)\n            // }"
    },
    {
      "id": "Hi1d75lN1",
      "date": 1607661213135,
      "content": "filterExisting"
    },
    {
      "id": "NA6-94YVt",
      "date": 1607661202634,
      "content": "                filterExisting.filter(clip => clip.content !== newClip.content)\n"
    },
    {
      "id": "gxi6qiEsJ",
      "date": 1607661158634,
      "content": "filterExisting"
    },
    {
      "id": "lbwSRraZG",
      "date": 1607661121130,
      "content": "ect\nwebpack-internal:///./pages/index.js:62 Object\nwebpack-internal:///./pages/index.js:62 Object\nwebpack-internal:///./pages/index.js:62 Object\nwebpack-internal:///./pages/index.js:62 Object\nwebpack-internal:///./pages/index.js:62 Object\nwebpack-internal:///./pages/index.js:62 Object\nwebpack-internal:///./pages/index.js:62 Obj"
    },
    {
      "id": "unddyqw6j",
      "date": 1607661120629,
      "content": "            if (clipboards.find(clip => clip.content == newClip.content)) console.log('exists')"
    },
    {
      "id": "kIaPI6BJ8",
      "date": 1607661119635,
      "content": "ect\nwebpack-internal:///./pages/index.js:62 Object\nwebpack-internal:///./pages/index.js:62 Object\nwebpack-internal:///./pages/index.js:62 Object\nwebpack-internal:///./pages/index.js:62 Object\nwebpack-internal:///./pages/index.js:62 Object\nwebpack-internal:///./pages/index.js:62 Object\nwebpack-internal:///./pages/index.js:62 Obj"
    },
    {
      "id": "Hl42X5Whd",
      "date": 1607661114636,
      "content": "clipboards.find(clip => clip.content == newClip.content)"
    },
    {
      "id": "FIWc0m_6Y",
      "date": 1607661105587,
      "content": "            if (clipboards.find(clip => clip.content == newClip.content)) console.log('exists')\n"
    },
    {
      "id": "Lds2o__y1",
      "date": 1607661096552,
      "content": "clipboards.find(clip => clip.content == newClip.content)"
    },
    {
      "id": "ojXTzyvcm",
      "date": 1607661027675,
      "content": "newClip"
    },
    {
      "id": "1-iK8gzAG",
      "date": 1607661019634,
      "content": "const { db } = global\nimport { useEffect, useState } from 'react'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport shortid from 'shortid'\n\nconst Clip = ({ content }) => {\n    const [showBanner, setShowBanner] = useState(false)\n\n    useEffect(() => {\n        if (showBanner) setTimeout(() => setShowBanner(false), 1000)\n    }, [showBanner])\n\n    if (!content) return <></>\n    return (\n        <div\n            // onClick={() => console.log('123')}\n            className={`${\n                showBanner ? 'bg-gray-200' : 'bg-gray-100'\n            } relative text-xs max-h-16 overflow-auto transition ease-in-out duration-150 hover:bg-gray-200 px-3 py-2 rounded`}>\n            {content}\n        </div>\n    )\n}\n\nconst ClipboardPage = ({ stats }) => {\n    const loadClipboards = db.get('clipboards').value()\n    const [clipboards, setClipboards] = useState(loadClipboards)\n\n    useEffect(() => {\n        const handler = () => {\n            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }\n            console.log(newClip)\n\n            if (/^\\s*$/.test(newClip.content)) return\n\n            setClipboards([newClip, ...clipboards])\n            db.get('clipboards').push(newClip).write()\n        }\n\n        clipboard.on('text-changed', handler).startWatching()\n\n        return () => {\n            clipboard.off('text-changed', handler)\n        }\n    }, [clipboards])\n\n    return (\n        <>\n            <div className='space-y-2'>\n                {clipboards\n                    ?.sort(function (a, b) {\n                        var dateA = new Date(b.date)\n                        var dateB = new Date(a.date)\n\n                        if (dateA < dateB) {\n                            return -1\n                        }\n                        if (dateA > dateB) {\n                            return 1\n                        }\n                        return 0\n                    })\n                    ?.slice(0, 100)\n                    ?.map((clip, index) => {\n                        return (\n                            <CopyToClipboard key={clip.id} text={clip.content}>\n                                <button className='outline-none w-full text-left'>\n                                    <Clip content={clip.content} />\n                                </button>\n                            </CopyToClipboard>\n                        )\n                    })}\n            </div>\n            react-copy-to-clipboard\n        </>\n    )\n}\n\nexport default ClipboardPage"
    },
    {
      "id": "pxcJoavla",
      "date": 1607661016130,
      "content": "render() {\n    return ("
    },
    {
      "id": "rcUveoTTQ",
      "date": 1607661013129,
      "content": "const { db } = global\nimport { useEffect, useState } from 'react'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport shortid from 'shortid'\n\nconst Clip = ({ content }) => {\n    const [showBanner, setShowBanner] = useState(false)\n\n    useEffect(() => {\n        if (showBanner) setTimeout(() => setShowBanner(false), 1000)\n    }, [showBanner])\n\n    if (!content) return <></>\n    return (\n        <div\n            // onClick={() => console.log('123')}\n            className={`${\n                showBanner ? 'bg-gray-200' : 'bg-gray-100'\n            } relative text-xs max-h-16 overflow-auto transition ease-in-out duration-150 hover:bg-gray-200 px-3 py-2 rounded`}>\n            {content}\n        </div>\n    )\n}\n\nconst ClipboardPage = ({ stats }) => {\n    const loadClipboards = db.get('clipboards').value()\n    const [clipboards, setClipboards] = useState(loadClipboards)\n\n    useEffect(() => {\n        const handler = () => {\n            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }\n            console.log(newClip)\n\n            if (/^\\s*$/.test(newClip.content)) return\n\n            setClipboards([newClip, ...clipboards])\n            db.get('clipboards').push(newClip).write()\n        }\n\n        clipboard.on('text-changed', handler).startWatching()\n\n        return () => {\n            clipboard.off('text-changed', handler)\n        }\n    }, [clipboards])\n\n    return (\n        <>\n            <div className='space-y-2'>\n                {clipboards\n                    ?.sort(function (a, b) {\n                        var dateA = new Date(b.date)\n                        var dateB = new Date(a.date)\n\n                        if (dateA < dateB) {\n                            return -1\n                        }\n                        if (dateA > dateB) {\n                            return 1\n                        }\n                        return 0\n                    })\n                    ?.slice(0, 100)\n                    ?.map((clip, index) => {\n                        return (\n                            <CopyToClipboard key={clip.id} text={clip.content}>\n                                <button className='outline-none w-full text-left'>\n                                    <Clip content={clip.content} />\n                                </button>\n                            </CopyToClipboard>\n                        )\n                    })}\n            </div>\n            react-copy-to-clipboard\n        </>\n    )\n}\n\nexport default ClipboardPage"
    },
    {
      "id": "kLiyNagOY",
      "date": 1607661000130,
      "content": "render() {\n    return ("
    },
    {
      "id": "oNMWbOOLY",
      "date": 1607660998132,
      "content": "const { db } = global\nimport { useEffect, useState } from 'react'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport shortid from 'shortid'\n\nconst Clip = ({ content }) => {\n    const [showBanner, setShowBanner] = useState(false)\n\n    useEffect(() => {\n        if (showBanner) setTimeout(() => setShowBanner(false), 1000)\n    }, [showBanner])\n\n    if (!content) return <></>\n    return (\n        <div\n            // onClick={() => console.log('123')}\n            className={`${\n                showBanner ? 'bg-gray-200' : 'bg-gray-100'\n            } relative text-xs max-h-16 overflow-auto transition ease-in-out duration-150 hover:bg-gray-200 px-3 py-2 rounded`}>\n            {content}\n        </div>\n    )\n}\n\nconst ClipboardPage = ({ stats }) => {\n    const loadClipboards = db.get('clipboards').value()\n    const [clipboards, setClipboards] = useState(loadClipboards)\n\n    useEffect(() => {\n        const handler = () => {\n            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }\n            console.log(newClip)\n\n            if (/^\\s*$/.test(newClip.content)) return\n\n            setClipboards([newClip, ...clipboards])\n            db.get('clipboards').push(newClip).write()\n        }\n\n        clipboard.on('text-changed', handler).startWatching()\n\n        return () => {\n            clipboard.off('text-changed', handler)\n        }\n    }, [clipboards])\n\n    return (\n        <>\n            <div className='space-y-2'>\n                {clipboards\n                    ?.sort(function (a, b) {\n                        var dateA = new Date(b.date)\n                        var dateB = new Date(a.date)\n\n                        if (dateA < dateB) {\n                            return -1\n                        }\n                        if (dateA > dateB) {\n                            return 1\n                        }\n                        return 0\n                    })\n                    ?.slice(0, 100)\n                    ?.map((clip, index) => {\n                        return (\n                            <CopyToClipboard key={clip.id} text={clip.content}>\n                                <button className='outline-none w-full text-left'>\n                                    <Clip content={clip.content} />\n                                </button>\n                            </CopyToClipboard>\n                        )\n                    })}\n            </div>\n            react-copy-to-clipboard\n        </>\n    )\n}\n\nexport default ClipboardPage"
    },
    {
      "id": "gMpe361g_",
      "date": 1607660994631,
      "content": "render() {\n    return ("
    },
    {
      "id": "4v_SvWDb4",
      "date": 1607660990633,
      "content": "const { db } = global\nimport { useEffect, useState } from 'react'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport shortid from 'shortid'\n\nconst Clip = ({ content }) => {\n    const [showBanner, setShowBanner] = useState(false)\n\n    useEffect(() => {\n        if (showBanner) setTimeout(() => setShowBanner(false), 1000)\n    }, [showBanner])\n\n    if (!content) return <></>\n    return (\n        <div\n            // onClick={() => console.log('123')}\n            className={`${\n                showBanner ? 'bg-gray-200' : 'bg-gray-100'\n            } relative text-xs max-h-16 overflow-auto transition ease-in-out duration-150 hover:bg-gray-200 px-3 py-2 rounded`}>\n            {content}\n        </div>\n    )\n}\n\nconst ClipboardPage = ({ stats }) => {\n    const loadClipboards = db.get('clipboards').value()\n    const [clipboards, setClipboards] = useState(loadClipboards)\n\n    useEffect(() => {\n        const handler = () => {\n            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }\n            console.log(newClip)\n\n            if (/^\\s*$/.test(newClip.content)) return\n\n            setClipboards([newClip, ...clipboards])\n            db.get('clipboards').push(newClip).write()\n        }\n\n        clipboard.on('text-changed', handler).startWatching()\n\n        return () => {\n            clipboard.off('text-changed', handler)\n        }\n    }, [clipboards])\n\n    return (\n        <>\n            <div className='space-y-2'>\n                {clipboards\n                    ?.sort(function (a, b) {\n                        var dateA = new Date(b.date)\n                        var dateB = new Date(a.date)\n\n                        if (dateA < dateB) {\n                            return -1\n                        }\n                        if (dateA > dateB) {\n                            return 1\n                        }\n                        return 0\n                    })\n                    ?.slice(0, 100)\n                    ?.map((clip, index) => {\n                        return (\n                            <CopyToClipboard key={clip.id} text={clip.content}>\n                                <button className='outline-none w-full text-left'>\n                                    <Clip content={clip.content} />\n                                </button>\n                            </CopyToClipboard>\n                        )\n                    })}\n            </div>\n            react-copy-to-clipboard\n        </>\n    )\n}\n\nexport default ClipboardPage\n"
    },
    {
      "id": "iGuCrdzKw",
      "date": 1607660986633,
      "content": "                        if (dateA < dateB) {"
    },
    {
      "id": "j09JR8-Cc",
      "date": 1607660985629,
      "content": "const { db } = global\nimport { useEffect, useState } from 'react'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport shortid from 'shortid'\n\nconst Clip = ({ content }) => {\n    const [showBanner, setShowBanner] = useState(false)\n\n    useEffect(() => {\n        if (showBanner) setTimeout(() => setShowBanner(false), 1000)\n    }, [showBanner])\n\n    if (!content) return <></>\n    return (\n        <div\n            // onClick={() => console.log('123')}\n            className={`${\n                showBanner ? 'bg-gray-200' : 'bg-gray-100'\n            } relative text-xs max-h-16 overflow-auto transition ease-in-out duration-150 hover:bg-gray-200 px-3 py-2 rounded`}>\n            {content}\n        </div>\n    )\n}\n\nconst ClipboardPage = ({ stats }) => {\n    const loadClipboards = db.get('clipboards').value()\n    const [clipboards, setClipboards] = useState(loadClipboards)\n\n    useEffect(() => {\n        const handler = () => {\n            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }\n            console.log(newClip)\n\n            if (/^\\s*$/.test(newClip.content)) return\n\n            setClipboards([newClip, ...clipboards])\n            db.get('clipboards').push(newClip).write()\n        }\n\n        clipboard.on('text-changed', handler).startWatching()\n\n        return () => {\n            clipboard.off('text-changed', handler)\n        }\n    }, [clipboards])\n\n    return (\n        <>\n            <div className='space-y-2'>\n                {clipboards\n                    ?.sort(function (a, b) {\n                        var dateA = new Date(b.date)\n                        var dateB = new Date(a.date)\n\n                        if (dateA < dateB) {\n                            return -1\n                        }\n                        if (dateA > dateB) {\n                            return 1\n                        }\n                        return 0\n                    })\n                    ?.slice(0, 100)\n                    ?.map((clip, index) => {\n                        return (\n                            <CopyToClipboard key={clip.id} text={clip.content}>\n                                <button className='outline-none w-full text-left'>\n                                    <Clip content={clip.content} />\n                                </button>\n                            </CopyToClipboard>\n                        )\n                    })}\n            </div>\n            react-copy-to-clipboard\n        </>\n    )\n}\n\nexport default ClipboardPage"
    },
    {
      "id": "Nv1D3EJCJ",
      "date": 1607660983131,
      "content": "const { db } = global\nimport { useEffect, useState } from 'react'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport shortid from 'shortid'\n\nconst Clip = ({ content }) => {\n    const [showBanner, setShowBanner] = useState(false)\n\n    useEffect(() => {\n        if (showBanner) setTimeout(() => setShowBanner(false), 1000)\n    }, [showBanner])\n\n    if (!content) return <></>\n    return (\n        <div\n            // onClick={() => console.log('123')}\n            className={`${\n                showBanner ? 'bg-gray-200' : 'bg-gray-100'\n            } relative text-xs max-h-16 overflow-auto transition ease-in-out duration-150 hover:bg-gray-200 px-3 py-2 rounded`}>\n            {content}\n        </div>\n    )\n}\n\nconst ClipboardPage = ({ stats }) => {\n    const loadClipboards = db.get('clipboards').value()\n    const [clipboards, setClipboards] = useState(loadClipboards)\n\n    useEffect(() => {\n        const handler = () => {\n            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }\n            console.log(newClip)\n\n            if (/^\\s*$/.test(newClip.content)) return\n\n            setClipboards([newClip, ...clipboards])\n            db.get('clipboards').push(newClip).write()\n        }\n\n        clipboard.on('text-changed', handler).startWatching()\n\n        return () => {\n            clipboard.off('text-changed', handler)\n        }\n    }, [clipboards])\n\n    return (\n        <>\n            <div className='space-y-2'>\n                {clipboards\n                    ?.sort(function (a, b) {\n                        var dateA = new Date(b.date)\n                        var dateB = new Date(a.date)\n\n                        if (dateA < dateB) {\n                            return -1\n                        }\n                        if (dateA > dateB) {\n                            return 1\n                        }\n                        return 0\n                    })\n                    ?.slice(0, 100)\n                    ?.map((clip, index) => {\n                        return (\n                            <CopyToClipboard key={clip.id} text={clip.content}>\n                                <button className='outline-none w-full text-left'>\n                                    <Clip content={clip.content} />\n                                </button>\n                            </CopyToClipboard>\n                        )\n                    })}\n            </div>\n            react-copy-to-clipboard\n        </>\n    )\n}\n\nexport default ClipboardPage\n"
    },
    {
      "id": "rKCBxylqb",
      "date": 1607660981132,
      "content": "                        if (dateA < dateB) {\n"
    },
    {
      "id": "ahp3dpSqQL",
      "date": 1607660980631,
      "content": "            react-copy-to-clipboard\n"
    },
    {
      "id": "4ZNloSrqR",
      "date": 1607660980131,
      "content": "                    })}\n"
    },
    {
      "id": "mKmX5xGtoz",
      "date": 1607660979631,
      "content": "                                <button className='outline-none w-full text-left'>\n"
    },
    {
      "id": "1A8Fp7rK-",
      "date": 1607660979131,
      "content": "                    ?.map((clip, index) => {\n"
    },
    {
      "id": "pq44qCEMIN",
      "date": 1607660978631,
      "content": "                        }\n"
    },
    {
      "id": "83oDZIl0J",
      "date": 1607660978131,
      "content": "                            return -1\n"
    },
    {
      "id": "t_ZRTdSOUV",
      "date": 1607660977631,
      "content": "                        var dateB = new Date(a.date)\n"
    },
    {
      "id": "h3EMrJ00D",
      "date": 1607660977131,
      "content": "                        var dateA = new Date(b.date)\n"
    },
    {
      "id": "kBjOlEptx",
      "date": 1607660950127,
      "content": "<CopyToClipboard key={clip.id} text={clip.content}>\n                                <button className='w-full text-left'>\n                                    <Clip content={clip.content} />\n                                </button>\n                            </CopyToClipboard>"
    },
    {
      "id": "qINR3KfCk",
      "date": 1607660949127,
      "content": "            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }"
    },
    {
      "id": "7KAaoez-Q",
      "date": 1607660947632,
      "content": "<CopyToClipboard key={clip.id} text={clip.content}>\n                                <button className='w-full text-left'>\n                                    <Clip content={clip.content} />\n                                </button>\n                            </CopyToClipboard>"
    },
    {
      "id": "yR-fw1Cxp",
      "date": 1607660946627,
      "content": "            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }"
    },
    {
      "id": "eLf2_h2or",
      "date": 1607660941127,
      "content": "<CopyToClipboard key={clip.id} text={clip.content}>\n                                <button className='w-full text-left'>\n                                    <Clip content={clip.content} />\n                                </button>\n                            </CopyToClipboard>"
    },
    {
      "id": "ZXfCaouuv",
      "date": 1607660940131,
      "content": "            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }"
    },
    {
      "id": "J8uZBQ-jA",
      "date": 1607660928631,
      "content": "<CopyToClipboard key={clip.id} text={clip.content}>\n                                <button className='w-full text-left'>\n                                    <Clip content={clip.content} />\n                                </button>\n                            </CopyToClipboard>"
    },
    {
      "id": "zsulCPVQE",
      "date": 1607660927631,
      "content": "            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }"
    },
    {
      "id": "AFF1WgrkL",
      "date": 1607660902552,
      "content": "<CopyToClipboard key={clip.id} text={clip.content}>\n                                <button className='w-full text-left'>\n                                    <Clip content={clip.content} />\n                                </button>\n                            </CopyToClipboard>"
    },
    {
      "id": "smSNySMSt",
      "date": 1607660894631,
      "content": "            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }"
    },
    {
      "id": "kEhBISbKv",
      "date": 1607660893628,
      "content": "            if (/^\\s*$/.test(newClip.content)) return"
    },
    {
      "id": "OGSgj9XLT",
      "date": 1607660892130,
      "content": "            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }"
    },
    {
      "id": "s3Lb_5INH",
      "date": 1607660877626,
      "content": "            if (/^\\s*$/.test(newClip.content)) return"
    },
    {
      "id": "UNyH9ajHn",
      "date": 1607660875126,
      "content": "            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }"
    },
    {
      "id": "s4iXel8BN",
      "date": 1607660874130,
      "content": "            if (/^\\s*$/.test(newClip.content)) return"
    },
    {
      "id": "lLMtqK8Fa",
      "date": 1607660872126,
      "content": "            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }"
    },
    {
      "id": "MRkqkzcSf",
      "date": 1607660871127,
      "content": "            if (/^\\s*$/.test(newClip.content)) return"
    },
    {
      "id": "fMKp5al3I",
      "date": 1607660869627,
      "content": "            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }"
    },
    {
      "id": "adEwNFuyD",
      "date": 1607660868127,
      "content": "            if (/^\\s*$/.test(newClip.content)) return"
    },
    {
      "id": "fwuicLnkM",
      "date": 1607660855632,
      "content": "            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }"
    },
    {
      "id": "-hJASiAdb",
      "date": 1607660831630,
      "content": "            if (/^\\s*$/.test(newClip.content)) return"
    },
    {
      "id": "lpKwdzCuK",
      "date": 1607660830625,
      "content": "            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }"
    },
    {
      "id": "8EI8CtmKo",
      "date": 1607660829129,
      "content": "            if (/^\\s*$/.test(newClip.content)) return"
    },
    {
      "id": "o_STHrsPL",
      "date": 1607660825129,
      "content": "            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }"
    },
    {
      "id": "7rEoy1EwB",
      "date": 1607660824131,
      "content": "            if (/^\\s*$/.test(newClip.content)) return"
    },
    {
      "id": "JyWLRz8NJ",
      "date": 1607660823130,
      "content": "            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }"
    },
    {
      "id": "aaejsEaaO",
      "date": 1607660821625,
      "content": "            if (/^\\s*$/.test(newClip.content)) return"
    },
    {
      "id": "Dir43OGeX",
      "date": 1607660820627,
      "content": "            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }"
    },
    {
      "id": "QtbWZ7mn3",
      "date": 1607660803630,
      "content": "            if (/^\\s*$/.test(newClip.content)) return\n"
    },
    {
      "id": "RE2ZvgS0l",
      "date": 1607660780130,
      "content": "\n"
    },
    {
      "id": "ys-R2YZLk",
      "date": 1607660779130,
      "content": "    const loadClipboards = db.get('clipboards').value()\n"
    },
    {
      "id": "0fNu5dAgp",
      "date": 1607660778129,
      "content": "    useEffect(() => {\n"
    },
    {
      "id": "3IyyrMkNv",
      "date": 1607660777130,
      "content": "            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }\n"
    },
    {
      "id": "RRYcJ3UvK",
      "date": 1607660776129,
      "content": "            setClipboards([newClip, ...clipboards])\n"
    },
    {
      "id": "B2NhXlLbw",
      "date": 1607660772628,
      "content": "\n"
    },
    {
      "id": "jqEQ7pKqZ",
      "date": 1607660771129,
      "content": "            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }\n"
    },
    {
      "id": "fdnM_9Q4E",
      "date": 1607660766630,
      "content": "clipboards"
    },
    {
      "id": "COMespiY_",
      "date": 1607660765124,
      "content": "lipboards(db.get('clipboards').value())"
    },
    {
      "id": "DKN8XMq9S",
      "date": 1607660764624,
      "content": "clipboards"
    },
    {
      "id": "qVH7ptPnkU",
      "date": 1607660763625,
      "content": "lipboards(db.get('clipboards').value())"
    },
    {
      "id": "G1ACCDQeA",
      "date": 1607660763124,
      "content": "react-copy-to-clipboard"
    },
    {
      "id": "cykgZ1iQ_",
      "date": 1607660754627,
      "content": "clipboards"
    },
    {
      "id": "Q3EiBtBjm",
      "date": 1607660749628,
      "content": "\n"
    },
    {
      "id": "jrFTqIyfq",
      "date": 1607660748127,
      "content": ", ...clipboards"
    },
    {
      "id": "6nzHYjJ3P",
      "date": 1607660739628,
      "content": "        }\n"
    },
    {
      "id": "dSmH82F5w",
      "date": 1607660738628,
      "content": "    useEffect(() => {\n"
    },
    {
      "id": "5uwbMjyo-",
      "date": 1607660737128,
      "content": "                {clipboards\n"
    },
    {
      "id": "w686XTfTV",
      "date": 1607660736628,
      "content": "    return (\n"
    },
    {
      "id": "ZSd5d-SZS",
      "date": 1607660735127,
      "content": "        clipboard.on('text-changed', handler).startWatching()\n"
    },
    {
      "id": "V2RWe5ZEH0",
      "date": 1607660734627,
      "content": "        const handler = () => {\n"
    },
    {
      "id": "jrkU-XlFi",
      "date": 1607660734127,
      "content": "            db.get('clipboards').push(newClip).write()\n"
    },
    {
      "id": "U8dey9ceQ",
      "date": 1607660733628,
      "content": "        return () => {\n"
    },
    {
      "id": "1-TrsVeVn",
      "date": 1607660731628,
      "content": "            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }\n"
    },
    {
      "id": "PT1Z-VhUW",
      "date": 1607660727626,
      "content": "            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }"
    },
    {
      "id": "YawfGmFfw",
      "date": 1607660715402,
      "content": "            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }\n"
    },
    {
      "id": "Ul_ASD5XE",
      "date": 1607660713128,
      "content": "react-copy-to-clipboard"
    },
    {
      "id": "1ET0np47c",
      "date": 1607660712127,
      "content": "lipboards(db.get('clipboards').value())"
    },
    {
      "id": "LYGn60jLx",
      "date": 1607660706126,
      "content": "react-copy-to-clipboard"
    },
    {
      "id": "ppyxm2z3v",
      "date": 1607660704629,
      "content": "lipboards(db.get('clipboards').value())"
    },
    {
      "id": "JDtwrRQqk",
      "date": 1607660703128,
      "content": "\n            setClipboards([newClip, ...clipboards])\n            db.get('clipboards').push(newClip).write()\n        }\n\n        clipboard.on('text-changed', "
    },
    {
      "id": "dCksg7Cuk",
      "date": 1607660702127,
      "content": "react-copy-to-clipboard"
    },
    {
      "id": "9UMY8u2z8",
      "date": 1607660701628,
      "content": "button"
    },
    {
      "id": "Ree40aYpC",
      "date": 1607660700628,
      "content": "lipboards(db.get('clipboards').value())"
    },
    {
      "id": "DjaLf-zDI",
      "date": 1607660679124,
      "content": "button"
    },
    {
      "id": "rofRPf_UC",
      "date": 1607660666625,
      "content": "\n            setClipboards([newClip, ...clipboards])\n            db.get('clipboards').push(newClip).write()\n        }\n\n        clipboard.on('text-changed', "
    },
    {
      "id": "Czhf0L7fi",
      "date": 1607660665627,
      "content": "button"
    },
    {
      "id": "oj9gaOiY-",
      "date": 1607660664624,
      "content": "lipboards(db.get('clipboards').value())"
    },
    {
      "id": "HcAJCI7OH",
      "date": 1607660662629,
      "content": "button"
    },
    {
      "id": "RdLr5DaFo",
      "date": 1607660640125,
      "content": "lipboards(db.get('clipboards').value())"
    },
    {
      "id": "iAkg-eHIK",
      "date": 1607660638122,
      "content": "        setClipboards(db.get('clipboards').value())"
    },
    {
      "id": "UoGuyt3Za",
      "date": 1607660634127,
      "content": "react-copy-to-clipboard"
    },
    {
      "id": "7dNUKMI5z",
      "date": 1607660625127,
      "content": "button"
    },
    {
      "id": "kRjANgESt",
      "date": 1607660593626,
      "content": "react-copy-to-clipboard"
    },
    {
      "id": "mng_l3PXT",
      "date": 1607660483620,
      "content": "\n            setClipboards([newClip, ...clipboards])\n            db.get('clipboards').push(newClip).write()\n        }\n\n        clipboard.on('text-changed', "
    },
    {
      "id": "L4-xbE5EB",
      "date": 1607660482624,
      "content": "useStat"
    },
    {
      "id": "jzVGCUE8z",
      "date": 1607660480124,
      "content": "\n"
    },
    {
      "id": "DfdLCLTyR",
      "date": 1607660477124,
      "content": "loadClipboards"
    },
    {
      "id": "ISnxRzTXI",
      "date": 1607660468124,
      "content": "db.get('clipboards').value()"
    },
    {
      "id": "OSBdcVrg5",
      "date": 1607660452627,
      "content": "lipboards(db.get('clipboards').value())"
    },
    {
      "id": "2L1-TGkT-",
      "date": 1607660441010,
      "content": "        setClipboards(db.get('clipboards').value())\n"
    },
    {
      "id": "akPBH7Hmf",
      "date": 1607660432510,
      "content": "                        )\n"
    },
    {
      "id": "H-m-ealyT",
      "date": 1607660432010,
      "content": "                            </CopyToClipboard>\n"
    },
    {
      "id": "Tf6PXmwiY",
      "date": 1607660431009,
      "content": "                    })}\n"
    },
    {
      "id": "WFHmBhMhMl",
      "date": 1607660430007,
      "content": "                            <CopyToClipboard key={clip.id} text={clip.content}>\n"
    },
    {
      "id": "D_MIbijMC",
      "date": 1607660429510,
      "content": "                        return (\n"
    },
    {
      "id": "-keI06stJ",
      "date": 1607660422509,
      "content": "                                </>\n"
    },
    {
      "id": "BKyY5tJtZ",
      "date": 1607660422009,
      "content": "                                <>\n"
    },
    {
      "id": "bPkNTPaEA",
      "date": 1607660391011,
      "content": " global shortcuts!\n\nShortcuts within a BrowserWindow\nUsing web APIs\nIf you want to handle keyboard shortcuts within a BrowserWindow, you can listen for the keyup and keydown DOM events inside the renderer process using the addEventListener() API.\n\nwindow.addEventListener('keyup', doSomething, true)\nCopy\nNote the third parameter true indicates that the listener will always receive key presses before other listeners so they can't have stopPropagation() called on them."
    },
    {
      "id": "NMCZNskKq",
      "date": 1607660390010,
      "content": " focus.\n\nStarting with a working application from the Quick Start Guide, update the main.js file with the following lines:\n\nconst { app, globalShortcut } = require('electron')\n\napp.whenReady().then(() => {\n  globalShortcut.register('Alt+CommandOrControl+I', () => {\n    console.log('Electron loves global shortcuts!')"
    },
    {
      "id": "6zYaDeXFg",
      "date": 1607660353510,
      "content": "Command"
    },
    {
      "id": "LieQpwKQR",
      "date": 1607660352510,
      "content": "CommandOrControl"
    },
    {
      "id": "-TM9YiVT_",
      "date": 1607660351009,
      "content": "\nLaunchCopy\nNOTE: In the code above, the CommandOrControl combination uses Command on macOS and Control on Windows/Linux.\n\nAfter launching the Electron application, if you press the defined key combination then open the terminal that you ran your Electron application from, you will see that Electron loves global shortcuts!\n\nShortcuts within a BrowserWindow\n"
    },
    {
      "id": "oOsx2DdYo",
      "date": 1607660350009,
      "content": "After launching the Electron application, if you press the defined key combination then open the terminal that you ran your Electron application from, you will see that Electron loves global shortcuts!\n\nShortcuts within a BrowserWindow\nUsing web APIs\n"
    },
    {
      "id": "_tcWZW_Fa",
      "date": 1607660349007,
      "content": "\napp.whenReady().then(() => {\n  globalShortcut.register('Alt+CommandOrControl+I', () => {\n    console.log('Electron loves global shortcuts!')\n  })\n}).then(createWindow)\nLaunchCopy\nNOTE: In the code above, the CommandOrControl combination uses Command on macOS and Control on Windows/Linux.\n\nAfter launching the Electron application, if you press the defined key combination then open the terminal that you ran your Electron application from, you will see that Electron loves global shortcuts"
    },
    {
      "id": "E5jz6-ZXE",
      "date": 1607660348009,
      "content": "\nStarting with a working application from the Quick Start Guide, update the main.js file with the following lines:\n\nconst { app, globalShortcut } = require('electron')\n"
    },
    {
      "id": "ctbj9cxgs",
      "date": 1607660316509,
      "content": "tion, if you press the defined key combination then open the terminal that you ran your Electron application from, you will see that Electr"
    },
    {
      "id": "knbGgOduf",
      "date": 1607660315508,
      "content": "he CommandOrControl combination uses Command on macOS and Control on Windows/Linux.\n\nAfter launching the Electron application, if you press the defined key combination then open the terminal that you ran your Electron application from, you will see that Electron loves global shortcuts!\n\nShortcuts within a BrowserWindow\nUsing web APIs\n"
    },
    {
      "id": "Voav542c2",
      "date": 1607660314010,
      "content": "ontrol+I', () => {\n    console.log('Electron loves global shortcuts!')\n  })\n}).then(createWindow)"
    },
    {
      "id": "xv4Z_vNfi",
      "date": 1607660083538,
      "content": "globalShortcut"
    },
    {
      "id": "QRKGyUiKS",
      "date": 1607660067538,
      "content": "\napp.whenReady().then(() => {\n  globalShortcut.register('Alt+CommandOrControl+I', () => {\n    console.log('Electron loves global shortcuts!')\n  })\n}).then(createWindow)"
    },
    {
      "id": "aPdQnzh8M",
      "date": 1607657559564,
      "content": "onClick={{}}"
    },
    {
      "id": "B1yx8vD46",
      "date": 1607657354269,
      "content": "const { db } = global\nimport { useEffect, useState } from 'react'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport shortid from 'shortid'\n\nconst Clip = ({ content }) => {\n    const [showBanner, setShowBanner] = useState(false)\n\n    useEffect(() => {\n        if (showBanner) setTimeout(() => setShowBanner(false), 1000)\n    }, [showBanner])\n\n    // if (!content) return <></>\n    return (\n        <div\n            onClick={() => setShowBanner(true)}\n            className={`${\n                showBanner ? 'bg-gray-200' : 'bg-gray-100'\n            } relative text-xs max-h-16 overflow-auto transition ease-in-out duration-150 hover:bg-gray-200 px-3 py-2 rounded`}>\n            {content}\n        </div>\n    )\n}\n\nconst ClipboardPage = ({ stats }) => {\n    const [clipboards, setClipboards] = useState([])\n\n    useEffect(() => {\n        setClipboards(db.get('clipboards').value())\n\n        const handler = () => {\n            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }\n            console.log(newClip)\n\n            if (/^\\s*$/.test(newClip.content)) return\n\n            setClipboards([newClip, ...clipboards])\n            db.get('clipboards').push(newClip).write()\n        }\n\n        clipboard.on('text-changed', handler).startWatching()\n\n        return () => {\n            clipboard.off('text-changed', handler)\n        }\n    }, [])\n\n    return (\n        <>\n            <div className='space-y-2'>\n                {clipboards\n                    ?.sort(function (a, b) {\n                        var dateA = new Date(b.date)\n                        var dateB = new Date(a.date)\n\n                        if (dateA < dateB) {\n                            return -1\n                        }\n                        if (dateA > dateB) {\n                            return 1\n                        }\n                        return 0\n                    })\n                    ?.slice(0, 100)\n                    ?.map((clip, index) => {\n                        return (\n                            <CopyToClipboard key={clip.id} text={clip.content}>\n                                <>\n                                    <Clip content={clip.content} />\n                                </>\n                            </CopyToClipboard>\n                        )\n                    })}\n            </div>\n        </>\n    )\n}\n\nexport default ClipboardPage\n"
    },
    {
      "id": "BLHMRQbDm",
      "date": 1607657353270,
      "content": "\n    return (\n        <div\n            onClick={() => setShowBanner(true)}\n            className={`${\n                showBanner ? 'bg-gray-200' : 'bg-gray-100'\n            } relative text-xs max-h-16 overflow-auto transition ease-in-out duration-150 hover:bg-gray-200 px-3 py-2 rounded`}>\n            {content}\n        </div>"
    },
    {
      "id": "kAda4Bui5",
      "date": 1607657348770,
      "content": "            {showBanner && (\n"
    },
    {
      "id": "dXTOyAHV5",
      "date": 1607657301269,
      "content": "absolute inset-0 "
    },
    {
      "id": "BiSXZyfpc",
      "date": 1607657253768,
      "content": "render monaco editor in js"
    },
    {
      "id": "vTXq_coY1",
      "date": 1607657233268,
      "content": "])\n\n    useEffect(() => {\n        setClipboards(db.get('clipboards').value())\n\n        const handler = () => {\n            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }\n            console.log(newClip)\n\n            if (/^\\s*$/.test(newClip.content)) return\n\n            setClipboards([newClip, ...clipboards])\n            db.get('clipboards').push(newClip).write()\n        }\n"
    },
    {
      "id": "JNlsx5doQ",
      "date": 1607657210768,
      "content": "\n\n    useEffect(() => {\n        setClipboards(db.get('clipboards').value())\n\n        const handler = () => {\n            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }\n            console.log(newClip)\n            if (/^\\s*$/.test(newClip.content)) return\n            setClipboards([newClip, ...clipboards])\n            db.get('clipboards').push(newClip).write()\n        }\n\n        clipboard.on('text-changed', handler).startWatching()\n"
    },
    {
      "id": "bKfJtdjOQ",
      "date": 1607657209768,
      "content": "\n    useEffect(() => {\n        setClipboards(db.get('clipboards').value())\n\n        const handler = () => {\n            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }\n            console.log(newClip)\n            if (/^\\s*$/.test(newClip.content)) return\n            setClipboards([newClip, ...clipboards])\n            db.get('clipboards').push(newClip).write()\n        }\n\n        clipboard.on('text-changed', handler).startWatching()\n\n        return () => {"
    },
    {
      "id": "URkHb75vK",
      "date": 1607657092766,
      "content": "clipboard.readText()"
    },
    {
      "id": "mhwG1Fmpf",
      "date": 1607657079266,
      "content": "if (string.trim().length() > 0)"
    },
    {
      "id": "o4dLgqXPj",
      "date": 1607657041267,
      "content": "\n   "
    },
    {
      "id": "Hfz90gEeO",
      "date": 1607657038261,
      "content": "        <div\n"
    },
    {
      "id": "A4B8c7WNK",
      "date": 1607657036265,
      "content": "{/* {showBanner && (\n                <div className='absolute inset-0 h-full w-full bg-gray-100 text-gray-400 flex'>\n                    <div className='m-auto'>\n                        <p className='font-medium'>Copied.</p>\n                    </div>\n                </div>\n            )} */}"
    },
    {
      "id": "Kq9A99T4w",
      "date": 1607657032262,
      "content": "            \n"
    },
    {
      "id": "0_u4CzsKn",
      "date": 1607657031765,
      "content": "{/* {showBanner && (\n                <div className='absolute inset-0 h-full w-full bg-gray-100 text-gray-400 flex'>\n                    <div className='m-auto'>\n                        <p className='font-medium'>Copied.</p>\n                    </div>\n                </div>\n            )} */}"
    },
    {
      "id": "uhmxmqoZs",
      "date": 1607656740171,
      "content": "bg-gray-100"
    },
    {
      "id": "HE_tKGVVu",
      "date": 1607656636669,
      "content": "showBanner"
    },
    {
      "id": "6Pia50ODH",
      "date": 1607656630169,
      "content": "fixed "
    },
    {
      "id": "jSHc8YrAu",
      "date": 1607656550284,
      "content": "showBanner"
    },
    {
      "id": "eOmTf5Xgv",
      "date": 1607656506783,
      "content": "content"
    },
    {
      "id": "R2jvzWHnR",
      "date": 1607656399782,
      "content": "setShowBanner"
    },
    {
      "id": "sYZuqOJHd",
      "date": 1607656386780,
      "content": "import { useStats } from '../lib/mstats'\n"
    },
    {
      "id": "MKezxJTJo",
      "date": 1607656385283,
      "content": "\n"
    },
    {
      "id": "VogzeOgU-b",
      "date": 1607656346778,
      "content": "                                    {/* <p className='text-xs'>{clip.date}</p> */}\n"
    },
    {
      "id": "M2KikgyMV",
      "date": 1607656346281,
      "content": "                                    </div>\n"
    },
    {
      "id": "RGwyf3LraU",
      "date": 1607656335781,
      "content": "Clip"
    },
    {
      "id": "PXGRX1diS",
      "date": 1607656335281,
      "content": "clip."
    },
    {
      "id": "yx_o5fwVq",
      "date": 1607656324281,
      "content": "<div className='text-xs max-h-16 overflow-auto transition ease-in-out duration-150 bg-gray-100 hover:bg-gray-200 px-3 py-2 rounded'>\n                                        {clip.content}\n                                    </div>"
    },
    {
      "id": "rq_AOYQvz",
      "date": 1607656307780,
      "content": "\n"
    },
    {
      "id": "BNxVTq2H3",
      "date": 1607656306281,
      "content": "        </>\n"
    },
    {
      "id": "gTwixrEHR",
      "date": 1607656305781,
      "content": "            <div className='absolute top-0 text-xs font-medium bg-green-'>123</div>\n"
    },
    {
      "id": "-fkIESR1u",
      "date": 1607656288780,
      "content": "-lg"
    },
    {
      "id": "0gjUUr8Eq",
      "date": 1607656095778,
      "content": "\n            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }\n            console.log(newClip)\n            setClipboards([newClip, ...clipboards])\n            db.get('clipboards').push(newClip).write()\n        }\n\n        clipboard.on('text-changed', handler)."
    },
    {
      "id": "5bqe_fNo9L",
      "date": 1607656094778,
      "content": "erate(), date: Date.now(), content: clipboard.readText() }\n            console.log(newClip)\n            setClipboards([newClip, ...clipboards])\n            db.get('clipboards').push(newClip).write()\n        }\n\n        clipboard.on('text-changed', handler).startWatching()\n"
    },
    {
      "id": "-oXz0aFUL",
      "date": 1607656094278,
      "content": "\n\n        clipboard.on('text-changed', handler).startWatching()\n\n        return () => {\n            clipboard.off('text-changed', handler)\n        }\n    }, [])\n\n    return (\n        <>\n            <div className='space-y-2'>"
    },
    {
      "id": "L5gN8XwvCQ",
      "date": 1607656080777,
      "content": "tate([])\n\n    useEffect(() => {\n        setClipboards(db.get('clipboards').value())\n\n        const handler = () => {"
    },
    {
      "id": "HpMnNm9F5",
      "date": 1607656080278,
      "content": "        const handler = () => {\n"
    },
    {
      "id": "7AVHIGnpIa",
      "date": 1607656079778,
      "content": "\n        setClipboards(db.get('clipboards').value())\n\n        const handler = () => {\n            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }\n            console.log(newClip)\n            setClipboards([newClip, ...clipboards])\n            db.get('clipboards').push("
    },
    {
      "id": "FfRPCVzUd",
      "date": 1607656079278,
      "content": "    useEffect(() => {\n"
    },
    {
      "id": "QoAeU4gP3",
      "date": 1607656078280,
      "content": "const { db } = global\nimport { useEffect, useState } from 'react'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport shortid from 'shortid'\n\nconst ClipboardPage = ({ stats }) => {\n    const [clipboards, setClipboards] = useState([])\n\n    useEffect(() => {\n        setClipboards(db.get('clipboards').value())\n\n        const handler = () => {\n            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }\n            console.log(newClip)\n            setClipboards([newClip, ...clipboards])\n            db.get('clipboards').push(newClip).write()\n        }\n\n        clipboard.on('text-changed', handler).startWatching()\n\n        return () => {\n            clipboard.off('text-changed', handler)\n        }\n    }, [])\n\n    return (\n        <>\n            <div className='space-y-2'>\n                {clipboards\n                    ?.sort(function (a, b) {\n                        var dateA = new Date(b.date)\n                        var dateB = new Date(a.date)\n\n                        if (dateA < dateB) {\n                            return -1\n                        }\n                        if (dateA > dateB) {\n                            return 1\n                        }\n                        return 0\n                    })\n                    ?.slice(0, 100)\n                    ?.map((clip, index) => {\n                        return (\n                            <CopyToClipboard key={clip.id} text={clip.content}>\n                                <>\n                                    <div className='text-xs max-h-16 overflow-auto transition ease-in-out duration-150 bg-gray-100 hover:bg-gray-200 px-3 py-2 rounded'>\n                                        {clip.content}\n                                    </div>\n                                    {/* <p className='text-xs'>{clip.date}</p> */}\n                                </>\n                            </CopyToClipboard>\n                        )\n                    })}\n            </div>\n        </>\n    )\n}\n\nexport default ClipboardPage\n"
    },
    {
      "id": "60aT_dpsg",
      "date": 1607656077278,
      "content": "ards(db.get('clipboards').value())\n\n        const handler = () => {\n            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }\n            console.log(newClip)\n            setClipboards([newClip, ...clipboards])\n            db.get('clipboards').push(newClip).write()\n        }\n\n        clipboard.on('text-changed', handler).startWatching()\n\n        return () => {\n            clipboard.off('text-changed', handler)\n        }\n    }, [])\n\n    return ("
    },
    {
      "id": "HzQv_Il46",
      "date": 1607656076778,
      "content": "\n        const handler = () => {\n            const newClip = { id: shortid.generate(), date: Date.now(), content: clipboard.readText() }\n            console.log(newClip)"
    },
    {
      "id": "33CjlLxXe",
      "date": 1607656075780,
      "content": "s([newClip, ...cl"
    },
    {
      "id": "YYieDzSvb",
      "date": 1607655963921,
      "content": "    const [clipboards, setClipboards] = useState(db.get('clipboards').value() || [])\n"
    },
    {
      "id": "wqkU3MWgo",
      "date": 1607655950921,
      "content": "clipboards"
    },
    {
      "id": "wJNe9ZZvd",
      "date": 1607655943918,
      "content": "newClip"
    },
    {
      "id": "fpVKZjIKON",
      "date": 1607655939916,
      "content": "            setClipboards()\n"
    },
    {
      "id": "vKDvohPBf",
      "date": 1607655939420,
      "content": "            \n"
    },
    {
      "id": "HHGJxjv5IK",
      "date": 1607655938917,
      "content": "\n"
    },
    {
      "id": "5VJk-gwtr",
      "date": 1607655938421,
      "content": "            console.log(newClip)\n"
    },
    {
      "id": "S4yZAPoTF",
      "date": 1607655937420,
      "content": "\n"
    },
    {
      "id": "-bT2u3-my",
      "date": 1607655935421,
      "content": "clipboard.readText()"
    },
    {
      "id": "I4xaDZ_DT",
      "date": 1607655931418,
      "content": "            let currentText = clipboard.readText()\n"
    },
    {
      "id": "3VR6fdue8",
      "date": 1607655914921,
      "content": "newClip"
    },
    {
      "id": "KDEmLy39s",
      "date": 1607655907920,
      "content": "{ id: shortid.generate(), date: Date.now(), content: currentText }"
    },
    {
      "id": "A74vxeMIH",
      "date": 1607655894920,
      "content": "                db.get('clipboards').push({ id: shortid.generate(), date: Date.now(), content: currentText }).write()\n"
    },
    {
      "id": "MpqZF7Nfs",
      "date": 1607655891920,
      "content": "                let currentText = clipboard.readText()\n"
    },
    {
      "id": "KLEunFJ3f",
      "date": 1607655885417,
      "content": "\n                let currentText = clipboard.readText()\n                db.get('clipboards').push({ id: shortid.generate(), date: Date.now(), content: currentText }).write()\n            "
    },
    {
      "id": "DPY3rviSs",
      "date": 1607655875919,
      "content": "clipboard\n    .on('text-changed', () => {\n        let currentText = clipboard.readText()\n        db.get('clipboards').push({ id: shortid.generate(), date: Date.now(), content: currentText }).write()\n    })\n    .startWatching()\n"
    },
    {
      "id": "pcpKnqdNT",
      "date": 1607655858919,
      "content": " ({ stats }) => "
    },
    {
      "id": "jquuSnrnz",
      "date": 1607655857920,
      "content": "const ClipboardPage = ({ stats }) => {\n"
    },
    {
      "id": "TzymWT2-D",
      "date": 1607655853916,
      "content": ".value()"
    },
    {
      "id": "zsvm_U7m3",
      "date": 1607655839420,
      "content": "const { db } = global\nimport { useEffect, useState } from 'react'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nconst ClipboardPage = ({ stats }) => {\n    const [clipboards, setClipboards] = useState(db.get('clipboards').value() || [])\n\n    useEffect(() => {\n        const handler = () => {\n            console.log('copyevm')\n            setClipboards(db.get('clipboards').value())\n        }\n        clipboard.on('text-changed', handler)\n\n        return () => {\n            clipboard.off('text-changed', handler)\n        }\n    }, [])\n\n    return (\n        <>\n            <div className='space-y-2'>\n                {clipboards\n                    ?.sort(function (a, b) {\n                        var dateA = new Date(b.date)\n                        var dateB = new Date(a.date)\n\n                        if (dateA < dateB) {\n                            return -1\n                        }\n                        if (dateA > dateB) {\n                            return 1\n                        }\n                        return 0\n                    })\n                    ?.slice(0, 100)\n                    ?.map((clip, index) => {\n                        return (\n                            <CopyToClipboard key={clip.id} text={clip.content}>\n                                <>\n                                    <div className='text-xs max-h-16 overflow-auto transition ease-in-out duration-150 bg-gray-100 hover:bg-gray-200 px-3 py-2 rounded'>\n                                        {clip.content}\n                                    </div>\n                                    {/* <p className='text-xs'>{clip.date}</p> */}\n                                </>\n                            </CopyToClipboard>\n                        )\n                    })}\n            </div>\n        </>\n    )\n}\n\nexport default ClipboardPage\n"
    },
    {
      "id": "kw-FnRZ9t",
      "date": 1607655837421,
      "content": "\n    useEffect(() => {\n        const handler = () => {\n            console.log('copyevm')\n            setClipboards(db.get('clipboards').value())\n        }\n        clipboard.on('text-changed', handler)\n\n        return () => {\n            clipboard.off('text-changed', handler)\n        }\n    }, [])\n\n    return (\n        <>\n            <div className='space-y-2'>\n                {clipboards\n                    ?.sort(function (a, b) {\n                        var dateA = new Date(b.date)\n                       "
    },
    {
      "id": "eEQsOPlEs",
      "date": 1607655835920,
      "content": "        const handler = () => {\n"
    },
    {
      "id": "kClNZlz8j",
      "date": 1607655834920,
      "content": " "
    },
    {
      "id": "giDbmFmc1",
      "date": 1607655830919,
      "content": "copyevm"
    },
    {
      "id": "on2k9phmR",
      "date": 1607655820919,
      "content": "            setClipboards([])\n"
    },
    {
      "id": "Ryi81IAjQ",
      "date": 1607655812919,
      "content": "    const [clipboards, setClipboards] = useState(db.get('clipboards').value() || [])\n"
    },
    {
      "id": "KfSeG5w-H",
      "date": 1607655808419,
      "content": "            console.log('copyevm')\n"
    },
    {
      "id": "TkgFNACpw",
      "date": 1607655806919,
      "content": "copyevm"
    },
    {
      "id": "mnG_QkZM5",
      "date": 1607655801419,
      "content": "db.get('clipboards').value()"
    },
    {
      "id": "O5fRqFSlk",
      "date": 1607655791920,
      "content": "copyevm"
    },
    {
      "id": "OVNcQ9dxO",
      "date": 1607655787919,
      "content": "clipboards"
    },
    {
      "id": "LFBkMh6gL",
      "date": 1607655761918,
      "content": "copyevm"
    },
    {
      "id": "sfgiyont7",
      "date": 1607655758418,
      "content": " || []"
    },
    {
      "id": "8juu9ZFAk",
      "date": 1607655748416,
      "content": "package-lock"
    },
    {
      "id": "ALXNcRHO7",
      "date": 1607655744418,
      "content": "jsconfig"
    },
    {
      "id": "oUO-C_S12",
      "date": 1607655741417,
      "content": "package-lock"
    },
    {
      "id": "ZsyQAK1ve",
      "date": 1607655731417,
      "content": "        clipboard.on('text-changed', handler)\n"
    },
    {
      "id": "YZ7KY5kmW",
      "date": 1607655718415,
      "content": "\n        const handler = () => {\n            console.log('copyevm')\n            setClipboards(db.get('clipboards').value() || [])\n        }\n        clipboard.on('text-changed', handler)\n\n        return () => {\n\n        }"
    },
    {
      "id": "RBuP7JEVz",
      "date": 1607655709417,
      "content": "() => {\n            console.log('copyevm')\n            setClipboards(db.get('clipboards').value() || [])\n        }"
    },
    {
      "id": "OIAAHhwnJ",
      "date": 1607655706917,
      "content": "handler"
    },
    {
      "id": "fObpsN7ZM",
      "date": 1607655674419,
      "content": "package"
    },
    {
      "id": "Hy8kcfaT0",
      "date": 1607655671918,
      "content": "postcss.config"
    },
    {
      "id": "4t2Hra2Z4",
      "date": 1607655655729,
      "content": "db.get('clipboards').value() || []"
    },
    {
      "id": "7Wrn3Tq3r",
      "date": 1607655647729,
      "content": "setClipboards"
    },
    {
      "id": "LoTu3N0tD",
      "date": 1607655641727,
      "content": "    const clipboards = db?.get('clipboards').value()\n"
    },
    {
      "id": "TmX0sAFln",
      "date": 1607655638729,
      "content": "db?.get('clipboards').value()"
    },
    {
      "id": "lPXbsm9zT",
      "date": 1607655616730,
      "content": "    const clipboards = db?.get('clipboards').value()\n"
    },
    {
      "id": "pEDcx58bX",
      "date": 1607655598728,
      "content": "    global.clipboard = db\n"
    },
    {
      "id": "SLYY8JZNU",
      "date": 1607655576728,
      "content": "    global.db = db\n"
    },
    {
      "id": "nEtaxe415",
      "date": 1607655560739,
      "content": "clipboard\n    .on('text-changed', () => {\n        let currentText = clipboard.readText()\n        db.get('clipboards').push({ id: shortid.generate(), date: Date.(), content: currentText }).write()\n    })"
    },
    {
      "id": "uYm8yXdGD",
      "date": 1607655550624,
      "content": "const { ipcRenderer } = require('electron')\nconst si = require('systeminformation')\nconst clipboard = require('electron-clipboard-extended')\nconst shortid = require('shortid')\nconst low = require('lowdb')\nconst FileSync = require('lowdb/adapters/FileSync')\n\n// Since we disabled nodeIntegration we can reintroduce\n// needed node functionality here\nprocess.once('loaded', () => {\n    global.ipcRenderer = ipcRenderer\n    global.si = si\n    global.clipboard = clipboard\n    global.db = db\n})\n\nconst adapter = new FileSync('db.json')\nconst db = low(adapter)\n\ndb.defaults({ clipboards: [], notes: '' }).write()\n\nclipboard\n    .on('text-changed', () => {\n        let currentText = clipboard.readText()\n        db.get('clipboards').push({ id: shortid.generate(), date: Date.(), content: currentText }).write()\n    })\n    .startWatching()\n"
    },
    {
      "id": "5HUEnHObZ",
      "date": 1607655545675,
      "content": "tailwind.config.js"
    },
    {
      "id": "FGRZdCIVq",
      "date": 1607655539801,
      "content": "package-lock"
    },
    {
      "id": "ZbZGmJB2C",
      "date": 1607655489557,
      "content": "\n\n    useEffect(() => console.log(clipboards), [clipboards])"
    },
    {
      "id": "k5pllDeO7",
      "date": 1607655446561,
      "content": "postcss.config"
    },
    {
      "id": "0uZDfrVmD",
      "date": 1607655441556,
      "content": "package-lock.json"
    },
    {
      "id": "KvV0zVqHp",
      "date": 1607655439560,
      "content": "package.json"
    },
    {
      "id": "xaUuxByD8",
      "date": 1607655437560,
      "content": "postcss.config.js"
    },
    {
      "id": "iZfCTXpUz",
      "date": 1607655427559,
      "content": "jsconfig"
    },
    {
      "id": "wqg4uIfcE",
      "date": 1607655421561,
      "content": "package-lock"
    },
    {
      "id": "Egnan2O0B",
      "date": 1607655402553,
      "content": "clipboards"
    },
    {
      "id": "z4pfXuo89",
      "date": 1607655386056,
      "content": "?.get('clipboards').value()"
    },
    {
      "id": "QHAOkwn6l",
      "date": 1607655377556,
      "content": "Clipboard\nNotes\nOptions\ndb?.get('clipboards').value()\npackage-lock.json\njsconfig.json\njsconfig\npackage\nClipboard Notes Options sdasdasdkasjdlkasjldkjaskldjalskjdlkasjdlksajdksa Clipboard Notes Options sdasdasdkasjdlkasjldkjaskldjalskjdlkasjdlksajdksa d afd I need help. import { useEffect } from 'react' font-medium font-bold <NavLink href='/notes' color='pink'> Notes </NavLink> sdasdasdkasjdlkasjldkjaskldjalskjdlkasjdlksajdksa d afd I need help. */} <NavLink href='/options' color='green'> Options </NavLink> console.log(alerts.filter((alert) => alert.id !== id)) console.log(alerts.filter((alert) => alert.id !== id)) alerts.filter((alert) => alert.id !== id) subtitle {alerts.map((alert, index) => ( alert.title 2 1, clicks id shortId.generate() shortId config setAlerts setAlerts([config, ...s]) s=> [config,] setAlerts const newAlert = {} setAlerts alerts {' '} w-full mb-2 </div> <div class=''> ml-auto w-auto w-full max-w-xs fixed inset-0 flex items-end justify-center px-4 py-6 pointer-events-none sm:p-6 sm:items-start sm:justify-end tai } alerts <div class='max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden'> <div class='p-4'> <div class='flex items-start'> <div class='flex-shrink-0'> {/* <!-- Heroicon name: check-circle --> */} <svg class='h-6 w-6 text-green-400' xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='currentColor' aria-hidden='true'> <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z' /> </svg> </div> <div class='ml-3 w-0 flex-1 pt-0.5'> <p class='text-sm font-medium text-gray-900'>{/* Successfully saved! */}</p> <p class='mt-1 text-sm text-gray-500'>Anyone with a link can now view this file.</p> </div> <div class='ml-4 flex-shrink-0 flex'> <button class='bg-white rounded-md inline-flex text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'> <span class='sr-only'>Close</span> {/* <!-- Heroicon name: x --> */} <svg class='h-5 w-5' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='currentColor' aria-hidden='true'> <path fill-rule='evenodd' d='M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z' clip-rule='evenodd' /> </svg> </button> </div> </div> </div> </div> max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden Alerts.jsx <div class=\"fixed inset-0 flex items-end justify-center px-4 py-6 pointer-events-none sm:p-6 sm:items-start sm:justify-end\"> <!-- Notification panel, show/hide based on alert state. Entering: \"transform ease-out duration-300 transition\" From: \"translate-y-2 opacity-0 sm:translate-y-0 sm:translate-x-2\" To: \"translate-y-0 opacity-100 sm:translate-x-0\" Leaving: \"transition ease-in duration-100\" From: \"opacity-100\" To: \"opacity-0\" --> <div class=\"max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden\"> <div class=\"p-4\"> <div class=\"flex items-start\"> <div class=\"flex-shrink-0\"> <!-- Heroicon name: check-circle --> <svg class=\"h-6 w-6 text-green-400\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\"> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" /> </svg> </div> <div class=\"ml-3 w-0 flex-1 pt-0.5\"> <p class=\"text-sm font-medium text-gray-900\"> Successfully saved! </p> <p class=\"mt-1 text-sm text-gray-500\"> Anyone with a link can now view this file. </p> </div> <div class=\"ml-4 flex-shrink-0 flex\"> <button class=\"bg-white rounded-md inline-flex text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"> <span class=\"sr-only\">Close</span> <!-- Heroicon name: x --> <svg class=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\"> <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" /> </svg> </button> </div> </div> </div> </div> </div> </Pops> children component const authentication = useAuthentication() <Hea <Component {...pageProps} /> </AuthentiationProvider> c </SWRConfig> <SWRConfig value={{ fetcher }}> <AuthenticationProvider value={{ ...authentication }}> <Nav /> const onSubmit = () => {} <div className=\"flex w-screen h-screen text-gray-600 bg-gray-100\"> <div className=\"max-w-2xl p-12 m-auto space-y-8 bg-white rounded-lg shadow\"> <div className=\"flex items-center w-24 space-x-4\"> <img src=\"/img/purple-set/012-social-network.svg\" alt=\"\" /> </div> <p className=\"text-2xl\">A marketplace that empowers businesses and influencers.</p> <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 banners\"> <div className=\"p-4 text-white bg-pink-500 border-b-2 border-pink-600 rounded-lg shadow\"> <div className=\"text-3xl font-bold\">Buy</div> <p className=\"font-light\"> Spread the word on your product, service, or brand by finding the perfect influencer to deliver your product to an audience. </p> </div> <div className=\"p-4 text-white bg-blue-500 border-b-2 border-blue-600 rounded-lg shadow\"> <div className=\"text-3xl font-bold\">Sell</div> <p className=\"font-light\"> Leverage your existing social media following to make an income by marketing brands and products that curate to your following. </p> </div> </div> <form className=\"space-y-2\"> <p className=\"text-2xl font-light\">Be the first to know.</p> <div className=\"flex overflow-hidden border rounded-md\"> <input className=\"w-full p-2\" type=\"text\" placeholder=\"Enter your email\" /> <button className=\"px-4 text-xs font-bold text-white bg-blue-500 hover:bg-blue-600\"> Subscribe </button> </div> </form> <p className=\"text-sm text-gray-400\">Launching worldwide in 2021 Q1.</p> {/* <button className='px-4 py-2 font-bold text-white bg-pink-400 border-b-2 border-pink-600 rounded-md'> Be the first to know </button> */} </div> </div> {/* <div className='container p-4 py-16 mx-auto text-gray-600'> <div className='mb-6'> <div className='flex items-center animate-pulse mb-4'> <img className='w-16 mr-4' src='/img/purple-set/022-like.svg' alt='' /> <p className='text-3xl font-bold uppercase'>Buy</p> </div> <p className='text-lg'>Get your product, service, or brand promoted by effective influencers.</p> </div> <div className='flex items-center animate-pulse'> <img className='w-16 mr-4' src='/img/purple-set/001-notification.svg' alt='' /> <p className='text-3xl font-bold uppercase'>Sell</p> </div> <p className='text-lg'> Leverage your existing social media following to make an income by selling marketing services. </p> </div> */} <div className=\"flex w-screen h-screen text-gray-600 bg-gray-100\"> <div className=\"max-w-2xl p-12 m-auto space-y-8 bg-white rounded-lg shadow\"> <div className=\"flex items-center w-24 space-x-4\"> <img src=\"/img/purple-set/012-social-network.svg\" alt=\"\" /> </div> <p className=\"text-2xl\">A marketplace that empowers businesses and influencers.</p> <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 banners\"> <div className=\"p-4 text-white bg-pink-500 border-b-2 border-pink-600 rounded-lg shadow\"> <div className=\"text-3xl font-bold\">Buy</div> <p className=\"font-light\"> Spread the word on your product, service, or brand by finding the perfect influencer to deliver your product to an audience. </p> </div> <div className=\"p-4 text-white bg-blue-500 border-b-2 border-blue-600 rounded-lg shadow\"> <div className=\"text-3xl font-bold\">Sell</div> <p className=\"font-light\"> Leverage your existing social media following to make an income by marketing brands and products that curate to your following. </p> </div> </div> <form className=\"space-y-2\"> <p className=\"text-2xl font-light\">Be the first to know.</p> <div className=\"flex overflow-hidden border rounded-md\"> <input className=\"w-full p-2\" type=\"text\" placeholder=\"Enter your email\" /> <button className=\"px-4 text-xs font-bold text-white bg-blue-500 hover:bg-blue-600\"> Subscribe </button> </div> </form> <p className=\"text-sm text-gray-400\">Launching worldwide in 2021 Q1.</p> {/* <button className='px-4 py-2 font-bold text-white bg-pink-400 border-b-2 border-pink-600 rounded-md'> Be the first to know </button> */} </div> </div> {/* <div className='container p-4 py-16 mx-auto text-gray-600'> <div className='mb-6'> <div className='flex items-center animate-pulse mb-4'> <img className='w-16 mr-4' src='/img/purple-set/022-like.svg' alt='' /> <p className='text-3xl font-bold uppercase'>Buy</p> </div> <p className='text-lg'>Get your product, service, or brand promoted by effective influencers.</p> </div> <div className='flex items-center animate-pulse'> <img className='w-16 mr-4' src='/img/purple-set/001-notification.svg' alt='' /> <p className='text-3xl font-bold uppercase'>Sell</p> </div> <p className='text-lg'> Leverage your existing social media following to make an income by selling marketing services. </p> </div> */} </> import Axios from 'axios' import AuthenticationContext from 'context/AuthenticationContext' import Cookies from 'js-cookie' import Router, { useRouter } from 'next/router' import { useContext, useEffect, useMemo } from 'react' import useSWR from 'swr' export const api = Axios.create({ baseURL: `http://api.upsocia.com/api/v2`, headers: { 'x-auth-token': Cookies.get('token') } }) export const fetcher = (url) => api.get(url).then((res) => res.data) export const useAuthentication = () => { const router = useRouter() const { data: userData, error, mutate } = useSWR(Cookies.get('token') ? '/profile/view' : null, fetcher) const user = useMemo(() => { return { ...userData?.msg, isOnboarded: userData?.msg ? true : false, isAuthenticated: Cookies.get('token') ? true : false } }) useEffect(() => { const handleRouteChangeComplete = (path) => { if (user.isAuthenticated) { if (!user.isOnboared && !['/onboarding'].includes(path)) { console.log('Redirecting the user to the onboarding flow.') router.push('/onboarding') } } } // handleRouteChangeComplete() Router.events.on('routeChangeComplete', handleRouteChangeComplete) return () => Router.events.off('routeChangeComplete', handleRouteChangeComplete) }, [user]) useEffect(() => { if (Cookies.get('userId')) api.get(`/auth/refresh/${Cookies.get('userId')}`) .then((res) => console.log(res)) .catch((err) => console.log(err)) }, []) return { user, isAuthenticated: user.isAuthenticated, isNotAuthenticated: !user.isAuthenticated } } export const usePageLocker = () => { const router = useRouter() const { user } = useContext(AuthenticationContext) useEffect(() => { if (!user.isAuthenticated) router.push('/auth/signin') }, [user]) } jsconfig.json package-lock.json package.json postcss.config.js public src tailwind.config.js yarn.lock db.get('clipboards').value() clipboards {clip.content} import 'ace-builds/src-noconflict/theme-github' import 'ace-builds/src-noconflict/theme-github' {clip.content} clipboards db.get('clipboards').value() bg-gray-100 {clip.content} import 'ace-builds/src-noconflict/mode-javascript' import 'ace-builds/src-noconflict/theme-github' bg-gray-100 import AceEditor from 'react-ace' import 'ace-builds/src-noconflict/theme-github' import 'ace-builds/src-noconflict/mode-javascript' {clip.content} ClipboardPage e.target.value db.set('notes', notes).write() db.get('clipboards').value() clipboards import 'ace-builds/src-noconflict/theme-github' import 'ace-builds/src-noconflict/mode-javascript' import AceEditor from 'react-ace' {clip.content} https://trello.com/c/51upz20B GH - ticket -> update Kamal - API update + Backend API failsafe - Feed tags filter - post-deletion modal - generate reports test PDF (edite GH - ticket -> update Kamal - API update + Backend API failsafe - Feed tags filter - post-deletion modal - generate reports test PDF (edite --no-verify integrationUrl integrationUrlRequest const { data: integrationUrlRequest } = useSWR(slug ? `/apps/${slug}/connection/url` : null) sdasdasdkasjdlkasjldkjaskldjalskjdlkasjdlksajdksa d afd I need help. import { useEffect } from 'react' font-medium font-bold <NavLink href='/notes' color='pink'> Notes </NavLink> sdasdasdkasjdlkasjldkjaskldjalskjdlkasjdlksajdksa d afd I need help. */} <NavLink href='/options' color='green'> Options </NavLink> console.log(alerts.filter((alert) => alert.id !== id)) console.log(alerts.filter((alert) => alert.id !== id)) alerts.filter((alert) => alert.id !== id) subtitle {alerts.map((alert, index) => ( alert.title 2 1, clicks id shortId.generate() shortId config setAlerts setAlerts([config, ...s]) s=> [config,] setAlerts const newAlert = {} setAlerts alerts {' '} w-full mb-2 </div> <div class=''> ml-auto w-auto w-full max-w-xs fixed inset-0 flex items-end justify-center px-4 py-6 pointer-events-none sm:p-6 sm:items-start sm:justify-end tai } alerts <div class='max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden'> <div class='p-4'> <div class='flex items-start'> <div class='flex-shrink-0'> {/* <!-- Heroicon name: check-circle --> */} <svg class='h-6 w-6 text-green-400' xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='currentColor' aria-hidden='true'> <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z' /> </svg> </div> <div class='ml-3 w-0 flex-1 pt-0.5'> <p class='text-sm font-medium text-gray-900'>{/* Successfully saved! */}</p> <p class='mt-1 text-sm text-gray-500'>Anyone with a link can now view this file.</p> </div> <div class='ml-4 flex-shrink-0 flex'> <button class='bg-white rounded-md inline-flex text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'> <span class='sr-only'>Close</span> {/* <!-- Heroicon name: x --> */} <svg class='h-5 w-5' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='currentColor' aria-hidden='true'> <path fill-rule='evenodd' d='M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z' clip-rule='evenodd' /> </svg> </button> </div> </div> </div> </div> max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden Alerts.jsx <div class=\"fixed inset-0 flex items-end justify-center px-4 py-6 pointer-events-none sm:p-6 sm:items-start sm:justify-end\"> <!-- Notification panel, show/hide based on alert state. Entering: \"transform ease-out duration-300 transition\" From: \"translate-y-2 opacity-0 sm:translate-y-0 sm:translate-x-2\" To: \"translate-y-0 opacity-100 sm:translate-x-0\" Leaving: \"transition ease-in duration-100\" From: \"opacity-100\" To: \"opacity-0\" --> <div class=\"max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden\"> <div class=\"p-4\"> <div class=\"flex items-start\"> <div class=\"flex-shrink-0\"> <!-- Heroicon name: check-circle --> <svg class=\"h-6 w-6 text-green-400\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\"> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" /> </svg> </div> <div class=\"ml-3 w-0 flex-1 pt-0.5\"> <p class=\"text-sm font-medium text-gray-900\"> Successfully saved! </p> <p class=\"mt-1 text-sm text-gray-500\"> Anyone with a link can now view this file. </p> </div> <div class=\"ml-4 flex-shrink-0 flex\"> <button class=\"bg-white rounded-md inline-flex text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"> <span class=\"sr-only\">Close</span> <!-- Heroicon name: x --> <svg class=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\"> <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" /> </svg> </button> </div> </div> </div> </div> </div> </Pops> children component const authentication = useAuthentication() <Hea <Component {...pageProps} /> </AuthentiationProvider> c </SWRConfig> <SWRConfig value={{ fetcher }}> <AuthenticationProvider value={{ ...authentication }}> <Nav /> const onSubmit = () => {} <div className=\"flex w-screen h-screen text-gray-600 bg-gray-100\"> <div className=\"max-w-2xl p-12 m-auto space-y-8 bg-white rounded-lg shadow\"> <div className=\"flex items-center w-24 space-x-4\"> <img src=\"/img/purple-set/012-social-network.svg\" alt=\"\" /> </div> <p className=\"text-2xl\">A marketplace that empowers businesses and influencers.</p> <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 banners\"> <div className=\"p-4 text-white bg-pink-500 border-b-2 border-pink-600 rounded-lg shadow\"> <div className=\"text-3xl font-bold\">Buy</div> <p className=\"font-light\"> Spread the word on your product, service, or brand by finding the perfect influencer to deliver your product to an audience. </p> </div> <div className=\"p-4 text-white bg-blue-500 border-b-2 border-blue-600 rounded-lg shadow\"> <div className=\"text-3xl font-bold\">Sell</div> <p className=\"font-light\"> Leverage your existing social media following to make an income by marketing brands and products that curate to your following. </p> </div> </div> <form className=\"space-y-2\"> <p className=\"text-2xl font-light\">Be the first to know.</p> <div className=\"flex overflow-hidden border rounded-md\"> <input className=\"w-full p-2\" type=\"text\" placeholder=\"Enter your email\" /> <button className=\"px-4 text-xs font-bold text-white bg-blue-500 hover:bg-blue-600\"> Subscribe </button> </div> </form> <p className=\"text-sm text-gray-400\">Launching worldwide in 2021 Q1.</p> {/* <button className='px-4 py-2 font-bold text-white bg-pink-400 border-b-2 border-pink-600 rounded-md'> Be the first to know </button> */} </div> </div> {/* <div className='container p-4 py-16 mx-auto text-gray-600'> <div className='mb-6'> <div className='flex items-center animate-pulse mb-4'> <img className='w-16 mr-4' src='/img/purple-set/022-like.svg' alt='' /> <p className='text-3xl font-bold uppercase'>Buy</p> </div> <p className='text-lg'>Get your product, service, or brand promoted by effective influencers.</p> </div> <div className='flex items-center animate-pulse'> <img className='w-16 mr-4' src='/img/purple-set/001-notification.svg' alt='' /> <p className='text-3xl font-bold uppercase'>Sell</p> </div> <p className='text-lg'> Leverage your existing social media following to make an income by selling marketing services. </p> </div> */} <div className=\"flex w-screen h-screen text-gray-600 bg-gray-100\"> <div className=\"max-w-2xl p-12 m-auto space-y-8 bg-white rounded-lg shadow\"> <div className=\"flex items-center w-24 space-x-4\"> <img src=\"/img/purple-set/012-social-network.svg\" alt=\"\" /> </div> <p className=\"text-2xl\">A marketplace that empowers businesses and influencers.</p> <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 banners\"> <div className=\"p-4 text-white bg-pink-500 border-b-2 border-pink-600 rounded-lg shadow\"> <div className=\"text-3xl font-bold\">Buy</div> <p className=\"font-light\"> Spread the word on your product, service, or brand by finding the perfect influencer to deliver your product to an audience. </p> </div> <div className=\"p-4 text-white bg-blue-500 border-b-2 border-blue-600 rounded-lg shadow\"> <div className=\"text-3xl font-bold\">Sell</div> <p className=\"font-light\"> Leverage your existing social media following to make an income by marketing brands and products that curate to your following. </p> </div> </div> <form className=\"space-y-2\"> <p className=\"text-2xl font-light\">Be the first to know.</p> <div className=\"flex overflow-hidden border rounded-md\"> <input className=\"w-full p-2\" type=\"text\" placeholder=\"Enter your email\" /> <button className=\"px-4 text-xs font-bold text-white bg-blue-500 hover:bg-blue-600\"> Subscribe </button> </div> </form> <p className=\"text-sm text-gray-400\">Launching worldwide in 2021 Q1.</p> {/* <button className='px-4 py-2 font-bold text-white bg-pink-400 border-b-2 border-pink-600 rounded-md'> Be the first to know </button> */} </div> </div> {/* <div className='container p-4 py-16 mx-auto text-gray-600'> <div className='mb-6'> <div className='flex items-center animate-pulse mb-4'> <img className='w-16 mr-4' src='/img/purple-set/022-like.svg' alt='' /> <p className='text-3xl font-bold uppercase'>Buy</p> </div> <p className='text-lg'>Get your product, service, or brand promoted by effective influencers.</p> </div> <div className='flex items-center animate-pulse'> <img className='w-16 mr-4' src='/img/purple-set/001-notification.svg' alt='' /> <p className='text-3xl font-bold uppercase'>Sell</p> </div> <p className='text-lg'> Leverage your existing social media following to make an income by selling marketing services. </p> </div> */} </> import Axios from 'axios' import AuthenticationContext from 'context/AuthenticationContext' import Cookies from 'js-cookie' import Router, { useRouter } from 'next/router' import { useContext, useEffect, useMemo } from 'react' import useSWR from 'swr' export const api = Axios.create({ baseURL: `http://api.upsocia.com/api/v2`, headers: { 'x-auth-token': Cookies.get('token') } }) export const fetcher = (url) => api.get(url).then((res) => res.data) export const useAuthentication = () => { const router = useRouter() const { data: userData, error, mutate } = useSWR(Cookies.get('token') ? '/profile/view' : null, fetcher) const user = useMemo(() => { return { ...userData?.msg, isOnboarded: userData?.msg ? true : false, isAuthenticated: Cookies.get('token') ? true : false } }) useEffect(() => { const handleRouteChangeComplete = (path) => { if (user.isAuthenticated) { if (!user.isOnboared && !['/onboarding'].includes(path)) { console.log('Redirecting the user to the onboarding flow.') router.push('/onboarding') } } } // handleRouteChangeComplete() Router.events.on('routeChangeComplete', handleRouteChangeComplete) return () => Router.events.off('routeChangeComplete', handleRouteChangeComplete) }, [user]) useEffect(() => { if (Cookies.get('userId')) api.get(`/auth/refresh/${Cookies.get('userId')}`) .then((res) => console.log(res)) .catch((err) => console.log(err)) }, []) return { user, isAuthenticated: user.isAuthenticated, isNotAuthenticated: !user.isAuthenticated } } export const usePageLocker = () => { const router = useRouter() const { user } = useContext(AuthenticationContext) useEffect(() => { if (!user.isAuthenticated) router.push('/auth/signin') }, [user]) } jsconfig.json package-lock.json package.json postcss.config.js public src tailwind.config.js yarn.lock db.get('clipboards').value() clipboards {clip.content} import 'ace-builds/src-noconflict/theme-github' import 'ace-builds/src-noconflict/theme-github' {clip.content} clipboards db.get('clipboards').value() bg-gray-100 {clip.content} import 'ace-builds/src-noconflict/mode-javascript' import 'ace-builds/src-noconflict/theme-github' bg-gray-100 import AceEditor from 'react-ace' import 'ace-builds/src-noconflict/theme-github' import 'ace-builds/src-noconflict/mode-javascript' {clip.content} ClipboardPage e.target.value db.set('notes', notes).write() db.get('clipboards').value() clipboards import 'ace-builds/src-noconflict/theme-github' import 'ace-builds/src-noconflict/mode-javascript' import AceEditor from 'react-ace' {clip.content} https://trello.com/c/51upz20B GH - ticket -> update Kamal - API update + Backend API failsafe - Feed tags filter - post-deletion modal - generate reports test PDF (edite GH - ticket -> update Kamal - API update + Backend API failsafe - Feed tags filter - post-deletion modal - generate reports test PDF (edite --no-verify integrationUrl integrationUrlRequest\nsdasdasdkasjdlkasjldkjaskldjalskjdlkasjdlksajdksa\nClipboard Notes Options sdasdasdkasjdlkasjldkjaskldjalskjdlkasjdlksajdksa d afd I need help. import { useEffect } from 'react' font-medium font-bold <NavLink href='/notes' color='pink'> Notes </NavLink> sdasdasdkasjdlkasjldkjaskldjalskjdlkasjdlksajdksa d afd I need help. */} <NavLink href='/options' color='green'> Options </NavLink> console.log(alerts.filter((alert) => alert.id !== id)) console.log(alerts.filter((alert) => alert.id !== id)) alerts.filter((alert) => alert.id !== id) subtitle {alerts.map((alert, index) => ( alert.title 2 1, clicks id shortId.generate() shortId config setAlerts setAlerts([config, ...s]) s=> [config,] setAlerts const newAlert = {} setAlerts alerts {' '} w-full mb-2 </div> <div class=''> ml-auto w-auto w-full max-w-xs fixed inset-0 flex items-end justify-center px-4 py-6 pointer-events-none sm:p-6 sm:items-start sm:justify-end tai } alerts <div class='max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden'> <div class='p-4'> <div class='flex items-start'> <div class='flex-shrink-0'> {/* <!-- Heroicon name: check-circle --> */} <svg class='h-6 w-6 text-green-400' xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='currentColor' aria-hidden='true'> <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z' /> </svg> </div> <div class='ml-3 w-0 flex-1 pt-0.5'> <p class='text-sm font-medium text-gray-900'>{/* Successfully saved! */}</p> <p class='mt-1 text-sm text-gray-500'>Anyone with a link can now view this file.</p> </div> <div class='ml-4 flex-shrink-0 flex'> <button class='bg-white rounded-md inline-flex text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'> <span class='sr-only'>Close</span> {/* <!-- Heroicon name: x --> */} <svg class='h-5 w-5' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='currentColor' aria-hidden='true'> <path fill-rule='evenodd' d='M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z' clip-rule='evenodd' /> </svg> </button> </div> </div> </div> </div> max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden Alerts.jsx <div class=\"fixed inset-0 flex items-end justify-center px-4 py-6 pointer-events-none sm:p-6 sm:items-start sm:justify-end\"> <!-- Notification panel, show/hide based on alert state. Entering: \"transform ease-out duration-300 transition\" From: \"translate-y-2 opacity-0 sm:translate-y-0 sm:translate-x-2\" To: \"translate-y-0 opacity-100 sm:translate-x-0\" Leaving: \"transition ease-in duration-100\" From: \"opacity-100\" To: \"opacity-0\" --> <div class=\"max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden\"> <div class=\"p-4\"> <div class=\"flex items-start\"> <div class=\"flex-shrink-0\"> <!-- Heroicon name: check-circle --> <svg class=\"h-6 w-6 text-green-400\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\"> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" /> </svg> </div> <div class=\"ml-3 w-0 flex-1 pt-0.5\"> <p class=\"text-sm font-medium text-gray-900\"> Successfully saved! </p> <p class=\"mt-1 text-sm text-gray-500\"> Anyone with a link can now view this file. </p> </div> <div class=\"ml-4 flex-shrink-0 flex\"> <button class=\"bg-white rounded-md inline-flex text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"> <span class=\"sr-only\">Close</span> <!-- Heroicon name: x --> <svg class=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\"> <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" /> </svg> </button> </div> </div> </div> </div> </div> </Pops> children component const authentication = useAuthentication() <Hea <Component {...pageProps} /> </AuthentiationProvider> c </SWRConfig> <SWRConfig value={{ fetcher }}> <AuthenticationProvider value={{ ...authentication }}> <Nav /> const onSubmit = () => {} <div className=\"flex w-screen h-screen text-gray-600 bg-gray-100\"> <div className=\"max-w-2xl p-12 m-auto space-y-8 bg-white rounded-lg shadow\"> <div className=\"flex items-center w-24 space-x-4\"> <img src=\"/img/purple-set/012-social-network.svg\" alt=\"\" /> </div> <p className=\"text-2xl\">A marketplace that empowers businesses and influencers.</p> <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 banners\"> <div className=\"p-4 text-white bg-pink-500 border-b-2 border-pink-600 rounded-lg shadow\"> <div className=\"text-3xl font-bold\">Buy</div> <p className=\"font-light\"> Spread the word on your product, service, or brand by finding the perfect influencer to deliver your product to an audience. </p> </div> <div className=\"p-4 text-white bg-blue-500 border-b-2 border-blue-600 rounded-lg shadow\"> <div className=\"text-3xl font-bold\">Sell</div> <p className=\"font-light\"> Leverage your existing social media following to make an income by marketing brands and products that curate to your following. </p> </div> </div> <form className=\"space-y-2\"> <p className=\"text-2xl font-light\">Be the first to know.</p> <div className=\"flex overflow-hidden border rounded-md\"> <input className=\"w-full p-2\" type=\"text\" placeholder=\"Enter your email\" /> <button className=\"px-4 text-xs font-bold text-white bg-blue-500 hover:bg-blue-600\"> Subscribe </button> </div> </form> <p className=\"text-sm text-gray-400\">Launching worldwide in 2021 Q1.</p> {/* <button className='px-4 py-2 font-bold text-white bg-pink-400 border-b-2 border-pink-600 rounded-md'> Be the first to know </button> */} </div> </div> {/* <div className='container p-4 py-16 mx-auto text-gray-600'> <div className='mb-6'> <div className='flex items-center animate-pulse mb-4'> <img className='w-16 mr-4' src='/img/purple-set/022-like.svg' alt='' /> <p className='text-3xl font-bold uppercase'>Buy</p> </div> <p className='text-lg'>Get your product, service, or brand promoted by effective influencers.</p> </div> <div className='flex items-center animate-pulse'> <img className='w-16 mr-4' src='/img/purple-set/001-notification.svg' alt='' /> <p className='text-3xl font-bold uppercase'>Sell</p> </div> <p className='text-lg'> Leverage your existing social media following to make an income by selling marketing services. </p> </div> */} <div className=\"flex w-screen h-screen text-gray-600 bg-gray-100\"> <div className=\"max-w-2xl p-12 m-auto space-y-8 bg-white rounded-lg shadow\"> <div className=\"flex items-center w-24 space-x-4\"> <img src=\"/img/purple-set/012-social-network.svg\" alt=\"\" /> </div> <p className=\"text-2xl\">A marketplace that empowers businesses and influencers.</p> <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 banners\"> <div className=\"p-4 text-white bg-pink-500 border-b-2 border-pink-600 rounded-lg shadow\"> <div className=\"text-3xl font-bold\">Buy</div> <p className=\"font-light\"> Spread the word on your product, service, or brand by finding the perfect influencer to deliver your product to an audience. </p> </div> <div className=\"p-4 text-white bg-blue-500 border-b-2 border-blue-600 rounded-lg shadow\"> <div className=\"text-3xl font-bold\">Sell</div> <p className=\"font-light\"> Leverage your existing social media following to make an income by marketing brands and products that curate to your following. </p> </div> </div> <form className=\"space-y-2\"> <p className=\"text-2xl font-light\">Be the first to know.</p> <div className=\"flex overflow-hidden border rounded-md\"> <input className=\"w-full p-2\" type=\"text\" placeholder=\"Enter your email\" /> <button className=\"px-4 text-xs font-bold text-white bg-blue-500 hover:bg-blue-600\"> Subscribe </button> </div> </form> <p className=\"text-sm text-gray-400\">Launching worldwide in 2021 Q1.</p> {/* <button className='px-4 py-2 font-bold text-white bg-pink-400 border-b-2 border-pink-600 rounded-md'> Be the first to know </button> */} </div> </div> {/* <div className='container p-4 py-16 mx-auto text-gray-600'> <div className='mb-6'> <div className='flex items-center animate-pulse mb-4'> <img className='w-16 mr-4' src='/img/purple-set/022-like.svg' alt='' /> <p className='text-3xl font-bold uppercase'>Buy</p> </div> <p className='text-lg'>Get your product, service, or brand promoted by effective influencers.</p> </div> <div className='flex items-center animate-pulse'> <img className='w-16 mr-4' src='/img/purple-set/001-notification.svg' alt='' /> <p className='text-3xl font-bold uppercase'>Sell</p> </div> <p className='text-lg'> Leverage your existing social media following to make an income by selling marketing services. </p> </div> */} </> import Axios from 'axios' import AuthenticationContext from 'context/AuthenticationContext' import Cookies from 'js-cookie' import Router, { useRouter } from 'next/router' import { useContext, useEffect, useMemo } from 'react' import useSWR from 'swr' export const api = Axios.create({ baseURL: `http://api.upsocia.com/api/v2`, headers: { 'x-auth-token': Cookies.get('token') } }) export const fetcher = (url) => api.get(url).then((res) => res.data) export const useAuthentication = () => { const router = useRouter() const { data: userData, error, mutate } = useSWR(Cookies.get('token') ? '/profile/view' : null, fetcher) const user = useMemo(() => { return { ...userData?.msg, isOnboarded: userData?.msg ? true : false, isAuthenticated: Cookies.get('token') ? true : false } }) useEffect(() => { const handleRouteChangeComplete = (path) => { if (user.isAuthenticated) { if (!user.isOnboared && !['/onboarding'].includes(path)) { console.log('Redirecting the user to the onboarding flow.') router.push('/onboarding') } } } // handleRouteChangeComplete() Router.events.on('routeChangeComplete', handleRouteChangeComplete) return () => Router.events.off('routeChangeComplete', handleRouteChangeComplete) }, [user]) useEffect(() => { if (Cookies.get('userId')) api.get(`/auth/refresh/${Cookies.get('userId')}`) .then((res) => console.log(res)) .catch((err) => console.log(err)) }, []) return { user, isAuthenticated: user.isAuthenticated, isNotAuthenticated: !user.isAuthenticated } } export const usePageLocker = () => { const router = useRouter() const { user } = useContext(AuthenticationContext) useEffect(() => { if (!user.isAuthenticated) router.push('/auth/signin') }, [user]) } jsconfig.json package-lock.json package.json postcss.config.js public src tailwind.config.js yarn.lock db.get('clipboards').value() clipboards {clip.content} import 'ace-builds/src-noconflict/theme-github' import 'ace-builds/src-noconflict/theme-github' {clip.content} clipboards db.get('clipboards').value() bg-gray-100 {clip.content} import 'ace-builds/src-noconflict/mode-javascript' import 'ace-builds/src-noconflict/theme-github' bg-gray-100 import AceEditor from 'react-ace' import 'ace-builds/src-noconflict/theme-github' import 'ace-builds/src-noconflict/mode-javascript' {clip.content} ClipboardPage e.target.value db.set('notes', notes).write() db.get('clipboards').value() clipboards import 'ace-builds/src-noconflict/theme-github' import 'ace-builds/src-noconflict/mode-javascript' import AceEditor from 'react-ace' {clip.content} https://trello.com/c/51upz20B GH - ticket -> update Kamal - API update + Backend API failsafe - Feed tags filter - post-deletion modal - generate reports test PDF (edite GH - ticket -> update Kamal - API update + Backend API failsafe - Feed tags filter - post-deletion modal - generate reports test PDF (edite --no-verify integrationUrl integrationUrlRequest const { data: integrationUrlRequest } = useSWR(slug ? `/apps/${slug}/connection/url` : null)\nsdasdasdkasjdlkasjldkjaskldjalskjdlkasjdlksajdksa d afd I need help.\nimport { useEffect } from 'react'\nfont-medium\nfont-bold\n<NavLink href='/notes' color='pink'> Notes </NavLink>\nsdasdasdkasjdlkasjldkjaskldjalskjdlkasjdlksajdksa d afd I need help.\n*/}\n<NavLink href='/options' color='green'> Options </NavLink>\nconsole.log(alerts.filter((alert) => alert.id !== id))\nconsole.log(alerts.filter((alert) => alert.id !== id))\nalerts.filter((alert) => alert.id !== id)\nsubtitle\n{alerts.map((alert, index) => (\nalert.title\n2\n1,\nclicks\nid\nshortId.generate()\nshortId\nconfig\nsetAlerts\nsetAlerts([config, ...s])\ns=> [config,]\nsetAlerts\nconst newAlert =\n{}\nsetAlerts\nalerts\n{' '}\nw-full\nmb-2\n</div>\n<div class=''>\nml-auto\nw-auto\nw-full\nmax-w-xs\nfixed inset-0 flex items-end justify-center px-4 py-6 pointer-events-none sm:p-6 sm:items-start sm:justify-end\ntai\n}\nalerts\n<div class='max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden'> <div class='p-4'> <div class='flex items-start'> <div class='flex-shrink-0'> {/* <!-- Heroicon name: check-circle --> */} <svg class='h-6 w-6 text-green-400' xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='currentColor' aria-hidden='true'> <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z' /> </svg> </div> <div class='ml-3 w-0 flex-1 pt-0.5'> <p class='text-sm font-medium text-gray-900'>{/* Successfully saved! */}</p> <p class='mt-1 text-sm text-gray-500'>Anyone with a link can now view this file.</p> </div> <div class='ml-4 flex-shrink-0 flex'> <button class='bg-white rounded-md inline-flex text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'> <span class='sr-only'>Close</span> {/* <!-- Heroicon name: x --> */} <svg class='h-5 w-5' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='currentColor' aria-hidden='true'> <path fill-rule='evenodd' d='M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z' clip-rule='evenodd' /> </svg> </button> </div> </div> </div> </div>\nmax-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden\nAlerts.jsx\n<div class=\"fixed inset-0 flex items-end justify-center px-4 py-6 pointer-events-none sm:p-6 sm:items-start sm:justify-end\"> <!-- Notification panel, show/hide based on alert state. Entering: \"transform ease-out duration-300 transition\" From: \"translate-y-2 opacity-0 sm:translate-y-0 sm:translate-x-2\" To: \"translate-y-0 opacity-100 sm:translate-x-0\" Leaving: \"transition ease-in duration-100\" From: \"opacity-100\" To: \"opacity-0\" --> <div class=\"max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden\"> <div class=\"p-4\"> <div class=\"flex items-start\"> <div class=\"flex-shrink-0\"> <!-- Heroicon name: check-circle --> <svg class=\"h-6 w-6 text-green-400\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\"> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" /> </svg> </div> <div class=\"ml-3 w-0 flex-1 pt-0.5\"> <p class=\"text-sm font-medium text-gray-900\"> Successfully saved! </p> <p class=\"mt-1 text-sm text-gray-500\"> Anyone with a link can now view this file. </p> </div> <div class=\"ml-4 flex-shrink-0 flex\"> <button class=\"bg-white rounded-md inline-flex text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"> <span class=\"sr-only\">Close</span> <!-- Heroicon name: x --> <svg class=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\"> <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" /> </svg> </button> </div> </div> </div> </div> </div>\n</Pops>\nchildren\ncomponent\nconst authentication = useAuthentication()\n<Hea\n<Component {...pageProps} />\n</AuthentiationProvider>\nc\n</SWRConfig>\n<SWRConfig value={{ fetcher }}> <AuthenticationProvider value={{ ...authentication }}> <Nav />\nconst onSubmit = () => {}\n<div className=\"flex w-screen h-screen text-gray-600 bg-gray-100\"> <div className=\"max-w-2xl p-12 m-auto space-y-8 bg-white rounded-lg shadow\"> <div className=\"flex items-center w-24 space-x-4\"> <img src=\"/img/purple-set/012-social-network.svg\" alt=\"\" /> </div> <p className=\"text-2xl\">A marketplace that empowers businesses and influencers.</p> <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 banners\"> <div className=\"p-4 text-white bg-pink-500 border-b-2 border-pink-600 rounded-lg shadow\"> <div className=\"text-3xl font-bold\">Buy</div> <p className=\"font-light\"> Spread the word on your product, service, or brand by finding the perfect influencer to deliver your product to an audience. </p> </div> <div className=\"p-4 text-white bg-blue-500 border-b-2 border-blue-600 rounded-lg shadow\"> <div className=\"text-3xl font-bold\">Sell</div> <p className=\"font-light\"> Leverage your existing social media following to make an income by marketing brands and products that curate to your following. </p> </div> </div> <form className=\"space-y-2\"> <p className=\"text-2xl font-light\">Be the first to know.</p> <div className=\"flex overflow-hidden border rounded-md\"> <input className=\"w-full p-2\" type=\"text\" placeholder=\"Enter your email\" /> <button className=\"px-4 text-xs font-bold text-white bg-blue-500 hover:bg-blue-600\"> Subscribe </button> </div> </form> <p className=\"text-sm text-gray-400\">Launching worldwide in 2021 Q1.</p> {/* <button className='px-4 py-2 font-bold text-white bg-pink-400 border-b-2 border-pink-600 rounded-md'> Be the first to know </button> */} </div> </div> {/* <div className='container p-4 py-16 mx-auto text-gray-600'> <div className='mb-6'> <div className='flex items-center animate-pulse mb-4'> <img className='w-16 mr-4' src='/img/purple-set/022-like.svg' alt='' /> <p className='text-3xl font-bold uppercase'>Buy</p> </div> <p className='text-lg'>Get your product, service, or brand promoted by effective influencers.</p> </div> <div className='flex items-center animate-pulse'> <img className='w-16 mr-4' src='/img/purple-set/001-notification.svg' alt='' /> <p className='text-3xl font-bold uppercase'>Sell</p> </div> <p className='text-lg'> Leverage your existing social media following to make an income by selling marketing services. </p> </div> */}\n<div className=\"flex w-screen h-screen text-gray-600 bg-gray-100\"> <div className=\"max-w-2xl p-12 m-auto space-y-8 bg-white rounded-lg shadow\"> <div className=\"flex items-center w-24 space-x-4\"> <img src=\"/img/purple-set/012-social-network.svg\" alt=\"\" /> </div> <p className=\"text-2xl\">A marketplace that empowers businesses and influencers.</p> <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 banners\"> <div className=\"p-4 text-white bg-pink-500 border-b-2 border-pink-600 rounded-lg shadow\"> <div className=\"text-3xl font-bold\">Buy</div> <p className=\"font-light\"> Spread the word on your product, service, or brand by finding the perfect influencer to deliver your product to an audience. </p> </div> <div className=\"p-4 text-white bg-blue-500 border-b-2 border-blue-600 rounded-lg shadow\"> <div className=\"text-3xl font-bold\">Sell</div> <p className=\"font-light\"> Leverage your existing social media following to make an income by marketing brands and products that curate to your following. </p> </div> </div> <form className=\"space-y-2\"> <p className=\"text-2xl font-light\">Be the first to know.</p> <div className=\"flex overflow-hidden border rounded-md\"> <input className=\"w-full p-2\" type=\"text\" placeholder=\"Enter your email\" /> <button className=\"px-4 text-xs font-bold text-white bg-blue-500 hover:bg-blue-600\"> Subscribe </button> </div> </form> <p className=\"text-sm text-gray-400\">Launching worldwide in 2021 Q1.</p> {/* <button className='px-4 py-2 font-bold text-white bg-pink-400 border-b-2 border-pink-600 rounded-md'> Be the first to know </button> */} </div> </div> {/* <div className='container p-4 py-16 mx-auto text-gray-600'> <div className='mb-6'> <div className='flex items-center animate-pulse mb-4'> <img className='w-16 mr-4' src='/img/purple-set/022-like.svg' alt='' /> <p className='text-3xl font-bold uppercase'>Buy</p> </div> <p className='text-lg'>Get your product, service, or brand promoted by effective influencers.</p> </div> <div className='flex items-center animate-pulse'> <img className='w-16 mr-4' src='/img/purple-set/001-notification.svg' alt='' /> <p className='text-3xl font-bold uppercase'>Sell</p> </div> <p className='text-lg'> Leverage your existing social media following to make an income by selling marketing services. </p> </div> */} </>\nimport Axios from 'axios' import AuthenticationContext from 'context/AuthenticationContext' import Cookies from 'js-cookie' import Router, { useRouter } from 'next/router' import { useContext, useEffect, useMemo } from 'react' import useSWR from 'swr' export const api = Axios.create({ baseURL: `http://api.upsocia.com/api/v2`, headers: { 'x-auth-token': Cookies.get('token') } }) export const fetcher = (url) => api.get(url).then((res) => res.data) export const useAuthentication = () => { const router = useRouter() const { data: userData, error, mutate } = useSWR(Cookies.get('token') ? '/profile/view' : null, fetcher) const user = useMemo(() => { return { ...userData?.msg, isOnboarded: userData?.msg ? true : false, isAuthenticated: Cookies.get('token') ? true : false } }) useEffect(() => { const handleRouteChangeComplete = (path) => { if (user.isAuthenticated) { if (!user.isOnboared && !['/onboarding'].includes(path)) { console.log('Redirecting the user to the onboarding flow.') router.push('/onboarding') } } } // handleRouteChangeComplete() Router.events.on('routeChangeComplete', handleRouteChangeComplete) return () => Router.events.off('routeChangeComplete', handleRouteChangeComplete) }, [user]) useEffect(() => { if (Cookies.get('userId')) api.get(`/auth/refresh/${Cookies.get('userId')}`) .then((res) => console.log(res)) .catch((err) => console.log(err)) }, []) return { user, isAuthenticated: user.isAuthenticated, isNotAuthenticated: !user.isAuthenticated } } export const usePageLocker = () => { const router = useRouter() const { user } = useContext(AuthenticationContext) useEffect(() => { if (!user.isAuthenticated) router.push('/auth/signin') }, [user]) }\njsconfig.json package-lock.json package.json postcss.config.js public src tailwind.config.js yarn.lock\ndb.get('clipboards').value()\nclipboards\n{clip.content}\nimport 'ace-builds/src-noconflict/theme-github'\nimport 'ace-builds/src-noconflict/theme-github'\n{clip.content}\nclipboards\ndb.get('clipboards').value()\nbg-gray-100\n{clip.content}\nimport 'ace-builds/src-noconflict/mode-javascript'\nimport 'ace-builds/src-noconflict/theme-github'\nbg-gray-100\nimport AceEditor from 'react-ace'\nimport 'ace-builds/src-noconflict/theme-github'\nimport 'ace-builds/src-noconflict/mode-javascript'\n{clip.content}\nClipboardPage\ne.target.value\ndb.set('notes', notes).write()\ndb.get('clipboards').value()\nclipboards\nimport 'ace-builds/src-noconflict/theme-github'\nimport 'ace-builds/src-noconflict/mode-javascript'\nimport AceEditor from 'react-ace'\n{clip.content}\nhttps://trello.com/c/51upz20B"
    },
    {
      "id": "6oWbyk075",
      "date": 1607655356056,
      "content": "db?.get('clipboards').value()"
    },
    {
      "id": "ND3SIMLei",
      "date": 1607655323059,
      "content": "package-lock.json"
    },
    {
      "id": "4LfVCQlRp",
      "date": 1607655315556,
      "content": "jsconfig.json"
    },
    {
      "id": "Yd47dIFvU",
      "date": 1607655315055,
      "content": "jsconfig"
    },
    {
      "id": "mQoIdf5Ew",
      "date": 1607655304553,
      "content": "package"
    },
    {
      "id": "aexrDCWBj",
      "date": 1607655301552,
      "content": "Clipboard\nNotes\nOptions\nsdasdasdkasjdlkasjldkjaskldjalskjdlkasjdlksajdksa\nClipboard Notes Options sdasdasdkasjdlkasjldkjaskldjalskjdlkasjdlksajdksa d afd I need help. import { useEffect } from 'react' font-medium font-bold <NavLink href='/notes' color='pink'> Notes </NavLink> sdasdasdkasjdlkasjldkjaskldjalskjdlkasjdlksajdksa d afd I need help. */} <NavLink href='/options' color='green'> Options </NavLink> console.log(alerts.filter((alert) => alert.id !== id)) console.log(alerts.filter((alert) => alert.id !== id)) alerts.filter((alert) => alert.id !== id) subtitle {alerts.map((alert, index) => ( alert.title 2 1, clicks id shortId.generate() shortId config setAlerts setAlerts([config, ...s]) s=> [config,] setAlerts const newAlert = {} setAlerts alerts {' '} w-full mb-2 </div> <div class=''> ml-auto w-auto w-full max-w-xs fixed inset-0 flex items-end justify-center px-4 py-6 pointer-events-none sm:p-6 sm:items-start sm:justify-end tai } alerts <div class='max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden'> <div class='p-4'> <div class='flex items-start'> <div class='flex-shrink-0'> {/* <!-- Heroicon name: check-circle --> */} <svg class='h-6 w-6 text-green-400' xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='currentColor' aria-hidden='true'> <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z' /> </svg> </div> <div class='ml-3 w-0 flex-1 pt-0.5'> <p class='text-sm font-medium text-gray-900'>{/* Successfully saved! */}</p> <p class='mt-1 text-sm text-gray-500'>Anyone with a link can now view this file.</p> </div> <div class='ml-4 flex-shrink-0 flex'> <button class='bg-white rounded-md inline-flex text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'> <span class='sr-only'>Close</span> {/* <!-- Heroicon name: x --> */} <svg class='h-5 w-5' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='currentColor' aria-hidden='true'> <path fill-rule='evenodd' d='M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z' clip-rule='evenodd' /> </svg> </button> </div> </div> </div> </div> max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden Alerts.jsx <div class=\"fixed inset-0 flex items-end justify-center px-4 py-6 pointer-events-none sm:p-6 sm:items-start sm:justify-end\"> <!-- Notification panel, show/hide based on alert state. Entering: \"transform ease-out duration-300 transition\" From: \"translate-y-2 opacity-0 sm:translate-y-0 sm:translate-x-2\" To: \"translate-y-0 opacity-100 sm:translate-x-0\" Leaving: \"transition ease-in duration-100\" From: \"opacity-100\" To: \"opacity-0\" --> <div class=\"max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden\"> <div class=\"p-4\"> <div class=\"flex items-start\"> <div class=\"flex-shrink-0\"> <!-- Heroicon name: check-circle --> <svg class=\"h-6 w-6 text-green-400\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\"> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" /> </svg> </div> <div class=\"ml-3 w-0 flex-1 pt-0.5\"> <p class=\"text-sm font-medium text-gray-900\"> Successfully saved! </p> <p class=\"mt-1 text-sm text-gray-500\"> Anyone with a link can now view this file. </p> </div> <div class=\"ml-4 flex-shrink-0 flex\"> <button class=\"bg-white rounded-md inline-flex text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"> <span class=\"sr-only\">Close</span> <!-- Heroicon name: x --> <svg class=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\"> <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" /> </svg> </button> </div> </div> </div> </div> </div> </Pops> children component const authentication = useAuthentication() <Hea <Component {...pageProps} /> </AuthentiationProvider> c </SWRConfig> <SWRConfig value={{ fetcher }}> <AuthenticationProvider value={{ ...authentication }}> <Nav /> const onSubmit = () => {} <div className=\"flex w-screen h-screen text-gray-600 bg-gray-100\"> <div className=\"max-w-2xl p-12 m-auto space-y-8 bg-white rounded-lg shadow\"> <div className=\"flex items-center w-24 space-x-4\"> <img src=\"/img/purple-set/012-social-network.svg\" alt=\"\" /> </div> <p className=\"text-2xl\">A marketplace that empowers businesses and influencers.</p> <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 banners\"> <div className=\"p-4 text-white bg-pink-500 border-b-2 border-pink-600 rounded-lg shadow\"> <div className=\"text-3xl font-bold\">Buy</div> <p className=\"font-light\"> Spread the word on your product, service, or brand by finding the perfect influencer to deliver your product to an audience. </p> </div> <div className=\"p-4 text-white bg-blue-500 border-b-2 border-blue-600 rounded-lg shadow\"> <div className=\"text-3xl font-bold\">Sell</div> <p className=\"font-light\"> Leverage your existing social media following to make an income by marketing brands and products that curate to your following. </p> </div> </div> <form className=\"space-y-2\"> <p className=\"text-2xl font-light\">Be the first to know.</p> <div className=\"flex overflow-hidden border rounded-md\"> <input className=\"w-full p-2\" type=\"text\" placeholder=\"Enter your email\" /> <button className=\"px-4 text-xs font-bold text-white bg-blue-500 hover:bg-blue-600\"> Subscribe </button> </div> </form> <p className=\"text-sm text-gray-400\">Launching worldwide in 2021 Q1.</p> {/* <button className='px-4 py-2 font-bold text-white bg-pink-400 border-b-2 border-pink-600 rounded-md'> Be the first to know </button> */} </div> </div> {/* <div className='container p-4 py-16 mx-auto text-gray-600'> <div className='mb-6'> <div className='flex items-center animate-pulse mb-4'> <img className='w-16 mr-4' src='/img/purple-set/022-like.svg' alt='' /> <p className='text-3xl font-bold uppercase'>Buy</p> </div> <p className='text-lg'>Get your product, service, or brand promoted by effective influencers.</p> </div> <div className='flex items-center animate-pulse'> <img className='w-16 mr-4' src='/img/purple-set/001-notification.svg' alt='' /> <p className='text-3xl font-bold uppercase'>Sell</p> </div> <p className='text-lg'> Leverage your existing social media following to make an income by selling marketing services. </p> </div> */} <div className=\"flex w-screen h-screen text-gray-600 bg-gray-100\"> <div className=\"max-w-2xl p-12 m-auto space-y-8 bg-white rounded-lg shadow\"> <div className=\"flex items-center w-24 space-x-4\"> <img src=\"/img/purple-set/012-social-network.svg\" alt=\"\" /> </div> <p className=\"text-2xl\">A marketplace that empowers businesses and influencers.</p> <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 banners\"> <div className=\"p-4 text-white bg-pink-500 border-b-2 border-pink-600 rounded-lg shadow\"> <div className=\"text-3xl font-bold\">Buy</div> <p className=\"font-light\"> Spread the word on your product, service, or brand by finding the perfect influencer to deliver your product to an audience. </p> </div> <div className=\"p-4 text-white bg-blue-500 border-b-2 border-blue-600 rounded-lg shadow\"> <div className=\"text-3xl font-bold\">Sell</div> <p className=\"font-light\"> Leverage your existing social media following to make an income by marketing brands and products that curate to your following. </p> </div> </div> <form className=\"space-y-2\"> <p className=\"text-2xl font-light\">Be the first to know.</p> <div className=\"flex overflow-hidden border rounded-md\"> <input className=\"w-full p-2\" type=\"text\" placeholder=\"Enter your email\" /> <button className=\"px-4 text-xs font-bold text-white bg-blue-500 hover:bg-blue-600\"> Subscribe </button> </div> </form> <p className=\"text-sm text-gray-400\">Launching worldwide in 2021 Q1.</p> {/* <button className='px-4 py-2 font-bold text-white bg-pink-400 border-b-2 border-pink-600 rounded-md'> Be the first to know </button> */} </div> </div> {/* <div className='container p-4 py-16 mx-auto text-gray-600'> <div className='mb-6'> <div className='flex items-center animate-pulse mb-4'> <img className='w-16 mr-4' src='/img/purple-set/022-like.svg' alt='' /> <p className='text-3xl font-bold uppercase'>Buy</p> </div> <p className='text-lg'>Get your product, service, or brand promoted by effective influencers.</p> </div> <div className='flex items-center animate-pulse'> <img className='w-16 mr-4' src='/img/purple-set/001-notification.svg' alt='' /> <p className='text-3xl font-bold uppercase'>Sell</p> </div> <p className='text-lg'> Leverage your existing social media following to make an income by selling marketing services. </p> </div> */} </> import Axios from 'axios' import AuthenticationContext from 'context/AuthenticationContext' import Cookies from 'js-cookie' import Router, { useRouter } from 'next/router' import { useContext, useEffect, useMemo } from 'react' import useSWR from 'swr' export const api = Axios.create({ baseURL: `http://api.upsocia.com/api/v2`, headers: { 'x-auth-token': Cookies.get('token') } }) export const fetcher = (url) => api.get(url).then((res) => res.data) export const useAuthentication = () => { const router = useRouter() const { data: userData, error, mutate } = useSWR(Cookies.get('token') ? '/profile/view' : null, fetcher) const user = useMemo(() => { return { ...userData?.msg, isOnboarded: userData?.msg ? true : false, isAuthenticated: Cookies.get('token') ? true : false } }) useEffect(() => { const handleRouteChangeComplete = (path) => { if (user.isAuthenticated) { if (!user.isOnboared && !['/onboarding'].includes(path)) { console.log('Redirecting the user to the onboarding flow.') router.push('/onboarding') } } } // handleRouteChangeComplete() Router.events.on('routeChangeComplete', handleRouteChangeComplete) return () => Router.events.off('routeChangeComplete', handleRouteChangeComplete) }, [user]) useEffect(() => { if (Cookies.get('userId')) api.get(`/auth/refresh/${Cookies.get('userId')}`) .then((res) => console.log(res)) .catch((err) => console.log(err)) }, []) return { user, isAuthenticated: user.isAuthenticated, isNotAuthenticated: !user.isAuthenticated } } export const usePageLocker = () => { const router = useRouter() const { user } = useContext(AuthenticationContext) useEffect(() => { if (!user.isAuthenticated) router.push('/auth/signin') }, [user]) } jsconfig.json package-lock.json package.json postcss.config.js public src tailwind.config.js yarn.lock db.get('clipboards').value() clipboards {clip.content} import 'ace-builds/src-noconflict/theme-github' import 'ace-builds/src-noconflict/theme-github' {clip.content} clipboards db.get('clipboards').value() bg-gray-100 {clip.content} import 'ace-builds/src-noconflict/mode-javascript' import 'ace-builds/src-noconflict/theme-github' bg-gray-100 import AceEditor from 'react-ace' import 'ace-builds/src-noconflict/theme-github' import 'ace-builds/src-noconflict/mode-javascript' {clip.content} ClipboardPage e.target.value db.set('notes', notes).write() db.get('clipboards').value() clipboards import 'ace-builds/src-noconflict/theme-github' import 'ace-builds/src-noconflict/mode-javascript' import AceEditor from 'react-ace' {clip.content} https://trello.com/c/51upz20B GH - ticket -> update Kamal - API update + Backend API failsafe - Feed tags filter - post-deletion modal - generate reports test PDF (edite GH - ticket -> update Kamal - API update + Backend API failsafe - Feed tags filter - post-deletion modal - generate reports test PDF (edite --no-verify integrationUrl integrationUrlRequest const { data: integrationUrlRequest } = useSWR(slug ? `/apps/${slug}/connection/url` : null)\nsdasdasdkasjdlkasjldkjaskldjalskjdlkasjdlksajdksa d afd I need help.\nimport { useEffect } from 'react'\nfont-medium\nfont-bold\n<NavLink href='/notes' color='pink'> Notes </NavLink>\nsdasdasdkasjdlkasjldkjaskldjalskjdlkasjdlksajdksa d afd I need help.\n*/}\n<NavLink href='/options' color='green'> Options </NavLink>\nconsole.log(alerts.filter((alert) => alert.id !== id))\nconsole.log(alerts.filter((alert) => alert.id !== id))\nalerts.filter((alert) => alert.id !== id)\nsubtitle\n{alerts.map((alert, index) => (\nalert.title\n2\n1,\nclicks\nid\nshortId.generate()\nshortId\nconfig\nsetAlerts\nsetAlerts([config, ...s])\ns=> [config,]\nsetAlerts\nconst newAlert =\n{}\nsetAlerts\nalerts\n{' '}\nw-full\nmb-2\n</div>\n<div class=''>\nml-auto\nw-auto\nw-full\nmax-w-xs\nfixed inset-0 flex items-end justify-center px-4 py-6 pointer-events-none sm:p-6 sm:items-start sm:justify-end\ntai\n}\nalerts\n<div class='max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden'> <div class='p-4'> <div class='flex items-start'> <div class='flex-shrink-0'> {/* <!-- Heroicon name: check-circle --> */} <svg class='h-6 w-6 text-green-400' xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='currentColor' aria-hidden='true'> <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z' /> </svg> </div> <div class='ml-3 w-0 flex-1 pt-0.5'> <p class='text-sm font-medium text-gray-900'>{/* Successfully saved! */}</p> <p class='mt-1 text-sm text-gray-500'>Anyone with a link can now view this file.</p> </div> <div class='ml-4 flex-shrink-0 flex'> <button class='bg-white rounded-md inline-flex text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'> <span class='sr-only'>Close</span> {/* <!-- Heroicon name: x --> */} <svg class='h-5 w-5' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='currentColor' aria-hidden='true'> <path fill-rule='evenodd' d='M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z' clip-rule='evenodd' /> </svg> </button> </div> </div> </div> </div>\nmax-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden\nAlerts.jsx\n<div class=\"fixed inset-0 flex items-end justify-center px-4 py-6 pointer-events-none sm:p-6 sm:items-start sm:justify-end\"> <!-- Notification panel, show/hide based on alert state. Entering: \"transform ease-out duration-300 transition\" From: \"translate-y-2 opacity-0 sm:translate-y-0 sm:translate-x-2\" To: \"translate-y-0 opacity-100 sm:translate-x-0\" Leaving: \"transition ease-in duration-100\" From: \"opacity-100\" To: \"opacity-0\" --> <div class=\"max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden\"> <div class=\"p-4\"> <div class=\"flex items-start\"> <div class=\"flex-shrink-0\"> <!-- Heroicon name: check-circle --> <svg class=\"h-6 w-6 text-green-400\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\"> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" /> </svg> </div> <div class=\"ml-3 w-0 flex-1 pt-0.5\"> <p class=\"text-sm font-medium text-gray-900\"> Successfully saved! </p> <p class=\"mt-1 text-sm text-gray-500\"> Anyone with a link can now view this file. </p> </div> <div class=\"ml-4 flex-shrink-0 flex\"> <button class=\"bg-white rounded-md inline-flex text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"> <span class=\"sr-only\">Close</span> <!-- Heroicon name: x --> <svg class=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\"> <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" /> </svg> </button> </div> </div> </div> </div> </div>\n</Pops>\nchildren\ncomponent\nconst authentication = useAuthentication()\n<Hea\n<Component {...pageProps} />\n</AuthentiationProvider>\nc\n</SWRConfig>\n<SWRConfig value={{ fetcher }}> <AuthenticationProvider value={{ ...authentication }}> <Nav />\nconst onSubmit = () => {}\n<div className=\"flex w-screen h-screen text-gray-600 bg-gray-100\"> <div className=\"max-w-2xl p-12 m-auto space-y-8 bg-white rounded-lg shadow\"> <div className=\"flex items-center w-24 space-x-4\"> <img src=\"/img/purple-set/012-social-network.svg\" alt=\"\" /> </div> <p className=\"text-2xl\">A marketplace that empowers businesses and influencers.</p> <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 banners\"> <div className=\"p-4 text-white bg-pink-500 border-b-2 border-pink-600 rounded-lg shadow\"> <div className=\"text-3xl font-bold\">Buy</div> <p className=\"font-light\"> Spread the word on your product, service, or brand by finding the perfect influencer to deliver your product to an audience. </p> </div> <div className=\"p-4 text-white bg-blue-500 border-b-2 border-blue-600 rounded-lg shadow\"> <div className=\"text-3xl font-bold\">Sell</div> <p className=\"font-light\"> Leverage your existing social media following to make an income by marketing brands and products that curate to your following. </p> </div> </div> <form className=\"space-y-2\"> <p className=\"text-2xl font-light\">Be the first to know.</p> <div className=\"flex overflow-hidden border rounded-md\"> <input className=\"w-full p-2\" type=\"text\" placeholder=\"Enter your email\" /> <button className=\"px-4 text-xs font-bold text-white bg-blue-500 hover:bg-blue-600\"> Subscribe </button> </div> </form> <p className=\"text-sm text-gray-400\">Launching worldwide in 2021 Q1.</p> {/* <button className='px-4 py-2 font-bold text-white bg-pink-400 border-b-2 border-pink-600 rounded-md'> Be the first to know </button> */} </div> </div> {/* <div className='container p-4 py-16 mx-auto text-gray-600'> <div className='mb-6'> <div className='flex items-center animate-pulse mb-4'> <img className='w-16 mr-4' src='/img/purple-set/022-like.svg' alt='' /> <p className='text-3xl font-bold uppercase'>Buy</p> </div> <p className='text-lg'>Get your product, service, or brand promoted by effective influencers.</p> </div> <div className='flex items-center animate-pulse'> <img className='w-16 mr-4' src='/img/purple-set/001-notification.svg' alt='' /> <p className='text-3xl font-bold uppercase'>Sell</p> </div> <p className='text-lg'> Leverage your existing social media following to make an income by selling marketing services. </p> </div> */}\n<div className=\"flex w-screen h-screen text-gray-600 bg-gray-100\"> <div className=\"max-w-2xl p-12 m-auto space-y-8 bg-white rounded-lg shadow\"> <div className=\"flex items-center w-24 space-x-4\"> <img src=\"/img/purple-set/012-social-network.svg\" alt=\"\" /> </div> <p className=\"text-2xl\">A marketplace that empowers businesses and influencers.</p> <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 banners\"> <div className=\"p-4 text-white bg-pink-500 border-b-2 border-pink-600 rounded-lg shadow\"> <div className=\"text-3xl font-bold\">Buy</div> <p className=\"font-light\"> Spread the word on your product, service, or brand by finding the perfect influencer to deliver your product to an audience. </p> </div> <div className=\"p-4 text-white bg-blue-500 border-b-2 border-blue-600 rounded-lg shadow\"> <div className=\"text-3xl font-bold\">Sell</div> <p className=\"font-light\"> Leverage your existing social media following to make an income by marketing brands and products that curate to your following. </p> </div> </div> <form className=\"space-y-2\"> <p className=\"text-2xl font-light\">Be the first to know.</p> <div className=\"flex overflow-hidden border rounded-md\"> <input className=\"w-full p-2\" type=\"text\" placeholder=\"Enter your email\" /> <button className=\"px-4 text-xs font-bold text-white bg-blue-500 hover:bg-blue-600\"> Subscribe </button> </div> </form> <p className=\"text-sm text-gray-400\">Launching worldwide in 2021 Q1.</p> {/* <button className='px-4 py-2 font-bold text-white bg-pink-400 border-b-2 border-pink-600 rounded-md'> Be the first to know </button> */} </div> </div> {/* <div className='container p-4 py-16 mx-auto text-gray-600'> <div className='mb-6'> <div className='flex items-center animate-pulse mb-4'> <img className='w-16 mr-4' src='/img/purple-set/022-like.svg' alt='' /> <p className='text-3xl font-bold uppercase'>Buy</p> </div> <p className='text-lg'>Get your product, service, or brand promoted by effective influencers.</p> </div> <div className='flex items-center animate-pulse'> <img className='w-16 mr-4' src='/img/purple-set/001-notification.svg' alt='' /> <p className='text-3xl font-bold uppercase'>Sell</p> </div> <p className='text-lg'> Leverage your existing social media following to make an income by selling marketing services. </p> </div> */} </>\nimport Axios from 'axios' import AuthenticationContext from 'context/AuthenticationContext' import Cookies from 'js-cookie' import Router, { useRouter } from 'next/router' import { useContext, useEffect, useMemo } from 'react' import useSWR from 'swr' export const api = Axios.create({ baseURL: `http://api.upsocia.com/api/v2`, headers: { 'x-auth-token': Cookies.get('token') } }) export const fetcher = (url) => api.get(url).then((res) => res.data) export const useAuthentication = () => { const router = useRouter() const { data: userData, error, mutate } = useSWR(Cookies.get('token') ? '/profile/view' : null, fetcher) const user = useMemo(() => { return { ...userData?.msg, isOnboarded: userData?.msg ? true : false, isAuthenticated: Cookies.get('token') ? true : false } }) useEffect(() => { const handleRouteChangeComplete = (path) => { if (user.isAuthenticated) { if (!user.isOnboared && !['/onboarding'].includes(path)) { console.log('Redirecting the user to the onboarding flow.') router.push('/onboarding') } } } // handleRouteChangeComplete() Router.events.on('routeChangeComplete', handleRouteChangeComplete) return () => Router.events.off('routeChangeComplete', handleRouteChangeComplete) }, [user]) useEffect(() => { if (Cookies.get('userId')) api.get(`/auth/refresh/${Cookies.get('userId')}`) .then((res) => console.log(res)) .catch((err) => console.log(err)) }, []) return { user, isAuthenticated: user.isAuthenticated, isNotAuthenticated: !user.isAuthenticated } } export const usePageLocker = () => { const router = useRouter() const { user } = useContext(AuthenticationContext) useEffect(() => { if (!user.isAuthenticated) router.push('/auth/signin') }, [user]) }\njsconfig.json package-lock.json package.json postcss.config.js public src tailwind.config.js yarn.lock\ndb.get('clipboards').value()\nclipboards\n{clip.content}\nimport 'ace-builds/src-noconflict/theme-github'\nimport 'ace-builds/src-noconflict/theme-github'\n{clip.content}\nclipboards\ndb.get('clipboards').value()\nbg-gray-100\n{clip.content}\nimport 'ace-builds/src-noconflict/mode-javascript'\nimport 'ace-builds/src-noconflict/theme-github'\nbg-gray-100\nimport AceEditor from 'react-ace'\nimport 'ace-builds/src-noconflict/theme-github'\nimport 'ace-builds/src-noconflict/mode-javascript'\n{clip.content}\nClipboardPage\ne.target.value\ndb.set('notes', notes).write()\ndb.get('clipboards').value()\nclipboards\nimport 'ace-builds/src-noconflict/theme-github'\nimport 'ace-builds/src-noconflict/mode-javascript'\nimport AceEditor from 'react-ace'\n{clip.content}\nhttps://trello.com/c/51upz20B\nGH - ticket -> update Kamal - API update + Backend API failsafe - Feed tags filter - post-deletion modal - generate reports test PDF (edite\nGH - ticket -> update Kamal - API update + Backend API failsafe - Feed tags filter - post-deletion modal - generate reports test PDF (edite\n--no-verify\nintegrationUrl\nintegrationUrlRequest"
    },
    {
      "id": "eDmcVfLlU",
      "date": 1607655297054,
      "content": "sdasdasdkasjdlkasjldkjaskldjalskjdlkasjdlksajdksa"
    },
    {
      "id": "h5-_wK5pw",
      "date": 1607655292057,
      "content": "Clipboard\nNotes\nOptions\nsdasdasdkasjdlkasjldkjaskldjalskjdlkasjdlksajdksa d afd I need help.\nimport { useEffect } from 'react'\nfont-medium\nfont-bold\n<NavLink href='/notes' color='pink'> Notes </NavLink>\nsdasdasdkasjdlkasjldkjaskldjalskjdlkasjdlksajdksa d afd I need help.\n*/}\n<NavLink href='/options' color='green'> Options </NavLink>\nconsole.log(alerts.filter((alert) => alert.id !== id))\nconsole.log(alerts.filter((alert) => alert.id !== id))\nalerts.filter((alert) => alert.id !== id)\nsubtitle\n{alerts.map((alert, index) => (\nalert.title\n2\n1,\nclicks\nid\nshortId.generate()\nshortId\nconfig\nsetAlerts\nsetAlerts([config, ...s])\ns=> [config,]\nsetAlerts\nconst newAlert =\n{}\nsetAlerts\nalerts\n{' '}\nw-full\nmb-2\n</div>\n<div class=''>\nml-auto\nw-auto\nw-full\nmax-w-xs\nfixed inset-0 flex items-end justify-center px-4 py-6 pointer-events-none sm:p-6 sm:items-start sm:justify-end\ntai\n}\nalerts\n<div class='max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden'> <div class='p-4'> <div class='flex items-start'> <div class='flex-shrink-0'> {/* <!-- Heroicon name: check-circle --> */} <svg class='h-6 w-6 text-green-400' xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='currentColor' aria-hidden='true'> <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z' /> </svg> </div> <div class='ml-3 w-0 flex-1 pt-0.5'> <p class='text-sm font-medium text-gray-900'>{/* Successfully saved! */}</p> <p class='mt-1 text-sm text-gray-500'>Anyone with a link can now view this file.</p> </div> <div class='ml-4 flex-shrink-0 flex'> <button class='bg-white rounded-md inline-flex text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'> <span class='sr-only'>Close</span> {/* <!-- Heroicon name: x --> */} <svg class='h-5 w-5' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='currentColor' aria-hidden='true'> <path fill-rule='evenodd' d='M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z' clip-rule='evenodd' /> </svg> </button> </div> </div> </div> </div>\nmax-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden\nAlerts.jsx\n<div class=\"fixed inset-0 flex items-end justify-center px-4 py-6 pointer-events-none sm:p-6 sm:items-start sm:justify-end\"> <!-- Notification panel, show/hide based on alert state. Entering: \"transform ease-out duration-300 transition\" From: \"translate-y-2 opacity-0 sm:translate-y-0 sm:translate-x-2\" To: \"translate-y-0 opacity-100 sm:translate-x-0\" Leaving: \"transition ease-in duration-100\" From: \"opacity-100\" To: \"opacity-0\" --> <div class=\"max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden\"> <div class=\"p-4\"> <div class=\"flex items-start\"> <div class=\"flex-shrink-0\"> <!-- Heroicon name: check-circle --> <svg class=\"h-6 w-6 text-green-400\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\"> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" /> </svg> </div> <div class=\"ml-3 w-0 flex-1 pt-0.5\"> <p class=\"text-sm font-medium text-gray-900\"> Successfully saved! </p> <p class=\"mt-1 text-sm text-gray-500\"> Anyone with a link can now view this file. </p> </div> <div class=\"ml-4 flex-shrink-0 flex\"> <button class=\"bg-white rounded-md inline-flex text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"> <span class=\"sr-only\">Close</span> <!-- Heroicon name: x --> <svg class=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\"> <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" /> </svg> </button> </div> </div> </div> </div> </div>\n</Pops>\nchildren\ncomponent\nconst authentication = useAuthentication()\n<Hea\n<Component {...pageProps} />\n</AuthentiationProvider>\nc\n</SWRConfig>\n<SWRConfig value={{ fetcher }}> <AuthenticationProvider value={{ ...authentication }}> <Nav />\nconst onSubmit = () => {}\n<div className=\"flex w-screen h-screen text-gray-600 bg-gray-100\"> <div className=\"max-w-2xl p-12 m-auto space-y-8 bg-white rounded-lg shadow\"> <div className=\"flex items-center w-24 space-x-4\"> <img src=\"/img/purple-set/012-social-network.svg\" alt=\"\" /> </div> <p className=\"text-2xl\">A marketplace that empowers businesses and influencers.</p> <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 banners\"> <div className=\"p-4 text-white bg-pink-500 border-b-2 border-pink-600 rounded-lg shadow\"> <div className=\"text-3xl font-bold\">Buy</div> <p className=\"font-light\"> Spread the word on your product, service, or brand by finding the perfect influencer to deliver your product to an audience. </p> </div> <div className=\"p-4 text-white bg-blue-500 border-b-2 border-blue-600 rounded-lg shadow\"> <div className=\"text-3xl font-bold\">Sell</div> <p className=\"font-light\"> Leverage your existing social media following to make an income by marketing brands and products that curate to your following. </p> </div> </div> <form className=\"space-y-2\"> <p className=\"text-2xl font-light\">Be the first to know.</p> <div className=\"flex overflow-hidden border rounded-md\"> <input className=\"w-full p-2\" type=\"text\" placeholder=\"Enter your email\" /> <button className=\"px-4 text-xs font-bold text-white bg-blue-500 hover:bg-blue-600\"> Subscribe </button> </div> </form> <p className=\"text-sm text-gray-400\">Launching worldwide in 2021 Q1.</p> {/* <button className='px-4 py-2 font-bold text-white bg-pink-400 border-b-2 border-pink-600 rounded-md'> Be the first to know </button> */} </div> </div> {/* <div className='container p-4 py-16 mx-auto text-gray-600'> <div className='mb-6'> <div className='flex items-center animate-pulse mb-4'> <img className='w-16 mr-4' src='/img/purple-set/022-like.svg' alt='' /> <p className='text-3xl font-bold uppercase'>Buy</p> </div> <p className='text-lg'>Get your product, service, or brand promoted by effective influencers.</p> </div> <div className='flex items-center animate-pulse'> <img className='w-16 mr-4' src='/img/purple-set/001-notification.svg' alt='' /> <p className='text-3xl font-bold uppercase'>Sell</p> </div> <p className='text-lg'> Leverage your existing social media following to make an income by selling marketing services. </p> </div> */}\n<div className=\"flex w-screen h-screen text-gray-600 bg-gray-100\"> <div className=\"max-w-2xl p-12 m-auto space-y-8 bg-white rounded-lg shadow\"> <div className=\"flex items-center w-24 space-x-4\"> <img src=\"/img/purple-set/012-social-network.svg\" alt=\"\" /> </div> <p className=\"text-2xl\">A marketplace that empowers businesses and influencers.</p> <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 banners\"> <div className=\"p-4 text-white bg-pink-500 border-b-2 border-pink-600 rounded-lg shadow\"> <div className=\"text-3xl font-bold\">Buy</div> <p className=\"font-light\"> Spread the word on your product, service, or brand by finding the perfect influencer to deliver your product to an audience. </p> </div> <div className=\"p-4 text-white bg-blue-500 border-b-2 border-blue-600 rounded-lg shadow\"> <div className=\"text-3xl font-bold\">Sell</div> <p className=\"font-light\"> Leverage your existing social media following to make an income by marketing brands and products that curate to your following. </p> </div> </div> <form className=\"space-y-2\"> <p className=\"text-2xl font-light\">Be the first to know.</p> <div className=\"flex overflow-hidden border rounded-md\"> <input className=\"w-full p-2\" type=\"text\" placeholder=\"Enter your email\" /> <button className=\"px-4 text-xs font-bold text-white bg-blue-500 hover:bg-blue-600\"> Subscribe </button> </div> </form> <p className=\"text-sm text-gray-400\">Launching worldwide in 2021 Q1.</p> {/* <button className='px-4 py-2 font-bold text-white bg-pink-400 border-b-2 border-pink-600 rounded-md'> Be the first to know </button> */} </div> </div> {/* <div className='container p-4 py-16 mx-auto text-gray-600'> <div className='mb-6'> <div className='flex items-center animate-pulse mb-4'> <img className='w-16 mr-4' src='/img/purple-set/022-like.svg' alt='' /> <p className='text-3xl font-bold uppercase'>Buy</p> </div> <p className='text-lg'>Get your product, service, or brand promoted by effective influencers.</p> </div> <div className='flex items-center animate-pulse'> <img className='w-16 mr-4' src='/img/purple-set/001-notification.svg' alt='' /> <p className='text-3xl font-bold uppercase'>Sell</p> </div> <p className='text-lg'> Leverage your existing social media following to make an income by selling marketing services. </p> </div> */} </>\nimport Axios from 'axios' import AuthenticationContext from 'context/AuthenticationContext' import Cookies from 'js-cookie' import Router, { useRouter } from 'next/router' import { useContext, useEffect, useMemo } from 'react' import useSWR from 'swr' export const api = Axios.create({ baseURL: `http://api.upsocia.com/api/v2`, headers: { 'x-auth-token': Cookies.get('token') } }) export const fetcher = (url) => api.get(url).then((res) => res.data) export const useAuthentication = () => { const router = useRouter() const { data: userData, error, mutate } = useSWR(Cookies.get('token') ? '/profile/view' : null, fetcher) const user = useMemo(() => { return { ...userData?.msg, isOnboarded: userData?.msg ? true : false, isAuthenticated: Cookies.get('token') ? true : false } }) useEffect(() => { const handleRouteChangeComplete = (path) => { if (user.isAuthenticated) { if (!user.isOnboared && !['/onboarding'].includes(path)) { console.log('Redirecting the user to the onboarding flow.') router.push('/onboarding') } } } // handleRouteChangeComplete() Router.events.on('routeChangeComplete', handleRouteChangeComplete) return () => Router.events.off('routeChangeComplete', handleRouteChangeComplete) }, [user]) useEffect(() => { if (Cookies.get('userId')) api.get(`/auth/refresh/${Cookies.get('userId')}`) .then((res) => console.log(res)) .catch((err) => console.log(err)) }, []) return { user, isAuthenticated: user.isAuthenticated, isNotAuthenticated: !user.isAuthenticated } } export const usePageLocker = () => { const router = useRouter() const { user } = useContext(AuthenticationContext) useEffect(() => { if (!user.isAuthenticated) router.push('/auth/signin') }, [user]) }\njsconfig.json package-lock.json package.json postcss.config.js public src tailwind.config.js yarn.lock\ndb.get('clipboards').value()\nclipboards\n{clip.content}\nimport 'ace-builds/src-noconflict/theme-github'\nimport 'ace-builds/src-noconflict/theme-github'\n{clip.content}\nclipboards\ndb.get('clipboards').value()\nbg-gray-100\n{clip.content}\nimport 'ace-builds/src-noconflict/mode-javascript'\nimport 'ace-builds/src-noconflict/theme-github'\nbg-gray-100\nimport AceEditor from 'react-ace'\nimport 'ace-builds/src-noconflict/theme-github'\nimport 'ace-builds/src-noconflict/mode-javascript'\n{clip.content}\nClipboardPage\ne.target.value\ndb.set('notes', notes).write()\ndb.get('clipboards').value()\nclipboards\nimport 'ace-builds/src-noconflict/theme-github'\nimport 'ace-builds/src-noconflict/mode-javascript'\nimport AceEditor from 'react-ace'\n{clip.content}\nhttps://trello.com/c/51upz20B\nGH - ticket -> update Kamal - API update + Backend API failsafe - Feed tags filter - post-deletion modal - generate reports test PDF (edite\nGH - ticket -> update Kamal - API update + Backend API failsafe - Feed tags filter - post-deletion modal - generate reports test PDF (edite\n--no-verify\nintegrationUrl\nintegrationUrlRequest\nconst { data: integrationUrlRequest } = useSWR(slug ? `/apps/${slug}/connection/url` : null)\n"
    },
    {
      "id": "kQP46mhro",
      "date": 1607655144113,
      "content": "sdasdasdkasjdlkasjldkjaskldjalskjdlkasjdlksajdksa\nd\nafd\n\nI need help.\n"
    },
    {
      "id": "Ljt9Oqyj7",
      "date": 1607655112114,
      "content": "import { useEffect } from 'react'\n"
    },
    {
      "id": "hxe5VZjfA",
      "date": 1607655079113,
      "content": "font-medium "
    },
    {
      "id": "G7magBnrV",
      "date": 1607655067110,
      "content": "font-bold "
    },
    {
      "id": "I8lg2L5sU",
      "date": 1607654992898,
      "content": "\n                <NavLink href='/notes' color='pink'>\n                    Notes\n                </NavLink>"
    },
    {
      "id": "QqLZShtt8",
      "date": 1607654789919,
      "content": "sdasdasdkasjdlkasjldkjaskldjalskjdlkasjdlksajdksa\nd\nafd\n\nI need help.\n"
    },
    {
      "id": "ohorQCul-",
      "date": 1607654733920,
      "content": "*/}"
    },
    {
      "id": "DgjGbduAA",
      "date": 1607654724420,
      "content": "\n                <NavLink href='/options' color='green'>\n                    Options\n                </NavLink>"
    },
    {
      "id": "NTYV57LsT",
      "date": 1607654570919,
      "content": "            console.log(alerts.filter((alert) => alert.id !== id))"
    },
    {
      "id": "4QzNpvJwE",
      "date": 1607654526919,
      "content": "            console.log(alerts.filter((alert) => alert.id !== id))\n"
    },
    {
      "id": "sbv5RMu3Y",
      "date": 1607654494418,
      "content": "alerts.filter((alert) => alert.id !== id)"
    },
    {
      "id": "ZOen7LWwq",
      "date": 1607654349416,
      "content": "subtitle"
    },
    {
      "id": "o2kWGfrqL",
      "date": 1607654348912,
      "content": "                    {alerts.map((alert, index) => (\n"
    },
    {
      "id": "-Jhr5NvBO",
      "date": 1607654347416,
      "content": "alert.title"
    },
    {
      "id": "Iy5RQ635V3",
      "date": 1607654340916,
      "content": "2"
    },
    {
      "id": "-MyOCRbxu",
      "date": 1607654340416,
      "content": "1, "
    },
    {
      "id": "4IWL4SdzQ",
      "date": 1607654307416,
      "content": "clicks"
    },
    {
      "id": "8Rcmq1b2C",
      "date": 1607654253415,
      "content": "id"
    },
    {
      "id": "os4RdH8VT",
      "date": 1607654249415,
      "content": "shortId.generate()"
    },
    {
      "id": "QkP-ZP_gS",
      "date": 1607654226410,
      "content": "shortId"
    },
    {
      "id": "-B8HWlZ_0",
      "date": 1607654196916,
      "content": "config"
    },
    {
      "id": "3c6Sd3GX1",
      "date": 1607654188914,
      "content": "setAlerts"
    },
    {
      "id": "bTXMFSNGV",
      "date": 1607654109911,
      "content": "        setAlerts([config, ...s])\n"
    },
    {
      "id": "1rD0tkJN5",
      "date": 1607654057909,
      "content": "s=> [config,]"
    },
    {
      "id": "YiMm0I5HT",
      "date": 1607654026412,
      "content": "setAlerts"
    },
    {
      "id": "kblqN_vJh",
      "date": 1607654024410,
      "content": "        const newAlert = \n"
    },
    {
      "id": "sw6CYTaI1",
      "date": 1607654023908,
      "content": "{}"
    },
    {
      "id": "WHkCsnNFz",
      "date": 1607654009410,
      "content": "setAlerts"
    },
    {
      "id": "Nd4Hf-_xZ",
      "date": 1607654006911,
      "content": "alerts"
    },
    {
      "id": "BnRxS_j31",
      "date": 1607653926910,
      "content": "            {' '}\n"
    },
    {
      "id": "dkxARoEhL",
      "date": 1607653895906,
      "content": " w-full"
    },
    {
      "id": "KvHcy2srO",
      "date": 1607653888907,
      "content": " mb-2"
    },
    {
      "id": "SWdaM5-xY",
      "date": 1607653866407,
      "content": "                </div>\n"
    },
    {
      "id": "DHygYYaCH",
      "date": 1607653865909,
      "content": "                <div class=''>\n"
    },
    {
      "id": "leq9LqXxH",
      "date": 1607653862406,
      "content": "ml-auto"
    },
    {
      "id": "iac8VsehT",
      "date": 1607653859407,
      "content": " w-auto"
    },
    {
      "id": "Jt8x6VgL5",
      "date": 1607653849906,
      "content": " w-full"
    },
    {
      "id": "Au-cs7ka1",
      "date": 1607653842906,
      "content": " max-w-xs"
    },
    {
      "id": "InvpYEQCO",
      "date": 1607653782909,
      "content": "fixed inset-0 flex items-end justify-center px-4 py-6 pointer-events-none sm:p-6 sm:items-start sm:justify-end"
    },
    {
      "id": "yP8IQAx5R",
      "date": 1607653738402,
      "content": "tai"
    },
    {
      "id": "ziBUAAejb",
      "date": 1607653690404,
      "content": "}"
    },
    {
      "id": "Dm8D6DGO3",
      "date": 1607653661902,
      "content": "alerts"
    },
    {
      "id": "l0Rmhok80",
      "date": 1607653628906,
      "content": "  <div class='max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden'>\n                    <div class='p-4'>\n                        <div class='flex items-start'>\n                            <div class='flex-shrink-0'>\n                                {/* <!-- Heroicon name: check-circle --> */}\n                                <svg\n                                    class='h-6 w-6 text-green-400'\n                                    xmlns='http://www.w3.org/2000/svg'\n                                    fill='none'\n                                    viewBox='0 0 24 24'\n                                    stroke='currentColor'\n                                    aria-hidden='true'>\n                                    <path\n                                        stroke-linecap='round'\n                                        stroke-linejoin='round'\n                                        stroke-width='2'\n                                        d='M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z'\n                                    />\n                                </svg>\n                            </div>\n                            <div class='ml-3 w-0 flex-1 pt-0.5'>\n                                <p class='text-sm font-medium text-gray-900'>{/* Successfully saved! */}</p>\n                                <p class='mt-1 text-sm text-gray-500'>Anyone with a link can now view this file.</p>\n                            </div>\n                            <div class='ml-4 flex-shrink-0 flex'>\n                                <button class='bg-white rounded-md inline-flex text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\n                                    <span class='sr-only'>Close</span>\n                                    {/* <!-- Heroicon name: x --> */}\n                                    <svg\n                                        class='h-5 w-5'\n                                        xmlns='http://www.w3.org/2000/svg'\n                                        viewBox='0 0 20 20'\n                                        fill='currentColor'\n                                        aria-hidden='true'>\n                                        <path\n                                            fill-rule='evenodd'\n                                            d='M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z'\n                                            clip-rule='evenodd'\n                                        />\n                                    </svg>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>"
    },
    {
      "id": "cY8r6PcmB",
      "date": 1607653619403,
      "content": "max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden"
    },
    {
      "id": "xXWmQzTpv",
      "date": 1607653576902,
      "content": "Alerts.jsx"
    },
    {
      "id": "LMDhYYG_7",
      "date": 1607653557400,
      "content": "                \n"
    },
    {
      "id": "9kTVjzGWB",
      "date": 1607653496421,
      "content": "<div class=\"fixed inset-0 flex items-end justify-center px-4 py-6 pointer-events-none sm:p-6 sm:items-start sm:justify-end\">\n  <!--\n    Notification panel, show/hide based on alert state.\n\n    Entering: \"transform ease-out duration-300 transition\"\n      From: \"translate-y-2 opacity-0 sm:translate-y-0 sm:translate-x-2\"\n      To: \"translate-y-0 opacity-100 sm:translate-x-0\"\n    Leaving: \"transition ease-in duration-100\"\n      From: \"opacity-100\"\n      To: \"opacity-0\"\n  -->\n  <div class=\"max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden\">\n    <div class=\"p-4\">\n      <div class=\"flex items-start\">\n        <div class=\"flex-shrink-0\">\n          <!-- Heroicon name: check-circle -->\n          <svg class=\"h-6 w-6 text-green-400\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n          </svg>\n        </div>\n        <div class=\"ml-3 w-0 flex-1 pt-0.5\">\n          <p class=\"text-sm font-medium text-gray-900\">\n            Successfully saved!\n          </p>\n          <p class=\"mt-1 text-sm text-gray-500\">\n            Anyone with a link can now view this file.\n          </p>\n        </div>\n        <div class=\"ml-4 flex-shrink-0 flex\">\n          <button class=\"bg-white rounded-md inline-flex text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n            <span class=\"sr-only\">Close</span>\n            <!-- Heroicon name: x -->\n            <svg class=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n              <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>"
    },
    {
      "id": "VHK1k8OSP",
      "date": 1607653369897,
      "content": "</Pops>"
    },
    {
      "id": "ODTzomccI",
      "date": 1607653350397,
      "content": "children"
    },
    {
      "id": "65EbB3ESK",
      "date": 1607653322400,
      "content": "component"
    },
    {
      "id": "RXfg0h7rAs",
      "date": 1607653278896,
      "content": "\n"
    },
    {
      "id": "txi86dprA",
      "date": 1607653278400,
      "content": "    const authentication = useAuthentication()\n"
    },
    {
      "id": "Es6gjlOa3",
      "date": 1607653277396,
      "content": "            <Hea\n"
    },
    {
      "id": "ZN7IwtHCz",
      "date": 1607653275899,
      "content": "            <Component {...pageProps} />\n"
    },
    {
      "id": "RzNTdUn7T",
      "date": 1607653273897,
      "content": "\n"
    },
    {
      "id": "7jtp40YXP",
      "date": 1607653270397,
      "content": "                </AuthentiationProvider>\n"
    },
    {
      "id": "UMGWY3FfZ1",
      "date": 1607653269896,
      "content": "c"
    },
    {
      "id": "1jn7lvFBE",
      "date": 1607653269395,
      "content": "            </SWRConfig>\n"
    },
    {
      "id": "NEkARdBjX",
      "date": 1607653268896,
      "content": "\n            <SWRConfig\n                value={{\n                    fetcher\n                }}>\n                <AuthenticationProvider value={{ ...authentication }}>\n                    <Nav />"
    },
    {
      "id": "2i2Ag29LL",
      "date": 1607653253895,
      "content": "    const onSubmit = () => {}\n"
    },
    {
      "id": "GCERtxSEj",
      "date": 1607653251395,
      "content": "<div className=\"flex w-screen h-screen text-gray-600 bg-gray-100\">\n                <div className=\"max-w-2xl p-12 m-auto space-y-8 bg-white rounded-lg shadow\">\n                    <div className=\"flex items-center w-24 space-x-4\">\n                        <img src=\"/img/purple-set/012-social-network.svg\" alt=\"\" />\n                    </div>\n                    <p className=\"text-2xl\">A marketplace that empowers businesses and influencers.</p>\n                    <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 banners\">\n                        <div className=\"p-4 text-white bg-pink-500 border-b-2 border-pink-600 rounded-lg shadow\">\n                            <div className=\"text-3xl font-bold\">Buy</div>\n                            <p className=\"font-light\">\n                                Spread the word on your product, service, or brand by finding the perfect influencer to\n                                deliver your product to an audience.\n                            </p>\n                        </div>\n                        <div className=\"p-4 text-white bg-blue-500 border-b-2 border-blue-600 rounded-lg shadow\">\n                            <div className=\"text-3xl font-bold\">Sell</div>\n                            <p className=\"font-light\">\n                                Leverage your existing social media following to make an income by marketing brands and\n                                products that curate to your following.\n                            </p>\n                        </div>\n                    </div>\n                    <form className=\"space-y-2\">\n                        <p className=\"text-2xl font-light\">Be the first to know.</p>\n                        <div className=\"flex overflow-hidden border rounded-md\">\n                            <input className=\"w-full p-2\" type=\"text\" placeholder=\"Enter your email\" />\n                            <button className=\"px-4 text-xs font-bold text-white bg-blue-500 hover:bg-blue-600\">\n                                Subscribe\n                            </button>\n                        </div>\n                    </form>\n                    <p className=\"text-sm text-gray-400\">Launching worldwide in 2021 Q1.</p>\n\n                    {/* <button className='px-4 py-2 font-bold text-white bg-pink-400 border-b-2 border-pink-600 rounded-md'>\n                        Be the first to know\n                    </button> */}\n                </div>\n            </div>\n            {/* <div className='container p-4 py-16 mx-auto text-gray-600'>\n                <div className='mb-6'>\n                    <div className='flex items-center animate-pulse mb-4'>\n                        <img className='w-16 mr-4' src='/img/purple-set/022-like.svg' alt='' />\n                        <p className='text-3xl font-bold uppercase'>Buy</p>\n                    </div>\n                    <p className='text-lg'>Get your product, service, or brand promoted by effective influencers.</p>\n                </div>\n                <div className='flex items-center  animate-pulse'>\n                    <img className='w-16 mr-4' src='/img/purple-set/001-notification.svg' alt='' />\n                    <p className='text-3xl font-bold uppercase'>Sell</p>\n                </div>\n                <p className='text-lg'>\n                    Leverage your existing social media following to make an income by selling marketing services.\n                </p>\n            </div> */}"
    },
    {
      "id": "4JJhYBm0C",
      "date": 1607653248895,
      "content": "<div className=\"flex w-screen h-screen text-gray-600 bg-gray-100\">\n                <div className=\"max-w-2xl p-12 m-auto space-y-8 bg-white rounded-lg shadow\">\n                    <div className=\"flex items-center w-24 space-x-4\">\n                        <img src=\"/img/purple-set/012-social-network.svg\" alt=\"\" />\n                    </div>\n                    <p className=\"text-2xl\">A marketplace that empowers businesses and influencers.</p>\n                    <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 banners\">\n                        <div className=\"p-4 text-white bg-pink-500 border-b-2 border-pink-600 rounded-lg shadow\">\n                            <div className=\"text-3xl font-bold\">Buy</div>\n                            <p className=\"font-light\">\n                                Spread the word on your product, service, or brand by finding the perfect influencer to\n                                deliver your product to an audience.\n                            </p>\n                        </div>\n                        <div className=\"p-4 text-white bg-blue-500 border-b-2 border-blue-600 rounded-lg shadow\">\n                            <div className=\"text-3xl font-bold\">Sell</div>\n                            <p className=\"font-light\">\n                                Leverage your existing social media following to make an income by marketing brands and\n                                products that curate to your following.\n                            </p>\n                        </div>\n                    </div>\n                    <form className=\"space-y-2\">\n                        <p className=\"text-2xl font-light\">Be the first to know.</p>\n                        <div className=\"flex overflow-hidden border rounded-md\">\n                            <input className=\"w-full p-2\" type=\"text\" placeholder=\"Enter your email\" />\n                            <button className=\"px-4 text-xs font-bold text-white bg-blue-500 hover:bg-blue-600\">\n                                Subscribe\n                            </button>\n                        </div>\n                    </form>\n                    <p className=\"text-sm text-gray-400\">Launching worldwide in 2021 Q1.</p>\n\n                    {/* <button className='px-4 py-2 font-bold text-white bg-pink-400 border-b-2 border-pink-600 rounded-md'>\n                        Be the first to know\n                    </button> */}\n                </div>\n            </div>\n            {/* <div className='container p-4 py-16 mx-auto text-gray-600'>\n                <div className='mb-6'>\n                    <div className='flex items-center animate-pulse mb-4'>\n                        <img className='w-16 mr-4' src='/img/purple-set/022-like.svg' alt='' />\n                        <p className='text-3xl font-bold uppercase'>Buy</p>\n                    </div>\n                    <p className='text-lg'>Get your product, service, or brand promoted by effective influencers.</p>\n                </div>\n                <div className='flex items-center  animate-pulse'>\n                    <img className='w-16 mr-4' src='/img/purple-set/001-notification.svg' alt='' />\n                    <p className='text-3xl font-bold uppercase'>Sell</p>\n                </div>\n                <p className='text-lg'>\n                    Leverage your existing social media following to make an income by selling marketing services.\n                </p>\n            </div> */}\n        </>"
    },
    {
      "id": "Jh0rISD9r",
      "date": 1607653240895,
      "content": "import Axios from 'axios'\nimport AuthenticationContext from 'context/AuthenticationContext'\nimport Cookies from 'js-cookie'\nimport Router, { useRouter } from 'next/router'\nimport { useContext, useEffect, useMemo } from 'react'\nimport useSWR from 'swr'\n\nexport const api = Axios.create({\n    baseURL: `http://api.upsocia.com/api/v2`,\n    headers: {\n        'x-auth-token': Cookies.get('token')\n    }\n})\n\nexport const fetcher = (url) => api.get(url).then((res) => res.data)\n\nexport const useAuthentication = () => {\n    const router = useRouter()\n    const { data: userData, error, mutate } = useSWR(Cookies.get('token') ? '/profile/view' : null, fetcher)\n\n    const user = useMemo(() => {\n        return {\n            ...userData?.msg,\n            isOnboarded: userData?.msg ? true : false,\n            isAuthenticated: Cookies.get('token') ? true : false\n        }\n    })\n\n    useEffect(() => {\n        const handleRouteChangeComplete = (path) => {\n            if (user.isAuthenticated) {\n                if (!user.isOnboared && !['/onboarding'].includes(path)) {\n                    console.log('Redirecting the user to the onboarding flow.')\n                    router.push('/onboarding')\n                }\n            }\n        }\n\n        // handleRouteChangeComplete()\n        Router.events.on('routeChangeComplete', handleRouteChangeComplete)\n        return () => Router.events.off('routeChangeComplete', handleRouteChangeComplete)\n    }, [user])\n\n    useEffect(() => {\n        if (Cookies.get('userId'))\n            api.get(`/auth/refresh/${Cookies.get('userId')}`)\n                .then((res) => console.log(res))\n                .catch((err) => console.log(err))\n    }, [])\n\n    return {\n        user,\n        isAuthenticated: user.isAuthenticated,\n        isNotAuthenticated: !user.isAuthenticated\n    }\n}\n\nexport const usePageLocker = () => {\n    const router = useRouter()\n\n    const { user } = useContext(AuthenticationContext)\n\n    useEffect(() => {\n        if (!user.isAuthenticated) router.push('/auth/signin')\n    }, [user])\n}\n"
    },
    {
      "id": "PZeYvFMHh",
      "date": 1607653200900,
      "content": "jsconfig.json\rpackage-lock.json\rpackage.json\rpostcss.config.js\rpublic\rsrc\rtailwind.config.js\ryarn.lock"
    },
    {
      "id": "6xsGEnRZI",
      "date": 1607653135394,
      "content": "db.get('clipboards').value()"
    },
    {
      "id": "eXdTJJz5u",
      "date": 1607653134394,
      "content": "clipboards"
    },
    {
      "id": "6Unnil8xi",
      "date": 1607653133393,
      "content": "{clip.content}"
    },
    {
      "id": "PQylfRqHw",
      "date": 1607653132893,
      "content": "import 'ace-builds/src-noconflict/theme-github'"
    },
    {
      "id": "emG119fTCZ",
      "date": 1607652434919,
      "content": "import 'ace-builds/src-noconflict/theme-github'"
    },
    {
      "id": "-aCDvwu1S",
      "date": 1607652434415,
      "content": "{clip.content}"
    },
    {
      "id": "gWJ46Zurs",
      "date": 1607652432921,
      "content": "clipboards"
    },
    {
      "id": "16sz6tgIa",
      "date": 1607652424918,
      "content": "db.get('clipboards').value()"
    },
    {
      "id": "uSNSgtgha",
      "date": 1607652421418,
      "content": "bg-gray-100"
    },
    {
      "id": "HeTasVd2Ys",
      "date": 1607652419917,
      "content": "                                    {clip.content}"
    },
    {
      "id": "GNBTgKaMq",
      "date": 1607652419416,
      "content": "import 'ace-builds/src-noconflict/mode-javascript'"
    },
    {
      "id": "VZg_kJRTg",
      "date": 1607652417920,
      "content": "import 'ace-builds/src-noconflict/theme-github'"
    },
    {
      "id": "EHw-v3wD0",
      "date": 1607652397916,
      "content": "bg-gray-100"
    },
    {
      "id": "MRUQTSdto",
      "date": 1607652379414,
      "content": "import AceEditor from 'react-ace'\n"
    },
    {
      "id": "w62DHP8-Pw",
      "date": 1607652378915,
      "content": "import 'ace-builds/src-noconflict/theme-github'\n"
    },
    {
      "id": "ClgBCxSEJ",
      "date": 1607652378417,
      "content": "import 'ace-builds/src-noconflict/mode-javascript'\n"
    },
    {
      "id": "3oD_0Uhn8",
      "date": 1607652352202,
      "content": "                                    {clip.content}\n"
    },
    {
      "id": "ZX8yVqNu0",
      "date": 1607652314106,
      "content": "ClipboardPage"
    },
    {
      "id": "cFYyzEOQ_",
      "date": 1607652289044,
      "content": "\n"
    },
    {
      "id": "RCzvxwcdC",
      "date": 1607652286544,
      "content": "e.target.value"
    },
    {
      "id": "JP6tAgKY6",
      "date": 1607652283045,
      "content": "        db.set('notes', notes).write()\n"
    },
    {
      "id": "YHwWoZjNh",
      "date": 1607652239552,
      "content": "db.get('clipboards').value()\n"
    },
    {
      "id": "u2kFCuYAx",
      "date": 1607652233559,
      "content": "clipboards"
    },
    {
      "id": "N9vG6JlIw",
      "date": 1607652206429,
      "content": "import 'ace-builds/src-noconflict/theme-github'\n"
    },
    {
      "id": "lv7Ce1-nvO",
      "date": 1607652205930,
      "content": "import 'ace-builds/src-noconflict/mode-javascript'\n"
    },
    {
      "id": "bdY1KkJYR",
      "date": 1607652205430,
      "content": "import AceEditor from 'react-ace'\n"
    },
    {
      "id": "0NZgMlCtm",
      "date": 1607652151361,
      "content": "{clip.content}"
    },
    {
      "id": "ap-czdRbw",
      "date": 1607651980726,
      "content": "https://trello.com/c/51upz20B"
    },
    {
      "id": "GL7jv9vpC",
      "date": 1607651933723,
      "content": "\n"
    },
    {
      "id": "7rnb5wmfK",
      "date": 1607651925224,
      "content": "\n\nGH - ticket -> update Kamal\n- API update + Backend API failsafe\n- Feed tags filter\n- post-deletion modal\n- generate reports test PDF (edite"
    },
    {
      "id": "74w8UmZYn",
      "date": 1607651879724,
      "content": " GH - ticket -> update Kamal\n- API update + Backend API failsafe\n- Feed tags filter\n- post-deletion modal\n- generate reports test PDF (edite"
    },
    {
      "id": "bzXNYoXPX",
      "date": 1607651825723,
      "content": "--no-verify"
    },
    {
      "id": "tryMBGS7E",
      "date": 1607651732723,
      "content": "integrationUrl"
    },
    {
      "id": "R23oKWcoV",
      "date": 1607651720722,
      "content": "integrationUrlRequest"
    },
    {
      "id": "V2gWknzCm",
      "date": 1607651719223,
      "content": "    const { data: integrationUrlRequest } = useSWR(slug ? `/apps/${slug}/connection/url` : null)\n"
    },
    {
      "id": "J3p-F6dcH",
      "date": 1607651671223,
      "content": "\n"
    },
    {
      "id": "MB0oMtOkq",
      "date": 1607651650222,
      "content": "Added New API Strucutre to (almost) Whole app, rebuilt integration flows"
    },
    {
      "id": "Ms0wBXTc6",
      "date": 1607651608219,
      "content": "\n                        buttonOneFunction: () => () => {\n                            // props.hide()\n                        },\n                        buttonTwoText: `Continue to Dashboard`,\n                        buttonTwoFunction: () => () => {\n                            router.push(`/app/dashboard`)\n                        }"
    },
    {
      "id": "lzttpqpi9",
      "date": 1607651596218,
      "content": "useRouter"
    },
    {
      "id": "sAWHB8GhL",
      "date": 1607651528719,
      "content": "Shoul dhav"
    },
    {
      "id": "1v7cn2PtT",
      "date": 1607651510716,
      "content": "useState"
    },
    {
      "id": "bxeZIYCeQ",
      "date": 1607651502718,
      "content": "\n"
    },
    {
      "id": "Aoid7Z6cQ",
      "date": 1607651501720,
      "content": "db.get('notes').value()"
    },
    {
      "id": "oaqlsxPyi",
      "date": 1607651485720,
      "content": "notes"
    },
    {
      "id": "4AW204PbV",
      "date": 1607651482719,
      "content": "                    console.log(e.target.value)\n"
    },
    {
      "id": "p_anx0Z04",
      "date": 1607651481717,
      "content": "                    db.set('notes', e.target.value).write()\n"
    },
    {
      "id": "mxx8fEp0o",
      "date": 1607651469215,
      "content": "\n"
    },
    {
      "id": "GUQgPPC5x",
      "date": 1607651465219,
      "content": "                    db.set('notes', e.target.value).write()\n"
    },
    {
      "id": "152bDjPSE",
      "date": 1607651463217,
      "content": "notes"
    },
    {
      "id": "vrIVlmmIs",
      "date": 1607651437714,
      "content": "                initialValue={notes}\n"
    },
    {
      "id": "GmgB7535R",
      "date": 1607651431217,
      "content": "asd"
    },
    {
      "id": "xZZBLyIgP",
      "date": 1607651418718,
      "content": "            {notes}\n"
    },
    {
      "id": "vntsXMJzh",
      "date": 1607651413216,
      "content": "notes"
    },
    {
      "id": "O31_O4btI",
      "date": 1607651411218,
      "content": "                initi\n"
    },
    {
      "id": "gKaS-QdoJ",
      "date": 1607651399218,
      "content": "                value={notes}\n"
    },
    {
      "id": "xD25iczJ6",
      "date": 1607651388218,
      "content": "notes"
    },
    {
      "id": "uBVxCKCQ5",
      "date": 1607651385716,
      "content": ", e.target.value"
    },
    {
      "id": "GybcPaGAn",
      "date": 1607651381716,
      "content": "db.set('notes', e.target.value)"
    },
    {
      "id": "WqWD_aBYA",
      "date": 1607651268719,
      "content": "db.set('user.name', 'typicode')\n  .write()\n"
    },
    {
      "id": "MuOBE2GgK",
      "date": 1607651258720,
      "content": "db"
    },
    {
      "id": "Ayvz2_ltP",
      "date": 1607651233721,
      "content": "e.target.value"
    },
    {
      "id": "NDsHRbzmU",
      "date": 1607651158822,
      "content": "import 'ace-builds/src-noconflict/theme-github'\n"
    },
    {
      "id": "BWQg97wzz",
      "date": 1607651157325,
      "content": "\n        <>\n            <div className='space-y-2'>\n                {clipboards\n                    ?.sort(function (a, b) {\n                        var dateA = new Da"
    },
    {
      "id": "Fc2axd5f_",
      "date": 1607651154820,
      "content": "\n                {clipboards\n                    ?.sort(function (a, b) {\n                        var dateA = new Date(b.date)\n                        var dateB = new Date(a.date)\n"
    },
    {
      "id": "0_OYQ_PZv",
      "date": 1607651137325,
      "content": "\n                {clipboards"
    },
    {
      "id": "Rpyh0HiCy",
      "date": 1607651133324,
      "content": "\n                    ?.sort(function (a, b) {\n                        var dateA = new Date(a.date)\n                        var dateB = new Date(b.date)\n\n                        if (dateA < dateB) {\n                            return -1\n                        }\n                        if (dateA > dateB) {\n                            return 1"
    },
    {
      "id": "uzaMkEfbv",
      "date": 1607651124324,
      "content": "                        if (dateA > dateB) {\n"
    },
    {
      "id": "Fn7xuTZ8i",
      "date": 1607651115320,
      "content": "date"
    },
    {
      "id": "rE25-EoCX",
      "date": 1607651102823,
      "content": ".sort(function(a, b) {\n  var dateA = new Date(a.noteDate);\n  var dateB = new Date(b.noteDate);\n\n  if (dateA < dateB ) {\n    return -1;\n  }\n  if (dateA > dateB ) {\n    return 1;\n  }\n  return 0;\n});"
    },
    {
      "id": "5e2yzqtEu",
      "date": 1608088988394,
      "content": "\n\nShow site Upgrade account on Heroku Almont done with API testing Starting Front-end, I have previews Billing"
    },
    {
      "id": "9fztgNcrR",
      "date": 1608088992603,
      "content": "239 775 5132"
    },
    {
      "id": "B22f31DEE",
      "date": 1608088993201,
      "content": "Alicia\n\nApple store 5-9 days\n"
    },
    {
      "id": "AfrCTTlPm",
      "date": 1608089019501,
      "content": "const { join } = require('path')\n"
    },
    {
      "id": "rkMQ5laaL",
      "date": 1608089025502,
      "content": "join(__dirname, '../renderer/out/index.html')"
    }
  ],
  "notes": "things i need to do today dec 11\n\n- contact sasha about inboxes\n2g4N/&~\"8\"R%;wyZ\n\n- ? make some progress on 402k proj\n\n"
}